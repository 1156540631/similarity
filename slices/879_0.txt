VAR1 = fread(VAR8, 1, VAR2->VAR9, VAR3);
if (VAR1 != VAR2->VAR9) {
VAR1, VAR2->VAR9);
fprintf(stderr, "%VAR4: VAR6 short FUN2 VAR9 %d != %d\VAR1",
VAR4->VAR5 = VAR9 + VAR2->VAR9;
VAR14->VAR10 = VAR4->VAR5;
VAR8 = VAR2->VAR7 + VAR2->VAR9 - VAR12;
if (memcmp(VAR8, VAR13, VAR12) != 0) {
VAR2->VAR9 -= VAR12;
FUN1(VAR2->VAR7, VAR2->VAR9);
void FUN3(SSL *VAR4)
CLASS1	*VAR2 = &VAR4->VAR1->VAR1;
CLASS2	*VAR14 = &VAR4->VAR1->VAR15;
VAR17 = (VAR4->VAR1->VAR22 << 8) | VAR4->VAR1->VAR16;
if (VAR4->VAR17 != VAR17)
if (VAR2->VAR9 > VAR4->VAR1->VAR15.VAR19 - VAR9)  {
VAR2->VAR9, VAR4->VAR1->VAR15.VAR19 - VAR9);
VAR4->VAR6 = &(VAR4->VAR1->VAR15.VAR27[0]);
FUN3(VAR4);
FUN4(VAR4);
void FUN4(SSL *VAR4)
CLASS1	*VAR2 = &VAR4->VAR1->VAR1;
FUN4(VAR4);
(void) FUN5(VAR4);
VAR4->VAR18++;
int FUN6(SSL *VAR4, int VAR11, unsigned char *VAR27, int VAR19, int VAR20)
CLASS1	*VAR2 = &VAR4->VAR1->VAR1;
FUN3(VAR4);
VAR1 = FUN6(VAR4, VAR21,
if (VAR1 == -1 && !VAR4->VAR18)
int FUN6(SSL *VAR4, int VAR11, unsigned char *VAR27, int VAR19, int VAR20)
FUN3(VAR4);
void FUN3(SSL *VAR4)
FUN3(VAR4);
FUN4(VAR4);
void FUN4(SSL *VAR4)
FUN4(VAR4);
int FUN6(SSL *VAR4, int VAR11, unsigned char *VAR27, int VAR19, int VAR20)
VAR1 = FUN6(VAR4, VAR21,
int FUN6(SSL *VAR4, int VAR11, unsigned char *VAR27, int VAR19, int VAR20)
FUN3(VAR4);
void FUN3(SSL *VAR4)
FUN3(VAR4);
FUN4(VAR4);
void FUN4(SSL *VAR4)
FUN4(VAR4);
int FUN6(SSL *VAR4, int VAR11, unsigned char *VAR27, int VAR19, int VAR20)
VAR1 = FUN6(VAR4, VAR21,
int FUN6(SSL *VAR4, int VAR11, unsigned char *VAR27, int VAR19, int VAR20)
FUN3(VAR4);
void FUN3(SSL *VAR4)
FUN3(VAR4);
FUN4(VAR4);
void FUN4(SSL *VAR4)
FUN4(VAR4);
int FUN6(SSL *VAR4, int VAR11, unsigned char *VAR27, int VAR19, int VAR20)
VAR1 = FUN6(VAR4, VAR21,
int FUN6(SSL *VAR4, int VAR11, unsigned char *VAR27, int VAR19, int VAR20)
FUN3(VAR4);
void FUN3(SSL *VAR4)
VAR4->VAR17, VAR17);
void FUN1(unsigned char *ptr, int VAR19)
for (VAR28 = 0; VAR28 < VAR19; VAR28++)
