void CLASS1::FUN1(CLASS2* VAR6,
FUN2(VAR6, VAR3, VAR2);
CLASS3& VAR2)
VAR1 = new CLASS4(VAR6->FUN3());
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
CLASS3& VAR2)
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
CLASS3& VAR2)
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
CLASS3& VAR2)
FUN5(VAR4)
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
VAR2.VAR5 = true;
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
CLASS3& VAR2)
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
VAR2.VAR7 = true;
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
void CLASS1::FUN6(CLASS2* VAR6,
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
void CLASS1::FUN7(CLASS2* VAR6,
FUN5(VAR8)
FUN5(VAR4)
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
void CLASS1::FUN8(CLASS2* VAR6, CLASS5 VAR9, CLASS3& VAR2)
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
void CLASS1::FUN9(CLASS2* VAR6,
FUN5(VAR10)
if (VAR6->FUN3().VAR10) {
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
void CLASS1::FUN10(CLASS2* VAR6,
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
void CLASS1::FUN11(CLASS2* VAR6,
FUN5(VAR10)
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
CLASS3& VAR2)
FUN2(VAR6, VAR3, VAR2);
void CLASS1::FUN12(CLASS2* VAR6,
FUN4(VAR6->FUN3(), VAR2);
FUN1(VAR6, VAR2);
