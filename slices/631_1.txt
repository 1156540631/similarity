CLASS1 *VAR1 = FUN1(VAR4->VAR2.VAR3);
CLASS1 *VAR1 = FUN1(VAR4->VAR2.VAR3);
struct CLASS2 *VAR5)
VAR6 = FUN2(VAR5->VAR24, VAR5->VAR25);
FUN3(VAR4->VAR2.VAR3, VAR6);
struct CLASS2 VAR8;
VAR8.VAR9 = FUN4(VAR4);
VAR8.VAR10 = FUN4(VAR4);
VAR8.VAR24 = VAR11 = FUN4(VAR4);
VAR8.VAR25 = VAR12 = FUN4(VAR4);
VAR8.VAR13 = FUN4(VAR4);
if (FUN5(VAR11, VAR12) > sizeof VAR8.VAR14 ||
FUN6(VAR11, VAR12, VAR8.VAR13) > sizeof VAR8.VAR15) {
VAR8.VAR14[VAR16] = FUN7(VAR4);
VAR8.VAR15[VAR16] = FUN7(VAR4);
FUN8(VAR4, &VAR8);
struct CLASS2 *VAR5)
__func__, VAR5->VAR13);
FUN9(VAR4->VAR17, VAR18);
FUN10(VAR4->VAR17, VAR18);
FUN11(VAR4);
CLASS1 *VAR1 = FUN1(VAR4->VAR2.VAR3);
VAR4->VAR2.VAR20);
FUN12(VAR4->VAR2.VAR3, VAR1);
struct CLASS3 *VAR4 = VAR21;
FUN18(VAR4, VAR22, VAR7);
static void FUN11(struct CLASS3 *VAR4)
VAR19 = FUN13(VAR4);
static inline int FUN13(struct CLASS3 *VAR4)
VAR19 = FUN13(VAR4);
VAR8.VAR23 = FUN4(VAR4);
static inline uint32_t FUN4(struct CLASS3 *VAR4)
return FUN14(FUN7(VAR4));
FUN4(VAR4);
FUN4(VAR4);
VAR16 = 7 + (FUN4(VAR4) >> 2);
FUN4(VAR4);
VAR8.VAR23 = FUN4(VAR4);
static inline uint32_t FUN7(struct CLASS3 *VAR4)
uint32_t VAR26 = VAR4->FUN15[VAR26(VAR27) >> 2];
return VAR26;
return FUN14(FUN7(VAR4));
VAR8.VAR23 = FUN4(VAR4);
FUN8(VAR4, &VAR8);
struct CLASS2 *VAR5)
__func__, VAR5->VAR13);
static inline void FUN16(struct CLASS3 *VAR4)
FUN16(VAR4);
FUN11(VAR4);
static void FUN17(void *VAR21)
FUN16(VAR4);
static inline void FUN8(struct CLASS3 *VAR4,
FUN8(VAR4, &VAR8);
FUN4(VAR4);
static void FUN18(void *VAR21, uint32_t address, uint32_t VAR18)
FUN19(VAR4->VAR17, VAR18);
FUN11(VAR4);
static inline int FUN20(struct CLASS3 *VAR4,
if (FUN20(VAR4, VAR28, VAR11, VAR12, VAR24, VAR25) == 0) {
FUN4(VAR4);
static void FUN21(void *VAR21, hwaddr VAR22,
FUN18(VAR4, VAR22, VAR7);
static inline int FUN22(struct CLASS3 *VAR4,
if (FUN22(VAR4, VAR11, VAR12, dx, dy, VAR24, VAR25) == 0) {
VAR8.VAR23 = FUN4(VAR4);
