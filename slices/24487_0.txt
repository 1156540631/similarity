VAR1 = 1;
VAR1 = (FUNC12(VAR24));
VAR1 = ((VAR1 > VAR4 -> VAR25 - (VAR4 -> VAR10)?VAR4 -> VAR25 - (VAR4 -> VAR10) : VAR1));
VAR2 += VAR1 - 1;
if (!FUNC11(VAR4)) {
FUNC13(VAR4);
double VAR3 = 0;
VAR3 = 1 / (FUNC18(VAR4 -> frame_rate) * FUNC18(VAR26 -> VAR36));
VAR7 = (VAR23 -> VAR30);
VAR24 = VAR7 - (VAR4 -> VAR8) + VAR3;
VAR1 = 1;
VAR1 = 0;
VAR1 = (FUNC12(VAR24));
VAR1 = 0;
VAR1 = ((VAR1 > VAR4 -> VAR25 - (VAR4 -> VAR10)?VAR4 -> VAR25 - (VAR4 -> VAR10) : VAR1));
VAR2 += VAR1 - 1;
if (!FUNC11(VAR4)) {
VAR5++;
VAR5++;
VAR2 += VAR1 - 1;
if (!FUNC11(VAR4)) {
if (!VAR4 -> VAR6 && !(VAR4 -> VAR6 = FUNC20())) {
FUNC14(VAR4 -> VAR6);
VAR6 = VAR4 -> VAR6;
FUNC14(VAR6,VAR32);
FUNC10(VAR33 -> VAR34,VAR4,VAR6);
int64_t VAR30 = - 9223372036854775807L - 1;
static int VAR9['4'];
VAR41 = FUNC15(VAR42 -> VAR43);
VAR41 = FUNC16(VAR42 -> VAR43);
VAR12[0] = '\0';
float VAR35 = (- 1);
VAR35 = (VAR26 -> VAR31 -> VAR35uality) / ((float )'v');
FUNC19(&VAR19,"stream_%d_%d_VAR35=%.1f\n",VAR4 -> VAR21,VAR4 -> VAR22,VAR35);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"VAR35=%2.1f ",VAR35);
VAR10 = VAR4 -> VAR10;
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"frame=%5d VAR11=%3.*f VAR35=%3.1f ",VAR10,VAR11 < 9.95,VAR11,VAR35);
FUNC19(&VAR19,"frame=%d\n",VAR10);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"L");
if (VAR29 >= 0 && VAR29 < sizeof(VAR9) / sizeof(VAR9[0])) {
VAR9[VAR29]++;
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"%X",((int )(FUNC12((log2((VAR9[j] + 1)))))));
double VAR15 = 0;
double VAR16 = 0;
char VAR20[3] = {('Y'), ('U'), ('V')};
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"PSNR=");
VAR17 = VAR26 -> VAR17[j];
VAR18 = (VAR26 -> VAR27 * VAR26 -> VAR28) * 255.0 * 255.0 * VAR10;
VAR17 = VAR26 -> VAR31 -> VAR17[j];
VAR18 = (VAR26 -> VAR27 * VAR26 -> VAR28) * 255.0 * 255.0;
VAR18 /= 4;
VAR15 += VAR17;
VAR16 += VAR18;
p = FUNC9(VAR17 / VAR18);
FUNC19(&VAR19,"stream_%d_%d_FUNC9_%c=%2.2f\n",VAR4 -> VAR21,VAR4 -> VAR22,VAR20[j] | 32,p);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"%c:%2.2f ",VAR20[j],p);
p = FUNC9(VAR15 / VAR16);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"*:%2.2f ",FUNC9(VAR15 / VAR16));
bitrate = (VAR30 && VAR41 >= 0?(VAR41 * 8) / (VAR30 / 1000.0) : (- 1));
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"size=N/A time=");
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"size=%8.0fkB time=",VAR41 / 1024.0);
FUNC19(&VAR19,"dup_frames=%d\n",VAR2);
FUNC19(&VAR19,"drop_frames=%d\n",VAR5);
return FUNC2();
ret = FUNC2();
if ((ret = FUNC1(VAR4 -> filter -> graph,&VAR10)) < 0) {
return FUNC2();
ret = FUNC3();
FUNC4(0,VAR13,VAR14);
FUNC5();
FUNC6();
FUNC7();
FUNC4(1,VAR13,FUNC8());
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"%02d:%02d:%02d.%02d ",VAR37,VAR38,VAR39,100 * VAR40 / 1000000);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"bitrate=N/A");
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"bitrate=%6.1fkbits/s",bitrate);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12)," dup=%d drop=%d",VAR2,VAR5);
static double FUNC9(double d)
return - 10.0 * log(d) / log(10.0);
p = FUNC9(VAR17 / VAR18);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"%c:%2.2f ",VAR20[j],p);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"*:%2.2f ",FUNC9(VAR15 / VAR16));
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"VAR35=%2.1f ",VAR35);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"size=N/A time=");
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"%02d:%02d:%02d.%02d ",VAR37,VAR38,VAR39,100 * VAR40 / 1000000);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"bitrate=N/A");
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12)," dup=%d drop=%d",VAR2,VAR5);
static void FUNC10(AVFormatContext *s,OutputStream *VAR4,AVFrame *VAR23)
VAR7 = (VAR23 -> VAR30);
VAR24 = VAR7 - (VAR4 -> VAR8) + VAR3;
VAR1 = (FUNC12(VAR24));
VAR1 = ((VAR1 > VAR4 -> VAR25 - (VAR4 -> VAR10)?VAR4 -> VAR25 - (VAR4 -> VAR10) : VAR1));
VAR2 += VAR1 - 1;
FUNC10(VAR33 -> VAR34,VAR4,VAR6);
return FUNC2();
ret = FUNC3();
FUNC4(0,VAR13,VAR14);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12),"%02d:%02d:%02d.%02d ",VAR37,VAR38,VAR39,100 * VAR40 / 1000000);
snprintf(VAR12 + strlen(VAR12),sizeof(VAR12) - strlen(VAR12)," dup=%d drop=%d",VAR2,VAR5);
