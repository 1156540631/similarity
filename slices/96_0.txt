wcsncpy(VAR7, VAR6[2], VAR2);
bool VAR8 = FUN2(VAR5, VAR6);
VAR9);
CALSS3 VAR10 = FUN3(VAR4[0], NULL,
if (!FUN4(VAR10, VAR11,
FUN5(VAR10);
if (!FUN6(VAR12)) {
if (!FUN1(VAR12, L"update")) {
FUN7(VAR12, NULL);
if (!FUN1(VAR12, L"updater.exe")) {
VAR3 = FUN8(VAR12);
VAR12));
if (FUN9(VAR1, VAR12,
CLASS1 VAR13[VAR2 + 1] = { L'\0' };
VAR3 = FUN10(VAR13);
VAR14, VAR13));
FUN11(VAR13);
VAR4[3] = VAR13;
VAR3 = FUN12(VAR3 - 3, VAR4 + 3);
FUN2(int VAR3, CLASS2 *VAR4)
return VAR3 == 4 && !wcscmp(VAR4[3], L"-1");
bool VAR15 = (VAR5 >= 4 && wcsstr(VAR6[3], L"/replace"));
if (!FUN13(VAR4[0], VAR16) || !VAR16) {
CLASS4 FUN14(FUN15(VAR4[0], VAR17, VAR18,
if (VAR3 && !FUN16(VAR4[0], VAR19,
CALSS3 VAR10 = FUN3(VAR4[0], NULL,
if (!FUN4(VAR10, VAR11,
FUN5(VAR10);
FUN11(CLASS1 VAR12[VAR2 + 1])
VAR3 = FUN17(VAR14, VAR13, FALSE);
VAR4[3] = VAR13;
VAR3 = FUN12(VAR3 - 3, VAR4 + 3);
FUN12(CLASS2 VAR3, CLASS2 *VAR4)
if (!FUN1(VAR3, VAR4, VAR1)) {
FUN1(int VAR5, CLASS2 *VAR6, CLASS1 VAR7[VAR2 + 1])
if (!FUN13(VAR4[0], VAR16) || !VAR16) {
CLASS4 FUN14(FUN15(VAR4[0], VAR17, VAR18,
if (VAR3 && !FUN16(VAR4[0], VAR19,
CALSS3 VAR10 = FUN3(VAR4[0], NULL,
if (!FUN4(VAR10, VAR11,
FUN5(VAR10);
BOOL FUN9(CLASS2 VAR20,  CLASS1 VAR21,
VAR3 = FUN17(VAR14, VAR13, FALSE);
VAR4[3] = VAR13;
VAR3 = FUN12(VAR3 - 3, VAR4 + 3);
FUN10(CLASS1 VAR12[VAR2 + 1])
if (!FUN18(NULL, VAR12, VAR2)) {
VAR4[3] = VAR13;
VAR3 = FUN12(VAR3 - 3, VAR4 + 3);
