if (!VAR1) VAR1 = ", ";
VAR2 = FUN1((5 + strlen(VAR1)) * VAR21);
VAR6   = VAR2;
int VAR3 = snprintf(VAR2, 5 + strlen(VAR1), "%d%VAR4", VAR5[VAR28], VAR1);
VAR6[strlen(VAR6) - strlen(VAR1)] = '\0';
VAR10   = FUN2(&VAR4->VAR7, VAR4->VAR8);
VAR11  = FUN2(&VAR4->VAR7, VAR4->VAR8);
VAR21 = FUN3(&VAR4->VAR7, VAR4->VAR8);
VAR9   = FUN3(&VAR4->VAR7, VAR4->VAR8);
FUN4(VAR21, "ModelPixelScaleTag", NULL);
FUN4(VAR21, "ModelTransformationTag", NULL);
FUN4(VAR21, "ModelTiepointTag", NULL);
FUN4(1, "GeoTIFF_Version", NULL);
FUN4(2, "GeoTIFF_Key_Revision", ".");
FUN4(VAR21, "artist", NULL);
FUN4(VAR21, "copyright", NULL);
FUN4(VAR21, "date", NULL);
FUN4(VAR21, "document_name", NULL);
FUN4(VAR21, "computer", NULL);
FUN4(VAR21, "description", NULL);
FUN4(VAR21, "make", NULL);
FUN4(VAR21, "model", NULL);
FUN4(VAR21, "page_name", NULL);
FUN4(VAR21, "page_number", " / ");
FUN4(VAR21, "software", NULL);
const char *VAR12, const char *VAR1, CLASS1 *VAR4)
case VAR13 : return FUN5(VAR21, VAR12, VAR1, VAR4);
const char *VAR1, CLASS1 *VAR4)
if (VAR21 >= INT_MAX / sizeof(int16_t) || VAR21 <= 0)
if (FUN6(&VAR4->VAR7) < VAR21 * sizeof(int16_t))
VAR5 = FUN1(VAR21 * sizeof(int16_t));
VAR2 = FUN7(VAR5, VAR21, VAR1);
static char *FUN7(int16_t *VAR5, int VAR21, const char *VAR1)
VAR2 = FUN1((5 + strlen(VAR1)) * VAR21);
VAR6   = VAR2;
VAR6[strlen(VAR6) - strlen(VAR1)] = '\0';
static int FUN4(int VAR21, int VAR11,
case VAR13 : return FUN5(VAR21, VAR12, VAR1, VAR4);
static int FUN5(int VAR21, const char *VAR12,
VAR5 = FUN1(VAR21 * sizeof(int16_t));
VAR2 = FUN7(VAR5, VAR21, VAR1);
static unsigned FUN2(CLASS2 *VAR7, int VAR8)
unsigned VAR14 = VAR8 ? FUN8(VAR7) : FUN9(VAR7);
VAR10   = FUN2(&VAR4->VAR7, VAR4->VAR8);
VAR11  = FUN2(&VAR4->VAR7, VAR4->VAR8);
VAR21 = FUN3(&VAR4->VAR7, VAR4->VAR8);
static unsigned FUN3(CLASS2 *VAR7, int VAR8)
unsigned VAR14 = VAR8 ? FUN10(VAR7) : FUN11(VAR7);
return VAR14;
VAR21 = FUN3(&VAR4->VAR7, VAR4->VAR8);
VAR9   = FUN3(&VAR4->VAR7, VAR4->VAR8);
FUN4(VAR21, "software", NULL);
