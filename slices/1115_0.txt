static CLASS1 *FUN1(CLASS2 *VAR1)
VAR2 = FUN1(VAR1);
if (!strncmp((VAR1 -> VAR3),"expr:",5)) {
FUN2(VAR1 -> VAR3,VAR1,VAR1 -> VAR7 -> VAR8);
static void FUN2(char *VAR5,CLASS2 *VAR1,CLASS3 *VAR6)
int VAR9 = 1;
int64_t *VAR10;
VAR11 = VAR9;
VAR10 = (FUN3(sizeof(( *VAR10)) * VAR11));
VAR12 = VAR5;
char *VAR13 = strchr(VAR12,',');
*(VAR13++) = 0;
if (!memcmp(VAR12,"VAR18",8)) {
if (VAR14 -> VAR15 > (2147483647 - VAR11) || !(VAR10 = (FUN4(VAR10,(VAR11 += VAR14 -> VAR15 - 1),sizeof(( *VAR10)))))) {
VAR16 = (VAR12[8]?FUN5("force_key_frames",(VAR12 + 8),1) : 0);
AVChapter *VAR17 = VAR14 -> VAR18[VAR19];
VAR10[VAR20++] = FUN6(VAR17 -> VAR21,VAR17 -> VAR22,VAR6 -> VAR22) + VAR16;
if (VAR14 -> VAR15 > (2147483647 - VAR11) || !(VAR10 = (FUN4(VAR10,(VAR11 += VAR14 -> VAR15 - 1),sizeof(( *VAR10)))))) {
VAR12 = VAR13;
char *VAR13 = strchr(VAR12,',');
if (!memcmp(VAR12,"VAR18",8)) {
VAR16 = (VAR12[8]?FUN5("force_key_frames",(VAR12 + 8),1) : 0);
VAR10[VAR20++] = FUN6(VAR17 -> VAR21,VAR17 -> VAR22,VAR6 -> VAR22) + VAR16;
FUN13(VAR10,VAR11,sizeof(( *VAR10)),VAR23);
VAR1 = VAR40[VAR4];
VAR2 = FUN1(VAR1);
VAR1 -> VAR7 -> VAR24 = VAR2 -> VAR7 -> VAR24;
if (VAR25 < 0 && FUN14(VAR2 -> VAR7 -> VAR26) >= FUN14(VAR2 -> VAR7 -> VAR27) && 0.5 / FUN14(VAR2 -> VAR7 -> VAR26) > FUN14(VAR2 -> VAR7 -> VAR22) && 0.5 / FUN14(VAR2 -> VAR7 -> VAR26) > FUN14(VAR39 -> VAR22) && FUN14(VAR2 -> VAR7 -> VAR22) < 1.0 / 500 && FUN14(VAR39 -> VAR22) < 1.0 / 500 || VAR25 == 2) {
VAR1 -> VAR7 -> VAR27 = VAR2 -> VAR7 -> VAR27;
VAR2 = FUN1(VAR1);
int VAR28 = FUN7(VAR1 -> VAR29,VAR1 -> VAR30 -> VAR31);
VAR1 -> VAR29 = VAR1 -> VAR30 -> VAR31[VAR28];
VAR2 = FUN1(VAR1);
VAR8 -> VAR32 = FUN8(VAR1 -> VAR33 -> VAR33 -> VAR34[0]);
VAR1 -> VAR29 = FUN9(VAR1 -> VAR33 -> VAR33);
VAR2 = FUN1(VAR1);
VAR8 -> VAR35 = VAR1 -> VAR33 -> VAR33 -> VAR34[0] -> w;
VAR8 -> VAR36 = VAR1 -> VAR33 -> VAR33 -> VAR34[0] -> h;
VAR8 -> VAR37 = VAR1 -> VAR7 -> VAR37 = (VAR1 -> VAR38?FUN10((VAR1 -> VAR38 * (VAR8 -> VAR36) / (VAR8 -> VAR35)),255) : VAR1 -> VAR33 -> VAR33 -> VAR34[0] -> VAR37);
VAR2 = FUN1(VAR1);
VAR1 -> VAR30 = FUN11(VAR8 -> codec_id);
snprintf(VAR41,sizeof(VAR41),"Encoder (VAR8 %s) not found for output stream #%d:%d",FUN12(VAR1 -> VAR7 -> VAR8 -> codec_id),VAR1 -> file_index,VAR1 -> VAR20);
FUN2(VAR1 -> VAR3,VAR1,VAR1 -> VAR7 -> VAR8);
static void FUN2(char *VAR5,CLASS2 *VAR1,CLASS3 *VAR6)
FUN2(VAR1 -> VAR3,VAR1,VAR1 -> VAR7 -> VAR8);
static void FUN2(char *VAR5,CLASS2 *VAR1,CLASS3 *VAR6)
FUN2(VAR1 -> VAR3,VAR1,VAR1 -> VAR7 -> VAR8);
static void FUN2(char *VAR5,CLASS2 *VAR1,CLASS3 *VAR6)
VAR12 = VAR5;
char *VAR13 = strchr(VAR12,',');
if (!memcmp(VAR12,"VAR18",8)) {
VAR16 = (VAR12[8]?FUN5("force_key_frames",(VAR12 + 8),1) : 0);
VAR10[VAR20++] = FUN6(VAR17 -> VAR21,VAR17 -> VAR22,VAR6 -> VAR22) + VAR16;
FUN13(VAR10,VAR11,sizeof(( *VAR10)),VAR23);
