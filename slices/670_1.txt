static int FUN1(CLASS1 *VAR6, void *VAR7,
const uint8_t *VAR27 = VAR9->VAR7;
int VAR1 = 128;
VAR3 = FUN2(&VAR27[0]);
VAR5  = FUN2(&VAR27[2]);
VAR27 += 4;
VAR4->VAR29.VAR2 = VAR3;
if ((VAR23 = VAR6->FUN3(VAR6, &VAR4->VAR29)) < 0) {
VAR6     = VAR4->VAR29.VAR7[0];
VAR21 = *VAR27 & 0x3F;
case 0:  VAR8 = 4;                              break;
case 2:  VAR8 = (VAR21 & 0x20) ? 1 : VAR21 + 1; break;
default: VAR8 = VAR21 + 1;                      break;
VAR7 = *VAR27++;
VAR1 = FUN4(VAR1);
*VAR6++ = VAR1;
VAR1 += ((VAR7 >> 2) & 0x3) - 2;
VAR1 = FUN4(VAR1);
*VAR6++ = VAR1;
VAR1 += ((VAR7 >> 4) & 0x3) - 2;
VAR1 = FUN4(VAR1);
*VAR6++ = VAR1;
VAR1 +=  (VAR7 >> 6)        - 2;
VAR1 = FUN4(VAR1);
*VAR6++ = VAR1;
VAR7 = *VAR27++;
VAR21 = *VAR27 & 0x3F;
case 0:  VAR8 = 4;                              break;
case 1:  VAR8 = 2;                              break;
case 2:  VAR8 = (VAR21 & 0x20) ? 1 : VAR21 + 1; break;
default: VAR8 = VAR21 + 1;                      break;
VAR7 = *VAR27++;
VAR1 += ( VAR7       & 0x3) - 2;
VAR1 = FUN4(VAR1);
*VAR6++ = VAR1;
VAR1 += FUN5[VAR7 & 0xF];
VAR1 = FUN4(VAR1);
*VAR6++ = VAR1;
VAR1 += FUN5[VAR7 >> 4];
VAR1 = FUN4(VAR1);
*VAR6++ = VAR1;
t = VAR21;
t <<= 3;
VAR1 += t >> 3;
VAR1 = FUN4(VAR1);
*VAR6++ = VAR1;
memcpy(VAR6, VAR27, VAR8);
VAR6 += VAR8;
memcpy(VAR6, VAR27, VAR8);
VAR27     += VAR8;
memcpy(VAR6, VAR27, VAR8);
VAR1 = VAR27[-1];
VAR1 = FUN4(VAR1);
*VAR6++ = VAR1;
memcpy(VAR6, VAR27, VAR8);
memset(VAR6, VAR1, VAR8);
VAR6 += VAR8;
memcpy(VAR6, VAR27, VAR8);
