VAR15 = VAR1->VAR3[VAR13];
VAR15->VAR11->VAR8= VAR15->VAR8;
VAR15->VAR39 = FUN3(VAR15->VAR11->VAR12);
FUN4(VAR15->VAR11->VAR12));
FUN5(VAR15->VAR11->VAR12);
VAR15 = VAR1->VAR3[VAR13];
if (!FUN6(VAR15, NULL))
VAR15->VAR14->VAR17 = VAR15->VAR14->VAR18 = VAR19;
if (!FUN6(VAR15, NULL))
VAR15->VAR14->VAR17 = VAR15->VAR14->VAR18 = VAR19;
if (!FUN6(VAR15, NULL))
VAR15->VAR14->VAR17     = VAR5->VAR10;
if (!FUN6(VAR15, NULL))
VAR15->VAR14->VAR20 = VAR15->VAR21;
if (!FUN6(VAR15, NULL))
VAR15->VAR14->VAR22 = VAR15->VAR21;
VAR38 = FUN7(VAR15->VAR14->VAR23, VAR15->VAR8, VAR24);
VAR15->VAR14->VAR23 += VAR5->VAR6;
if (!FUN6(VAR15, NULL))
int64_t VAR27 = VAR15->VAR14->VAR25;
double VAR10= (FUN11(VAR5->VAR10) ?  VAR5->VAR10 - VAR40 : VAR5->VAR10) * VAR4(VAR15->VAR8);
int64_t VAR6= VAR5->VAR10 - VAR27;
for (VAR13=0; VAR13<FUN8(VAR15->VAR14->VAR26[0][0]); VAR13++) {
int VAR28= FUN2(VAR13);
double VAR29= VAR10*VAR28/(1001*12);
for(VAR10=0; VAR10<2; VAR10++){
int VAR30= lrintf(VAR29+VAR10*0.5);
double VAR9= VAR29 - VAR30 + VAR10*0.5;
VAR15->VAR14->VAR26[VAR10][0][VAR13] += VAR9;
for (VAR13=0; VAR13<FUN8(VAR15->VAR14->VAR26[0][0]); VAR13++) {
if (!FUN6(VAR15, NULL))
VAR15->VAR14->VAR26[VAR10][1][VAR13] += VAR9*VAR9;
for (VAR13=0; VAR13<FUN8(VAR15->VAR14->VAR26[0][0]); VAR13++) {
if (!FUN6(VAR15, NULL))
VAR15->VAR14->VAR31++;
if (!FUN6(VAR15, NULL))
VAR15->VAR14->VAR32 = FUN9(VAR15->VAR14->VAR32, VAR6);
if (!FUN6(VAR15, NULL))
VAR15->VAR14->VAR25 = VAR5->VAR10;
if (!FUN6(VAR15, NULL))
VAR15 = VAR1->VAR3[VAR5->VAR16];
VAR15->VAR11->VAR33= av_malloc(VAR15->VAR11->VAR34 + VAR36);
memcpy(VAR15->VAR11->VAR33, VAR5->VAR7, VAR15->VAR11->VAR34);
memset(VAR15->VAR11->VAR33 + VAR13, 0, VAR36);
int VAR13= VAR15->VAR39->VAR39->FUN1(VAR15->VAR11, VAR5->VAR7, VAR5->VAR2);
VAR15->VAR11->VAR34= VAR13;
VAR15->VAR11->VAR33= av_malloc(VAR15->VAR11->VAR34 + VAR36);
memset(VAR15->VAR11->VAR33 + VAR13, 0, VAR36);
static int FUN6(CLASS3 *VAR15, const char **VAR35)
if (!FUN6(VAR15, NULL))
if(   FUN10(VAR15->VAR11) && !(VAR15->VAR41.VAR2 && VAR15->VAR5.VAR2)
static int FUN10(AVCodecContext *c){
if(   FUN10(VAR15->VAR11) && !(VAR15->VAR41.VAR2 && VAR15->VAR5.VAR2)
int VAR13= VAR15->VAR39->VAR39->FUN1(VAR15->VAR11, VAR5->VAR7, VAR5->VAR2);
VAR15->VAR11->VAR34= VAR13;
VAR15->VAR11->VAR33= av_malloc(VAR15->VAR11->VAR34 + VAR36);
memset(VAR15->VAR11->VAR33 + VAR13, 0, VAR36);
static int FUN11(int64_t VAR37) {
VAR15->VAR14->VAR18 = VAR5->VAR10;
if (!FUN6(VAR15, NULL))
static int FUN2(int VAR13){
if(VAR13<60*12) return (VAR13+1)*1001;
int VAR28= FUN2(VAR13);
double VAR29= VAR10*VAR28/(1001*12);
int VAR30= lrintf(VAR29+VAR10*0.5);
double VAR9= VAR29 - VAR30 + VAR10*0.5;
VAR15->VAR14->VAR26[VAR10][0][VAR13] += VAR9;
for (VAR13=0; VAR13<FUN8(VAR15->VAR14->VAR26[0][0]); VAR13++) {
if (!FUN6(VAR15, NULL))
