CLASS1::FUN3(CLASS1* VAR1)
FUN1(VAR1, "Must have a VAR7");
FUN20(CLASS5::FUN25(VAR1), "VAR1 must be a block");
CLASS1* VAR21 = VAR1->FUN4();
return (VAR1->FUN2() & VAR13) ||
bool VAR2 = CLASS1::FUN3(VAR3);
VAR4, VAR6, VAR2);
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
(VAR21 && !VAR21->FUN8());
return (VAR1->FUN2() & VAR13) ||
bool VAR2 = CLASS1::FUN3(VAR3);
VAR4, VAR6, VAR2);
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
CLASS1::FUN7(CLASS2& VAR5)
FUN7(VAR12);
VAR8 = FUN9(VAR12, VAR15, VAR16);
*VAR17 = FUN6() == nullptr;
FUN10(&VAR4, &VAR6);
VAR4, VAR6, VAR2);
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
*VAR18 = true;
FUN10(&VAR4, &VAR6);
VAR4, VAR6, VAR2);
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
*VAR17 = true;
FUN10(&VAR4, &VAR6);
VAR4, VAR6, VAR2);
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
CLASS1::FUN9(CLASS2& VAR5,
VAR8 = FUN9(VAR12, VAR15, VAR16);
VAR8 = FUN11(VAR12);
if (0 != VAR5.FUN21(0, VAR19)) {
CLASS1::FUN9(CLASS2& VAR5,
VAR8 = FUN9(VAR12, VAR15, VAR16);
VAR8 = FUN11(VAR12);
CLASS1::FUN11(CLASS2& VAR5)
printf(" FUN19=%d\n", VAR5.VAR7.FUN14());
CLASS1::FUN12(const CLASS3& VAR20) const
if (FUN12(VAR20) + VAR22.FUN13() <=
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
nscoord VAR14 = VAR20.FUN15();
if (FUN12(VAR20) + VAR22.FUN13() <=
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
CLASS1::FUN22(CLASS7*           VAR10,
CLASS4&     VAR11,
const CLASS3& VAR20,
FUN18(VAR10, VAR3, VAR20, VAR11, VAR25);
VAR20.VAR24, VAR20.VAR23,
VAR20.FUN19(), VAR20.FUN15());
const CLASS3 *VAR9 = &VAR20;
VAR20.FUN15() != VAR27 &&
FUN17(VAR3, VAR20.VAR28)) {
if (FUN12(VAR20) + VAR22.FUN13() <=
VAR29->VAR23 = VAR26;
CLASS6 FUN16(const_cast<CLASS3&>(*VAR9));
bool VAR2 = CLASS1::FUN3(VAR3);
FUN16.FUN24(VAR10);
if (FUN23(*VAR9, VAR11, VAR25)) {
bool VAR4, VAR6;
FUN10(&VAR4, &VAR6);
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
*VAR18 = false;
*VAR17 = false;
*VAR18 = FUN5() == nullptr;
FUN10(&VAR4, &VAR6);
VAR4, VAR6, VAR2);
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
CLASS1::FUN10(bool* VAR18, bool* VAR17)
FUN10(&VAR4, &VAR6);
VAR4, VAR6, VAR2);
CLASS2 VAR12(*VAR9, VAR10, VAR3, VAR11,
FUN7(VAR12);
