if(VAR3<60*12) return (VAR3+1)*1001;
VAR1 = VAR2->VAR4[VAR3];
VAR1->VAR5->VAR6= VAR1->VAR6;
VAR1->VAR7 = FUN14(VAR1->VAR5->VAR8);
FUN1(VAR1->VAR5->VAR8));
FUN2(VAR1->VAR5->VAR8);
VAR1 = VAR2->VAR4[VAR3];
if (!FUN3(VAR1, NULL))
VAR1->VAR9->VAR11 = VAR1->VAR9->VAR12 = VAR13;
if (!FUN3(VAR1, NULL))
VAR1->VAR9->VAR11 = VAR1->VAR9->VAR12 = VAR13;
if (!FUN3(VAR1, NULL))
VAR1->VAR9->VAR11     = VAR14->VAR15;
if (!FUN3(VAR1, NULL))
VAR1->VAR9->VAR16 = VAR1->VAR17;
if (!FUN3(VAR1, NULL))
VAR1->VAR9->VAR18 = VAR1->VAR17;
if (!FUN3(VAR1, NULL))
VAR19 = FUN4(VAR1->VAR9->VAR20, VAR1->VAR6, VAR21);
VAR1->VAR9->VAR20 += VAR14->VAR22;
if (!FUN3(VAR1, NULL))
int64_t VAR23 = VAR1->VAR9->VAR24;
double VAR15= (FUN5(VAR14->VAR15) ?  VAR14->VAR15 - CLASS1 : VAR14->VAR15) * FUN6(VAR1->VAR6);
int64_t VAR22= VAR14->VAR15 - VAR23;
for (VAR3=0; VAR3<FUN7(VAR1->VAR9->VAR25[0][0]); VAR3++) {
int VAR31= FUN8(VAR3);
double VAR29= VAR15*VAR31/(1001*12);
for(VAR28=0; VAR28<2; VAR28++){
int VAR26= FUN9(VAR29+VAR28*0.5);
double VAR30= VAR29 - VAR26 + VAR28*0.5;
VAR1->VAR9->VAR25[VAR28][0][VAR3] += VAR30;
for (VAR3=0; VAR3<FUN7(VAR1->VAR9->VAR25[0][0]); VAR3++) {
if (!FUN3(VAR1, NULL))
VAR1->VAR9->VAR25[VAR28][1][VAR3] += VAR30*VAR30;
for (VAR3=0; VAR3<FUN7(VAR1->VAR9->VAR25[0][0]); VAR3++) {
if (!FUN3(VAR1, NULL))
VAR1->VAR9->VAR32++;
if (!FUN3(VAR1, NULL))
VAR1->VAR9->VAR40 = FUN10(VAR1->VAR9->VAR40, VAR22);
if (!FUN3(VAR1, NULL))
VAR1->VAR9->VAR24 = VAR14->VAR15;
if (!FUN3(VAR1, NULL))
VAR1 = VAR2->VAR4[VAR14->VAR41];
VAR1->VAR5->VAR33= FUN11(VAR1->VAR5->VAR34 + VAR35);
memcpy(VAR1->VAR5->VAR33, VAR14->VAR27, VAR1->VAR5->VAR34);
memset(VAR1->VAR5->VAR33 + VAR3, 0, VAR35);
int VAR3= VAR1->VAR7->VAR7->FUN12(VAR1->VAR5, VAR14->VAR27, VAR14->VAR10);
VAR1->VAR5->VAR34= VAR3;
VAR1->VAR5->VAR33= FUN11(VAR1->VAR5->VAR34 + VAR35);
memcpy(VAR1->VAR5->VAR33, VAR14->VAR27, VAR1->VAR5->VAR34);
static int FUN3(CLASS2 *VAR1, const char **VAR36)
if (!FUN3(VAR1, NULL))
if(   FUN13(VAR1->VAR5) && !(VAR1->VAR37.VAR38 && VAR1->VAR39.VAR38)
static int FUN13(CLASS3 *VAR3){
if(   FUN13(VAR1->VAR5) && !(VAR1->VAR37.VAR38 && VAR1->VAR39.VAR38)
int VAR3= VAR1->VAR7->VAR7->FUN12(VAR1->VAR5, VAR14->VAR27, VAR14->VAR10);
VAR1->VAR5->VAR34= VAR3;
VAR1->VAR5->VAR33= FUN11(VAR1->VAR5->VAR34 + VAR35);
memcpy(VAR1->VAR5->VAR33, VAR14->VAR27, VAR1->VAR5->VAR34);
memset(VAR1->VAR5->VAR33 + VAR3, 0, VAR35);
memcpy(VAR1->VAR5->VAR33, VAR14->VAR27, VAR1->VAR5->VAR34);
static int FUN5(int64_t VAR42) {
VAR1->VAR9->VAR12 = VAR14->VAR15;
if (!FUN3(VAR1, NULL))
static int FUN8(int VAR3){
if(VAR3<60*12) return (VAR3+1)*1001;
int VAR31= FUN8(VAR3);
double VAR29= VAR15*VAR31/(1001*12);
int VAR26= FUN9(VAR29+VAR28*0.5);
double VAR30= VAR29 - VAR26 + VAR28*0.5;
VAR1->VAR9->VAR25[VAR28][0][VAR3] += VAR30;
for (VAR3=0; VAR3<FUN7(VAR1->VAR9->VAR25[0][0]); VAR3++) {
if (!FUN3(VAR1, NULL))
