fprintf(stderr, "%VAR1: VAR3 was > %d (%d)\n", VAR7, VAR11, VAR3);
fprintf(stderr, "%VAR1: VAR5 was < 0 (%d)\n", VAR7, VAR5);
fprintf(stderr, "%VAR1: VAR5 was > %d (%d)\n", VAR7, VAR11, VAR5);
if (VAR3 + VAR5 > FUN1(VAR10)) {
VAR7, FUN1(VAR10), VAR3, VAR5);
fprintf(stderr, "%VAR1: VAR4 was < 0 (%d)\n", VAR7, VAR4);
fprintf(stderr, "%VAR1: VAR4 was > %d (%d)\n", VAR7, VAR12, VAR4);
if (VAR4 + VAR8 > FUN2(VAR10)) {
VAR7, FUN2(VAR10), VAR4, VAR8);
CLASS1 *VAR10 = FUN3(VAR1->VAR16.VAR20);
if (!FUN4(VAR10, __func__, VAR3, VAR4, VAR5, VAR8)) {
VAR3 = 0;
VAR4 = 0;
VAR5 = FUN1(VAR10);
VAR8 = FUN2(VAR10);
VAR9 = FUN5(VAR10);
VAR13 = FUN6(VAR10) * VAR5;
VAR2 = FUN6(VAR10) * VAR3 + VAR9 * VAR4;
VAR18 = VAR1->VAR16.VAR17 + VAR2;
VAR19 = FUN7(VAR10) + VAR2;
for (VAR6 = VAR8; VAR6 > 0; VAR6--, VAR18 += VAR9, VAR19 += VAR9) {
memcpy(VAR19, VAR18, VAR13);
FUN8(VAR1->VAR21, true);
FUN9(VAR1->VAR22, VAR1->VAR23, VAR1->VAR21);
static void FUN10(void *VAR2)
FUN11(VAR1);
static inline void FUN11(struct CLASS2 *VAR1)
FUN11(VAR1);
FUN12(VAR1);
static void FUN12(struct CLASS2 *VAR1)
VAR6 = FUN13(VAR1);
FUN12(VAR1);
FUN14(VAR1);
static inline int FUN13(struct CLASS2 *VAR1)
VAR6 = FUN13(VAR1);
static void FUN12(struct CLASS2 *VAR1)
FUN12(VAR1);
FUN14(VAR1);
static inline void FUN14(struct CLASS2 *VAR1)
VAR14 = &VAR1->VAR24[VAR1->VAR15++];
FUN15(VAR1, VAR14->VAR3, VAR14->VAR4, VAR14->VAR5, VAR14->VAR8);
int VAR3, int VAR4, int VAR5, int VAR8)
if (!FUN4(VAR10, __func__, VAR3, VAR4, VAR5, VAR8)) {
int VAR3, int VAR4, int VAR5, int VAR8)
VAR13 = FUN6(VAR10) * VAR5;
VAR2 = FUN6(VAR10) * VAR3 + VAR9 * VAR4;
VAR18 = VAR1->VAR16.VAR17 + VAR2;
VAR19 = FUN7(VAR10) + VAR2;
memcpy(VAR19, VAR18, VAR13);
static inline void FUN15(struct CLASS2 *VAR1,
FUN15(VAR1, VAR14->VAR3, VAR14->VAR4, VAR14->VAR5, VAR14->VAR8);
VAR14 = &VAR1->VAR24[VAR1->VAR15++];
FUN15(VAR1, VAR14->VAR3, VAR14->VAR4, VAR14->VAR5, VAR14->VAR8);
int VAR3, int VAR4, int VAR5, int VAR8)
if (!FUN4(VAR10, __func__, VAR3, VAR4, VAR5, VAR8)) {
int VAR3, int VAR4, int VAR5, int VAR8)
fprintf(stderr, "%VAR1: VAR3 was < 0 (%d)\n", VAR7, VAR3);
VAR13 = FUN6(VAR10) * VAR5;
VAR2 = FUN6(VAR10) * VAR3 + VAR9 * VAR4;
VAR18 = VAR1->VAR16.VAR17 + VAR2;
VAR19 = FUN7(VAR10) + VAR2;
memcpy(VAR19, VAR18, VAR13);
for (VAR6 = VAR8; VAR6 > 0; VAR6--, VAR18 += VAR9, VAR19 += VAR9) {
memcpy(VAR19, VAR18, VAR13);V=
static inline bool FUN4(CLASS1 *VAR10,
VAR9 = FUN5(VAR10);
VAR13 = FUN6(VAR10) * VAR5;
for (VAR6 = VAR8; VAR6 > 0; VAR6--, VAR18 += VAR9, VAR19 += VAR9) {
memcpy(VAR19, VAR18, VAR13);
