VAR1 = VAR2;
*VAR3++ = *VAR1++;
l = *VAR1++;
l = (l & 0x7F) * 2;
return VAR1 - VAR2;
memcpy(VAR3, VAR1, l);
VAR1 += l;
return VAR1 - VAR2;
VAR1 += 2;
return VAR1 - VAR2;
return VAR1 - VAR2;
return VAR1 - VAR2;
memcpy(VAR4->VAR29.VAR7[0], VAR4->VAR5.VAR7[0],
VAR4->VAR6->VAR25 * VAR4->VAR29.VAR17[0]);
VAR8 += 2;
VAR9 = *VAR8++ * 4;
VAR10 = *VAR8++ * 4;
VAR11 = *VAR8++ * 4;
VAR12 = VAR8;
VAR13 = *VAR12++;
FUN1(VAR12, VAR4->VAR14, VAR4->VAR15);
VAR20 = &VAR4->VAR29.VAR7[0][VAR18 * VAR4->VAR29.VAR17[0] + VAR16];
VAR28 = &VAR4->VAR5.VAR7[0][VAR18 * VAR4->VAR5.VAR17[0] + VAR16];
VAR19 = *VAR12++;
VAR19 = (VAR19 & 0x7F) + 1;
if (*VAR12++ == 0xFF)
VAR19 = FUN2(VAR12, &VAR20[VAR21], VAR19, VAR22 - VAR21);
memcpy(&VAR20[VAR21], VAR12, VAR19);
VAR19 = *VAR12++;
VAR12 += VAR19;
VAR19 = *VAR12++;
if (*VAR12++ == 0xFF)
VAR19 = FUN2(VAR12, &VAR20[VAR21], VAR19, VAR22 - VAR21);
memcpy(&VAR20[VAR21], VAR12, VAR19);
VAR12 += VAR19;
if (*VAR12++ == 0xFF)
memcpy(&VAR20[VAR21], VAR12, VAR19);
memcpy(&VAR20[VAR21], &VAR28[VAR21], VAR19 + 1);
VAR20 += VAR4->VAR29.VAR17[0];
memcpy(&VAR20[VAR21], &VAR28[VAR21], VAR19 + 1);
CLASS1 *VAR4 = VAR6->VAR23;
FUN3(VAR4);
static void FUN1(const unsigned char *VAR2, unsigned char *VAR26, int VAR24)
VAR12 = VAR4->VAR14;
VAR19 = *VAR12++;
if (*VAR12++ == 0xFF)
memcpy(&VAR20[VAR21], VAR12, VAR19);
memcpy(&VAR20[VAR21], &VAR28[VAR21], VAR19 + 1);
static int FUN2(const unsigned char *VAR2, unsigned char *VAR26,
VAR19 = *VAR12++;
if (*VAR12++ == 0xFF)
memcpy(&VAR20[VAR21], VAR12, VAR19);
memcpy(&VAR20[VAR21], &VAR28[VAR21], VAR19 + 1);
static void FUN3(CLASS1 *VAR4)
const unsigned char *VAR8 = VAR4->VAR27 + 16;
VAR12 = VAR8;
VAR19 = *VAR12++;
if (*VAR12++ == 0xFF)
memcpy(&VAR20[VAR21], VAR12, VAR19);
memcpy(&VAR20[VAR21], &VAR28[VAR21], VAR19 + 1);
