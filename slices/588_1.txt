return VAR27;
CLASS4 = VAR11.FUN4(VAR2);
VAR8.FUN7(CLASS4->FUN5(), VAR2->FUN3());
return VAR27 + FUN2(VAR5) + FUN2(VAR6);
return sizeof(CLASS1) + FUN2(VAR5) +
return nullptr;
CLASS4 = VAR11.FUN4(VAR2);
VAR8.FUN7(CLASS4->FUN5(), VAR2->FUN3());
FUN2(VAR6) + FUN2(VAR19);
const char *VAR1;
VAR2 = (CLASS1 *)((char *)VAR20 + VAR20->FUN8());
VAR2 = (CLASS1 *)(VAR1 + FUN1(VAR4->VAR3));
!VAR2->FUN9())
if (((char *)VAR2 + VAR2->FUN8()) > VAR18 ||
return nullptr;
return VAR2;
while ((VAR2 = VAR11.FUN10(VAR2))) {
VAR8.FUN7(CLASS4->FUN5(), VAR2->FUN3());
return FUN1(VAR21);
VAR1 VAR8;
VAR8.FUN7(CLASS4->FUN5(), VAR2->FUN3());
const char *VAR17 = VAR8.FUN6();
vector<CLASS2> VAR22;
VAR10 = strstr(VAR17, "\VAR2");
} while (VAR10 && *(VAR17 = VAR10 + 1));
VAR10 = strstr(VAR17, "\VAR2");
CLASS2 VAR23;
sscanf(VAR17, "%VAR1 %VAR1 %VAR1", &VAR13, &VAR14, &VAR9) == 3) {
} else if (sscanf(VAR17, "VAR6 %VAR1 %VAR1 %VAR6",
&VAR23.VAR9, &VAR23.VAR24, VAR23.VAR4)) {
VAR22.FUN11(VAR23);
for (uint32_t VAR2 = 0; VAR2 < VAR22.VAR10(); VAR2++) {
CLASS2 &VAR23 = VAR22[VAR2];
char VAR25[256];
snprintf(VAR25, sizeof(VAR25), "%VAR6/", VAR23.VAR4);
if (VAR4.FUN12(VAR25) ||
