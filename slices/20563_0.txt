VAR1[0] = '\0';
float q = (- 1);
VAR2 = VAR3[i];
q = (VAR4 -> VAR5 -> VAR6) / ((float )'v');
av_bprintf(&VAR7,"stream_%d_%d_q=%.1f\n",VAR2 -> VAR16,VAR2 -> VAR17,q);
VAR8 = VAR2 -> VAR8;
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"frame=%5d fps=%3.*f q=%3.1f ",VAR8,VAR9 < 9.95,VAR9,q);
av_bprintf(&VAR7,"frame=%d\n",VAR8);
double VAR10 = 0;
double VAR11 = 0;
char VAR12[3] = {('Y'), ('U'), ('V')};
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"PSNR=");
VAR13 = VAR4 -> VAR13[j];
VAR14 = (VAR4 -> width * VAR4 -> VAR15) * 255.0 * 255.0 * VAR8;
VAR13 = VAR4 -> VAR5 -> VAR13[j];
VAR14 = (VAR4 -> width * VAR4 -> VAR15) * 255.0 * 255.0;
VAR14 /= 4;
VAR10 += VAR13;
VAR11 += VAR14;
p = FUNC1(VAR13 / VAR14);
av_bprintf(&VAR7,"stream_%d_%d_FUNC1_%c=%2.2f\n",VAR2 -> VAR16,VAR2 -> VAR17,VAR12[j] | 32,p);
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"%c:%2.2f ",VAR12[j],p);
p = FUNC1(VAR10 / VAR11);
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"*:%2.2f ",FUNC1(VAR10 / VAR11));
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"q=%2.1f ",q);
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"frame=%5d fps=%3.*f q=%3.1f ",VAR8,VAR9 < 9.95,VAR9,q);
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"L");
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"%X",((int )(lrintf((log2((VAR18[j] + 1)))))));
static double FUNC1(double d)
return - 10.0 * log(d) / log(10.0);
p = FUNC1(VAR13 / VAR14);
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"%c:%2.2f ",VAR12[j],p);
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"*:%2.2f ",FUNC1(VAR10 / VAR11));
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"q=%2.1f ",q);
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"frame=%5d fps=%3.*f q=%3.1f ",VAR8,VAR9 < 9.95,VAR9,q);
snprintf(VAR1 + strlen(VAR1),sizeof(VAR1) - strlen(VAR1),"%X",((int )(lrintf((log2((VAR18[j] + 1)))))));
