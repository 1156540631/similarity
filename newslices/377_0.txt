VAR1 = VAR2->VAR3[VAR4];
VAR1->VAR5->VAR6= VAR1->VAR6;
VAR1->VAR7 = FUN1(VAR1->VAR5->VAR8);
FUN2(VAR1->VAR5->VAR8));
FUN3(VAR1->VAR5->VAR8);
VAR1 = VAR2->VAR3[VAR4];
if (!FUN4(VAR1, VAR9))
VAR1->VAR10->VAR11 = VAR1->VAR10->VAR12 = VAR13;
if (!FUN4(VAR1, VAR9))
VAR1->VAR10->VAR11 = VAR1->VAR10->VAR12 = VAR13;
if (!FUN4(VAR1, VAR9))
VAR1->VAR10->VAR11     = VAR14->VAR15;
if (!FUN4(VAR1, VAR9))
VAR1->VAR10->VAR16 = VAR1->VAR17;
if (!FUN4(VAR1, VAR9))
VAR1->VAR10->VAR18 = VAR1->VAR17;
VAR19 = FUN5(VAR1->VAR10->VAR20, VAR1->VAR6, VAR21);
VAR1->VAR10->VAR20 += VAR14->VAR22;
if (!FUN4(VAR1, VAR9))
VAR23 VAR24 = VAR1->VAR10->VAR25;
double VAR15= (FUN6(VAR14->VAR15) ?  VAR14->VAR15 - VAR26 : VAR14->VAR15) * FUN7(VAR1->VAR6);
VAR23 VAR22= VAR14->VAR15 - VAR24;
for (VAR4=0; VAR4<FUN8(VAR1->VAR10->VAR27[0][0]); VAR4++) {
int VAR28= FUN9(VAR4);
double VAR29= VAR15*VAR28/(1001*12);
for(VAR30=0; VAR30<2; VAR30++){
int VAR31= FUN10(VAR29+VAR30*0.5);
double VAR32= VAR29 - VAR31 + VAR30*0.5;
VAR1->VAR10->VAR27[VAR30][0][VAR4] += VAR32;
for (VAR4=0; VAR4<FUN8(VAR1->VAR10->VAR27[0][0]); VAR4++) {
if (!FUN4(VAR1, VAR9))
VAR1->VAR10->VAR27[VAR30][1][VAR4] += VAR32*VAR32;
for (VAR4=0; VAR4<FUN8(VAR1->VAR10->VAR27[0][0]); VAR4++) {
if (!FUN4(VAR1, VAR9))
VAR1->VAR10->VAR33++;
if (!FUN4(VAR1, VAR9))
VAR1->VAR10->VAR34 = FUN11(VAR1->VAR10->VAR34, VAR22);
if (!FUN4(VAR1, VAR9))
VAR1->VAR10->VAR25 = VAR14->VAR15;
if (!FUN4(VAR1, VAR9))
VAR1 = VAR2->VAR3[VAR14->VAR35];
VAR1->VAR5->VAR36= FUN12(VAR1->VAR5->VAR37 + VAR38);
memcpy(VAR1->VAR5->VAR36, VAR14->VAR39, VAR1->VAR5->VAR37);
memset(VAR1->VAR5->VAR36 + VAR4, 0, VAR38);
int VAR4= VAR1->VAR7->VAR7->FUN13(VAR1->VAR5, VAR14->VAR39, VAR14->VAR40);
VAR1->VAR5->VAR37= VAR4;
VAR1->VAR5->VAR36= FUN12(VAR1->VAR5->VAR37 + VAR38);
memset(VAR1->VAR5->VAR36 + VAR4, 0, VAR38);
static int FUN4(CLASS1 *VAR1, const char **VAR41)
if (!FUN4(VAR1, VAR9))
if(   FUN14(VAR1->VAR5) && !(VAR1->VAR42.VAR43 && VAR1->VAR44.VAR43)
static int FUN14(CLASS2 *VAR45){
if(   FUN14(VAR1->VAR5) && !(VAR1->VAR42.VAR43 && VAR1->VAR44.VAR43)
int VAR4= VAR1->VAR7->VAR7->FUN13(VAR1->VAR5, VAR14->VAR39, VAR14->VAR40);
VAR1->VAR5->VAR37= VAR4;
VAR1->VAR5->VAR36= FUN12(VAR1->VAR5->VAR37 + VAR38);
memset(VAR1->VAR5->VAR36 + VAR4, 0, VAR38);
static int FUN6(VAR23 VAR46) {
VAR1->VAR10->VAR12 = VAR14->VAR15;
if (!FUN4(VAR1, VAR9))
static int FUN9(int VAR4){
if(VAR4<60*12) return (VAR4+1)*1001;
int VAR28= FUN9(VAR4);
double VAR29= VAR15*VAR28/(1001*12);
int VAR31= FUN10(VAR29+VAR30*0.5);
double VAR32= VAR29 - VAR31 + VAR30*0.5;
VAR1->VAR10->VAR27[VAR30][0][VAR4] += VAR32;
for (VAR4=0; VAR4<FUN8(VAR1->VAR10->VAR27[0][0]); VAR4++) {
if (!FUN4(VAR1, VAR9))
