static void * FUN1(void *)
do {
VAR1 = strstr(VAR2, "\n");
VAR3 VAR4;
if (VAR5 &&
sscanf(VAR2, "%d %d %d", &VAR6, &VAR7, &VAR8) == 3) {
VAR5 = false;
} else if (sscanf(VAR2, "VAR9 %d %d %s", &VAR4.VAR10, &VAR4.VAR11, VAR4.VAR12)) {
VAR13.FUN2(VAR4);   }
} CLASS1 (VAR1 && *(VAR2 = VAR1 + 1));
for (VAR14 VAR15 = 0; VAR15 < VAR13.FUN3(); VAR15++) {
VAR3 &VAR4 = VAR13[VAR15];
VAR16 = VAR17;
char VAR18[256];
FUN4(VAR18, sizeof(VAR18), "%s/", VAR4.VAR12);
CLASS1 ((VAR16 = VAR19.FUN5(VAR16))) {
VAR20 VAR21 = VAR19.FUN6(VAR16);
if (VAR21.FUN7(VAR18) ||
!VAR16->FUN8() ||
VAR21.FUN9() >= 256)
continue;
VAR4.VAR22.FUN2();
VAR23 &VAR24 = VAR4.VAR22.FUN10();
strcpy(VAR24.VAR12, VAR21.FUN11());
VAR24.VAR25 = VAR19.FUN12(VAR16);
FUN13(VAR4.VAR22.FUN14(), VAR4.VAR22.VAR1());
for (VAR14 VAR15 = 0; VAR15 < VAR13.FUN3(); VAR15++) {
VAR3 &VAR4 = VAR13[VAR15];
VAR14 VAR26 = 0;
CLASS1 (VAR27 && (!VAR4.VAR10 || VAR26++ < VAR4.VAR10)) {
for (VAR14 VAR28 = 0; VAR28 < VAR4.VAR22.FUN3(); VAR28++) {
VAR29 VAR30;
VAR30.VAR31 = VAR28;
VAR23 &VAR24 = FUN15(VAR4, VAR30);
VAR23 FUN15(VAR3& VAR4, VAR29 VAR30)
VAR14 VAR28 = VAR30.VAR31;
return VAR4.VAR22[VAR28];
VAR23 &VAR24 = FUN15(VAR4, VAR30);
CLASS2 *VAR32 = VAR33->FUN16();
wchar_t VAR34 = FUN17(VAR24.VAR35, VAR36);
FUN18((wchar_t*)VAR37, VAR34, (VAR32->VAR7 * VAR32->CLASS3 * VAR24.VAR38) / sizeof(wchar_t));
