FUN1 (*VAR1)(VAR2& , VAR3) = VAR4;
static void * FUN2(void *)
VAR5<VAR2> VAR6;
VAR2 VAR7;
if (VAR8 &&
sscanf(VAR9, "%d %d %d", &VAR10, &VAR11, &VAR12) == 3) {
VAR8 = false;
} else if (VAR7.FUN3(VAR9)) {
VAR6.FUN4(VAR7);        }
for (VAR3 VAR13 = 0; VAR13 < VAR6.FUN5(); VAR13++) {
VAR2 &VAR7 = VAR6[VAR13];
FUN1 &VAR14 = VAR1(VAR7, VAR15);
FUN1 VAR4(VAR2& VAR7, VAR3 VAR15)
return VAR7.VAR16[VAR15];
FUN1 &VAR14 = VAR1(VAR7, VAR15);
if (!VAR14.VAR17) {
VAR14.FUN6(VAR18);             }
void *VAR19;
if (VAR20->lock(VAR20, VAR17->VAR21,
VAR22 |
VAR23 |
VAR24,
0, 0, VAR10, VAR11, &VAR19)) {
FUN7("VAR25 VAR26 lock VAR27");
VAR28->FUN8(VAR17);
break;                }
if (VAR17->VAR11 == VAR14.VAR11 && VAR17->VAR29 == VAR14.VAR10) {
memcpy(VAR19, VAR14.VAR17,  VAR14.VAR10 * VAR14.VAR11 * VAR14.VAR30);
