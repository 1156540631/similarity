static void * FUN1(void *)
VAR1<VAR2> VAR3;
VAR2 VAR4;
if (VAR5 &&
sscanf(VAR6, "%d %d %d", &VAR7, &VAR8, &VAR9) == 3) {
VAR5 = false;
} else if (VAR4.FUN2(VAR6)) {
VAR3.FUN3(VAR4);        }
for (VAR10 VAR11 = 0; VAR11 < VAR3.FUN4(); VAR11++) {
VAR2 &VAR4 = VAR3[VAR11];
VAR2 VAR12[5];
VAR12[2] = VAR4;
VAR13 &VAR14 = FUN5(VAR12, VAR15);
VAR13 FUN5(VAR13 VAR12, VAR10 VAR15)
VAR13 &VAR4 = VAR12[2];
return VAR4.VAR16[VAR15];
VAR13 &VAR14 = FUN5(VAR12, VAR15);
if (!VAR14.VAR17) {
VAR14.FUN6(VAR18);             }
void *VAR19;
if (VAR20->lock(VAR20, VAR17->VAR21,
VAR22 |
VAR23 |
VAR24,
0, 0, VAR7, VAR8, &VAR19)) {
FUN7("VAR25 VAR26 lock VAR27");
VAR28->FUN8(VAR17);
break;                }
if (VAR17->VAR8 == VAR14.VAR8 && VAR17->VAR29 == VAR14.VAR7) {
memcpy(VAR19, VAR14.VAR17,  VAR14.VAR7 * VAR14.VAR8 * VAR14.VAR30);
