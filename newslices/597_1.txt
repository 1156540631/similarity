return FUN1(VAR1);
return sizeof(VAR2) + FUN2(VAR3) +
VAR4.FUN3(VAR5->VAR6, VAR7);
(VAR2 *)(VAR8 + FUN1(VAR5->VAR9));
const VAR2 * VAR6 =
if (((char *)VAR6 + VAR6->FUN4()) > (char *)VAR10)
FUN2(VAR11) + FUN5();
VAR12 VAR7 = FUN2(VAR5->VAR3);
if (((char *)VAR6 + VAR6->FUN4()) > (char *)VAR10)
return VAR13;
return VAR6;
VAR14 = VAR15.FUN6(VAR5);
VAR16.FUN3(VAR14->FUN7(), VAR5->FUN5());
return VAR6 + FUN2(VAR3) + FUN2(VAR11);
const char *VAR8;
VAR5 = (CLASS1 *)(VAR8 + FUN1(VAR10->VAR17));
!VAR5->FUN8())
if (((char *)VAR5 + VAR5->FUN4()) > VAR18 ||
return sizeof(CLASS1) + FUN2(VAR3) +
FUN2(VAR11) + FUN2(VAR19);
VAR8 = (char *)FUN9(VAR13, VAR20.VAR21, VAR22, VAR23, VAR24, 0);
FUN10(VAR8, VAR20.VAR21, VAR25);
VAR8 = VAR13;
VAR5 = (CLASS1 *)((char *)VAR26 + VAR26->FUN4());
if (!VAR15.FUN11("/system/VAR27/VAR28.VAR29")) {
FUN12 ((VAR5 = VAR15.FUN13(VAR5))) {
VAR5 = (CLASS1 *)(VAR8 + FUN1(VAR10->VAR17));
!VAR5->FUN8())
if (((char *)VAR5 + VAR5->FUN4()) > VAR18 ||
return VAR6;
VAR14 = VAR15.FUN6(VAR5);
VAR16.FUN3(VAR14->FUN7(), VAR5->FUN5());
return VAR13;
return VAR5;
FUN12 ((VAR5 = VAR15.FUN13(VAR5))) {
VAR16.FUN3(VAR14->FUN7(), VAR5->FUN5());
return FUN1(VAR30);
VAR31 VAR16;
VAR16.FUN3(VAR14->FUN7(), VAR5->FUN5());
const char *VAR32 = VAR16.FUN14();
VAR33<VAR34> VAR35;
VAR36 = strstr(VAR32, "\n");
} FUN12 (VAR36 && *(VAR32 = VAR36 + 1));
VAR36 = strstr(VAR32, "\n");
VAR34 VAR37;
sscanf(VAR32, "%d %d %d", &VAR38, &VAR39, &VAR40) == 3) {
} else if (sscanf(VAR32, "VAR41 %d %d %s",
&VAR37.VAR42, &VAR37.VAR43, VAR37.VAR44)) {
VAR35.FUN15(VAR37);
for (VAR45 VAR46 = 0; VAR46 < VAR35.FUN16(); VAR46++) {
VAR34 &VAR37 = VAR35[VAR46];
FUN17(VAR37.VAR47.FUN18(), VAR37.VAR47.VAR36());
VAR31 FUN19(const CLASS1 *VAR5)
VAR31 VAR4 = VAR15.FUN19(VAR5);
FUN12 ((VAR5 = VAR15.FUN13(VAR5))) {
VAR14 = VAR15.FUN6(VAR5);
const VAR2 * FUN6(const CLASS1 *VAR5)
(VAR2 *)(VAR8 + FUN1(VAR5->VAR9));
const VAR2 * VAR6 =
if (((char *)VAR6 + VAR6->FUN4()) > (char *)VAR10)
FUN2(VAR11) + FUN5();
return VAR6;
VAR14 = VAR15.FUN6(VAR5);
VAR16.FUN3(VAR14->FUN7(), VAR5->FUN5());
return VAR6 + FUN2(VAR3) + FUN2(VAR11);
VAR16.FUN3(VAR14->FUN7(), VAR5->FUN5());
const char *VAR32 = VAR16.FUN14();
VAR36 = strstr(VAR32, "\n");
sscanf(VAR32, "%d %d %d", &VAR38, &VAR39, &VAR40) == 3) {
} else if (sscanf(VAR32, "VAR41 %d %d %s",
&VAR37.VAR42, &VAR37.VAR43, VAR37.VAR44)) {
VAR35.FUN15(VAR37);
for (VAR45 VAR46 = 0; VAR46 < VAR35.FUN16(); VAR46++) {
VAR34 &VAR37 = VAR35[VAR46];
FUN17(VAR37.VAR47.FUN18(), VAR37.VAR47.VAR36());
const CLASS1 * FUN13(const CLASS1 *VAR26)
VAR5 = (CLASS1 *)((char *)VAR26 + VAR26->FUN4());
!VAR5->FUN8())
if (((char *)VAR5 + VAR5->FUN4()) > VAR18 ||
return VAR5;
FUN12 ((VAR5 = VAR15.FUN13(VAR5))) {
VAR16.FUN3(VAR14->FUN7(), VAR5->FUN5());
return FUN1(VAR30);
VAR16.FUN3(VAR14->FUN7(), VAR5->FUN5());
const char *VAR32 = VAR16.FUN14();
VAR36 = strstr(VAR32, "\n");
sscanf(VAR32, "%d %d %d", &VAR38, &VAR39, &VAR40) == 3) {
} else if (sscanf(VAR32, "VAR41 %d %d %s",
&VAR37.VAR42, &VAR37.VAR43, VAR37.VAR44)) {
VAR35.FUN15(VAR37);
for (VAR45 VAR46 = 0; VAR46 < VAR35.FUN16(); VAR46++) {
VAR34 &VAR37 = VAR35[VAR46];
FUN17(VAR37.VAR47.FUN18(), VAR37.VAR47.VAR36());
