rewind(VAR1);
VAR2 = fread(*VAR3,1,VAR4,VAR1);
*VAR3 = VAR5;
char *VAR6;
FUN1(&VAR6,"ENTHRONIZING_CONVERTER");
VAR7 = VAR6;
VAR8 = ((char *)VAR7);
VAR9 = (struct CLASS1*) malloc(sizeof(struct CLASS1));
VAR9->VAR10[63] = '\';
VAR9->VAR11[63] = '\';
VAR9->VAR12[63] = '\';
FUN2(VAR13, VAR14, "VAR9->VAR10", VAR9->VAR10, "VAR15-VAR16");
FUN2(VAR13, VAR14, "VAR9->VAR11", VAR9->VAR11, "VAR15-VAR16");
FUN2(VAR13, VAR14, "VAR9->VAR12", VAR9->VAR12, "VAR15-VAR16");
VAR17 = ((int )(strlen(VAR8)));
memcpy(VAR9->VAR11, VAR8, 64);
FUN3("%x",VAR9->VAR11[VAR18]);
FUN2(VAR13, VAR14, "VAR9->VAR11", VAR9->VAR11, "VAR19-VAR16");
free( VAR9);
void FUN3(char * VAR20, ...) {
FUN2(VAR13, VAR14, "VAR9->VAR11", VAR9->VAR11, "VAR19-VAR16");
free( VAR9);
void FUN1(char** VAR3, char* VAR21) {
VAR22 = FUN4(VAR21);
VAR1 = fopen(VAR22,"rb");
fseek(VAR1,0L,2);
VAR4 = ftell(VAR1);
*VAR3 = ((char *)(malloc(sizeof(char ) * (VAR4 + 1))));
FUN1(&VAR6,"ENTHRONIZING_CONVERTER");
VAR7 = VAR6;
VAR8 = ((char *)VAR7);
VAR17 = ((int )(strlen(VAR8)));
memcpy(VAR9->VAR11, VAR8, 64);
FUN2(VAR13, VAR14, "VAR9->VAR11", VAR9->VAR11, "VAR19-VAR16");
free( VAR9);
