VAR1&     VAR2,
const VAR3& VAR4,
FUN1(VAR5, this, VAR4, VAR2, VAR6);
VAR4.VAR7, VAR4.VAR8,
VAR4.FUN2(), VAR4.FUN3());
const VAR3 *VAR9 = &VAR4;
VAR4.FUN3() != VAR10 &&
FUN4(this, VAR4.VAR11)) {
if (FUN5(VAR4) + VAR12.FUN6() <=
VAR13 = new VAR3(VAR4);
VAR13->VAR8 = VAR14;
VAR9 = VAR13;
VAR15 FUN7(const_cast<VAR3&>(*VAR9));
bool VAR16 = VAR17::FUN8(this);
FUN7.FUN9(VAR5);
if (FUN10(*VAR9, VAR2, VAR6)) {
bool VAR18, VAR19;
FUN11(&VAR18, &VAR19);
VAR20 FUN12(*VAR9, VAR5, this, VAR2,
VAR18, VAR19, VAR16);
if (FUN13(VAR5)) {
FUN14(VAR5, *VAR9, VAR21, 0,
FUN15(FUN12);
FUN16(FUN12);
FUN17(&FUN12.VAR22, VAR23);
FUN17(&FUN12.VAR22, VAR24);
FUN18(FUN12.VAR22) &&
FUN19(FUN12.VAR22);
if (!FUN20(FUN12.VAR22)) {
FUN12.VAR22 |= VAR25;
FUN21(FUN12);
VAR17::FUN21(VAR20& VAR26)
VAR27<CLASS1*, 8> VAR28;
for (VAR29 VAR30 = FUN22(), VAR31 = FUN23();
VAR30 != VAR31; ++VAR30) {
if (VAR30->FUN24()) {
CLASS2* VAR32 = VAR30->FUN25();
VAR32 = FUN26(&VAR32);
static CLASS2 * FUN26(CLASS2 * * VAR33)
CLASS2 * VAR32 = *VAR33;
FUN27 (VAR32) {
VAR28.FUN28(VAR32->VAR34);
VAR32 = VAR32->FUN29();
return VAR32;
VAR32 = FUN26(&VAR32);
VAR27<CLASS1*, 8> VAR35;
for (CLASS1* VAR36 = VAR37.FUN30(); VAR36; VAR36 = VAR36->FUN31()) {
if (VAR36->FUN32() & VAR38)
continue;
VAR35.FUN28(VAR36);
if ((!VAR39 || VAR28.FUN33() != VAR35.FUN33()) && !VAR40) {
for (VAR41 = 0; VAR41 < VAR28.FUN33(); ++VAR41) {
printf("VAR42 float: %p\n", VAR28.FUN34(VAR41));
for (VAR41 = 0; VAR41 < VAR35.FUN33(); ++VAR41) {
printf("VAR43 float: %p\n", VAR35.FUN34(VAR41));
if (FUN35() && !VAR44.FUN36() &&
(VAR44.FUN37()->FUN38() ||
(0 == VAR44.FUN37()->VAR45.VAR46 &&
VAR44.FUN37() != VAR44.FUN39() &&
VAR44.FUN40().FUN41()->FUN38()))) {
VAR1 VAR47;
VAR48::VAR49 VAR50;
bool VAR51 = VAR48::FUN42(this, &VAR50);
VAR52 VAR53 = VAR51 ? VAR50.VAR54
: VAR9->VAR55.VAR56;
CLASS1* VAR57 = FUN43();
FUN44(VAR57, FUN12, VAR47, VAR53);
FUN45(!FUN46() || VAR47.VAR46 == 0,"FUN36 VAR57 VAR58 VAR59 VAR60");
if (VAR51 && !FUN46()) {
VAR61 VAR62 = VAR57->FUN47();
VAR62.VAR63 = VAR50.VAR64 - VAR47.VAR65;
VAR57->FUN48(VAR62);
VAR52 VAR66;
FUN49(*VAR9, FUN12, VAR2, &VAR66);
VAR61 VAR67 = VAR61(0, 0, VAR2.VAR68, VAR2.VAR46);
FUN50(VAR67, VAR9->VAR11,VAR66, VAR2.VAR69);
VAR2.VAR69.FUN51(VAR21);
VAR2.VAR69.FUN51(VAR70);
