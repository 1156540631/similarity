static void * FUN1(void *)
VAR1<VAR2> VAR3;
VAR2 VAR4;
if (VAR5 &&
sscanf(VAR6, "%d %d %d", &VAR7, &VAR8, &VAR9) == 3) {
VAR5 = false;
} else if (VAR4.FUN2(VAR6)) {
VAR3.FUN3(VAR4);        }
for (VAR10 VAR11 = 0; VAR11 < VAR3.FUN4(); VAR11++) {
VAR2 &VAR4 = VAR3[VAR11];
VAR12 VAR13;
VAR13.VAR14 = VAR15;
VAR16 &VAR17 = FUN5(VAR4, VAR13);
VAR16 FUN5(VAR2& VAR4, VAR12 VAR13)
VAR10 VAR15 = VAR13.VAR18;
return VAR4.VAR19[VAR15];
VAR16 &VAR17 = FUN5(VAR4, VAR13);
if (!VAR17.VAR20) {
VAR17.FUN6(VAR21);             }
void *VAR22;
if (VAR23->lock(VAR23, VAR20->VAR24,
VAR25 |
VAR26 |
VAR27,
0, 0, VAR7, VAR8, &VAR22)) {
FUN7("VAR28 VAR29 lock VAR30");
VAR31->FUN8(VAR20);
break;                }
if (VAR20->VAR8 == VAR17.VAR8 && VAR20->VAR32 == VAR17.VAR7) {
memcpy(VAR22, VAR17.VAR20,  VAR17.VAR7 * VAR17.VAR8 * VAR17.VAR33);
