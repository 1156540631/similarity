static void FUN1(CLASS1 *VAR1, CLASS2 *VAR2, CLASS3 * VAR3, int VAR4, CLASS4 *VAR5) {
VAR6 = FUN2(VAR1, VAR7, -1, ':');
VAR1, VAR7, VAR8, VAR9|VAR10);
VAR11 = FUN3(VAR1, VAR7, VAR8);
static VAR12 FUN3(CLASS1 *VAR1, int VAR7, VAR13 VAR14)
(FUN4(VAR1, VAR7, VAR15[VAR16].VAR17, VAR14) == 0))
VAR11 = FUN3(VAR1, VAR7, VAR8);
VAR7 = VAR6 + 1;
VAR7 = FUN5(VAR1, VAR7, FUN6(VAR1, VAR7));
VAR18 = FUN7(VAR1, VAR7, FUN6(VAR1, VAR7));
VAR19 = FUN2(VAR1, VAR7, -1, ' ');
FUN8(VAR20, VAR21, VAR1, VAR7, VAR8,
VAR7 = VAR19 + 1;
VAR19 = FUN2(VAR1, VAR7, -1, ' ');
VAR1, VAR7, VAR8, VAR9|VAR10);
if (FUN4(VAR1, VAR7, "AES_CM_128_HMAC_SHA1_80", VAR8) == 0) {
} else if (FUN4(VAR1, VAR7, "AES_CM_128_HMAC_SHA1_32", VAR8) == 0) {
} else if (FUN4(VAR1, VAR7, "F8_128_HMAC_SHA1_80", VAR8) == 0) {
VAR7 = VAR19 + 1;
VAR22 = FUN2(VAR1, VAR7, -1, ';');
VAR1, VAR7, VAR22-VAR7, "VAR23 VAR24");
VAR19 = FUN2(VAR1, VAR7, -1, ':');
VAR1, VAR7, VAR22-VAR7, "VAR23 VAR24");
if (FUN4(VAR1, VAR7, "inline", VAR19-VAR7) == 0) {
VAR19 = FUN2(VAR1, VAR7, -1, '|');
VAR25 = FUN7(VAR1, VAR7, VAR8);
VAR26 = FUN9(VAR1, VAR25);
FUN10(VAR27, VAR1, VAR7, VAR8, "VAR23 VAR28 VAR29");
VAR19 = FUN2(VAR1, VAR7, -1, '|');
VAR1, VAR7, VAR8, VAR9|VAR10);
VAR7   = VAR19 + 1;
VAR19 = FUN2(VAR1, VAR7, -1, ':');
FUN11(VAR27, VAR30, VAR1, VAR7, VAR8, VAR9|VAR10);
VAR7      = VAR19 + 1;
VAR19 = VAR22;
VAR8    = VAR19 - VAR7;
VAR5->VAR31 = atoi((char*)FUN7(VAR1, VAR7, VAR8));
VAR1, VAR7, VAR8, VAR9|VAR10);
VAR19 = FUN2(VAR1, VAR7, -1, ':');
FUN11(VAR27, VAR30, VAR1, VAR7, VAR8, VAR9|VAR10);
VAR7      = VAR19 + 1;
VAR5->VAR31 = atoi((char*)FUN7(VAR1, VAR7, VAR8));
VAR7 = VAR22;
VAR22 = FUN2(VAR1, VAR7, -1, ';');
VAR1, VAR7, VAR22-VAR7, "VAR23 VAR24");
VAR19 = VAR22;
VAR8    = VAR19 - VAR7;
VAR5->VAR31 = atoi((char*)FUN7(VAR1, VAR7, VAR8));
FUN10(VAR27, VAR1, VAR19 + 1, VAR8,
VAR22 = FUN2(VAR1, VAR7, -1, ';');
VAR1, VAR7, VAR22-VAR7, "VAR23 VAR24");
VAR19 = VAR22;
VAR8    = VAR19 - VAR7;
VAR5->VAR31 = atoi((char*)FUN7(VAR1, VAR7, VAR8));
VAR7 = VAR22;
VAR22 = FUN2(VAR1, VAR7, -1, ';');
VAR22 = FUN12(VAR1);
VAR1, VAR7, VAR22-VAR7, "VAR23 VAR24");
VAR19 = FUN2(VAR1, VAR7, -1, ':');
if (FUN4(VAR1, VAR7, "inline", VAR19-VAR7) == 0) {
VAR7      = VAR19 +1;
VAR19 = FUN2(VAR1, VAR7, -1, '|');
VAR7 = VAR19 + 1;
VAR19 = FUN2(VAR1, VAR7, -1, '|');
VAR19 = FUN2(VAR1, VAR7, -1, ':');
VAR7      = VAR19 + 1;
VAR19 = VAR22;
VAR8    = VAR19 - VAR7;
VAR5->VAR31 = atoi((char*)FUN7(VAR1, VAR7, VAR8));
