static void FUN1(const CLASS1 *VAR1)
int VAR2 = FUN2(VAR1);
printf("%s %s [%s]:\n",(VAR2?"Encoder" : "Decoder"),VAR1 -> VAR3,(VAR1 -> VAR4?VAR1 -> VAR4 : ""));
const int *VAR5 = VAR1 -> VAR6;
char VAR3[16];
FUN3(VAR3,sizeof(VAR3),"%d", *VAR5);
VAR5++;
FUN3(VAR3,sizeof(VAR3),"%d", *VAR5);
FUN4(VAR1 -> VAR7,1 | 2);
if ((VAR8 -> VAR9) == VAR9 && ((VAR2?FUN2(VAR8) : FUN5(VAR8)))) {
FUN6(VAR8 = (FUN7(VAR8))){
if ((VAR8 -> VAR9) == VAR9 && ((VAR2?FUN2(VAR8) : FUN5(VAR8)))) {
return VAR8;
FUN6(VAR10 = FUN8(VAR11 -> VAR9,VAR10,VAR2)){
FUN1(VAR10);
FUN6(VAR10 = FUN8(VAR11 -> VAR9,VAR10,VAR2)){
static const CLASS1 *FUN8(enum VAR12 VAR9,const CLASS1 *VAR8,int VAR2)
FUN6(VAR8 = (FUN7(VAR8))){
if ((VAR8 -> VAR9) == VAR9 && ((VAR2?FUN2(VAR8) : FUN5(VAR8)))) {
return VAR8;
return ((void *)0);
FUN6(VAR10 = FUN8(VAR11 -> VAR9,VAR10,VAR2)){
FUN1(VAR10);
static void FUN1(const CLASS1 *VAR1)
FUN1(VAR10);
static void FUN1(const CLASS1 *VAR1)
const int *VAR5 = VAR1 -> VAR6;
VAR5++;
FUN3(VAR3,sizeof(VAR3),"%d", *VAR5);
int FUN9(void *VAR13,const char *VAR14,const char *VAR15)
VAR16 = FUN10((VAR15?VAR15 : ""));
VAR17 = strchr(VAR16,'=');
*(VAR17++) = 0;
FUN11(VAR17,0);
FUN11(VAR17,1);
static void FUN11(const char *VAR3,int VAR2)
VAR10 = ((VAR2?FUN12(VAR3) : FUN13(VAR3)));
FUN1(VAR10);
FUN4(VAR18,VAR19);
FUN1(VAR10);
