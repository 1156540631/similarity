char* VAR1;
int VAR2 = 1000;
VAR1 = (char*) malloc(VAR2 * sizeof(char));
VAR3 = FUN1(VAR4, "data", VAR1, VAR2 * sizeof(char));
VAR1 = (char*) malloc(VAR2 * sizeof(char));
VAR3 = FUN1(VAR4, "data", VAR1, VAR2 * sizeof(char));
VAR2 = VAR2 * 2;
VAR1 = (char*) malloc(VAR2 * sizeof(char));
VAR3 = FUN1(VAR4, "data", VAR1, VAR2 * sizeof(char));
free(VAR1);
FUN2(VAR1);
return VAR5 - 32;
VAR6[64 - 1] = '\';
FUN3(VAR7, VAR8, "VAR6", VAR6, "VAR9-VAR10");
FUN3(VAR7, VAR8, "VAR6", VAR6, "VAR11-VAR10");
VAR6[VAR12] = FUN4(VAR6[VAR12]);
FUN5("%s\n",&(VAR6[VAR13+1]));
free(VAR6);
void FUN5(char * VAR14, ...) {
FUN5("%s\n",&(VAR6[VAR13+1]));
free(VAR6);
void FUN2(char *VAR15)
VAR16 = VAR15;
VAR17[ *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *VAR18)))))))))))))))))))))))))))))))))))))))))))))))))] = VAR16;
VAR19 = VAR17[ *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *VAR18)))))))))))))))))))))))))))))))))))))))))))))))))];
VAR20 = ((char *)VAR19);
VAR21 = ((int )(strlen(VAR20)));
VAR6[VAR13] = VAR20[VAR21];
FUN3(VAR7, VAR8, "VAR6", VAR6, "VAR11-VAR10");
free(VAR6);
int FUN4(int VAR5)
return VAR5;
VAR6[VAR12] = FUN4(VAR6[VAR12]);
free(VAR6);
