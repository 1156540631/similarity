FUN1 (*VAR1)(VAR2&, VAR3) = VAR4;
static void * FUN2(void *)
do {
VAR5 = strstr(VAR6, "\n");
VAR2 VAR7;
if (VAR8 &&
sscanf(VAR6, "%d %d %d", &VAR9, &VAR10, &VAR11) == 3) {
VAR8 = false;
} else if (VAR7.FUN3(VAR6)) {
VAR12.FUN4(VAR7);   }
} CLASS1 (VAR5 && *(VAR6 = VAR5 + 1));
for (VAR3 VAR13 = 0; VAR13 < VAR12.FUN5(); VAR13++) {
VAR2 &VAR7 = VAR12[VAR13];
VAR14 = VAR15;
char VAR16[256];
FUN6(VAR16, sizeof(VAR16), "%s/", VAR7.VAR17);
CLASS1 ((VAR14 = VAR18.FUN7(VAR14))) {
VAR19 VAR20 = VAR18.FUN8(VAR14);
if (VAR20.FUN9(VAR16) ||
!VAR14->FUN10() ||
VAR20.FUN11() >= 256)
continue;
VAR7.VAR21.FUN4();
FUN1 &VAR22 = VAR7.VAR21.FUN12();
strcpy(VAR22.VAR17, VAR20.FUN13());
VAR22.VAR23 = VAR18.FUN14(VAR14);
FUN15(VAR7.VAR21.FUN16(), VAR7.VAR21.VAR5());}
for (VAR3 VAR13 = 0; VAR13 < VAR12.FUN5(); VAR13++) {
FUN1 &VAR22 = VAR1(VAR7, VAR24);
FUN1 VAR4(VAR2& VAR7, VAR3 VAR24)
return VAR7.VAR21[VAR24];
FUN1 &VAR22 = VAR1(VAR7, VAR24);
VAR3 VAR25 = 0;
CLASS1 (VAR26 && (!VAR7.VAR27 || VAR25++ < VAR7.VAR27)) {
for (VAR3 VAR24 = 0; VAR24 < VAR7.VAR21.FUN5(); VAR24++) {
FUN1 &VAR22 = VAR7.VAR21[VAR24];
CLASS2 *VAR28 = VAR29->FUN17();
wchar_t VAR30 = FUN18(VAR22.VAR31, VAR32);
FUN19((wchar_t*)VAR33, VAR30, (VAR28->VAR10 * VAR28->CLASS3 * VAR22.VAR34) / sizeof(wchar_t));
