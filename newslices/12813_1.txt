char* VAR1;
int VAR2 = 1000;
VAR1 = (char*) malloc(VAR2 * sizeof(char));
VAR3 = FUN1(VAR4, "data", VAR1, VAR2 * sizeof(char));
VAR1 = (char*) malloc(VAR2 * sizeof(char));
VAR3 = FUN1(VAR4, "data", VAR1, VAR2 * sizeof(char));
VAR2 = VAR2 * 2;
VAR1 = (char*) malloc(VAR2 * sizeof(char));
VAR3 = FUN1(VAR4, "data", VAR1, VAR2 * sizeof(char));
free(VAR1);
FUN2(VAR1);
return VAR5 - 32;
VAR6[64 - 1] = '\';
FUN3(VAR7, VAR8, "VAR6", VAR6, "VAR9-VAR10");
FUN3(VAR7, VAR8, "VAR6", VAR6, "VAR11-VAR10");
VAR6[VAR12] = FUN4(VAR6[VAR12]);
FUN5("%s\n",&(VAR6[VAR13+1]));
free(VAR6);
void FUN2(char *VAR14)
VAR15 = VAR14;
VAR16 = &VAR15;
VAR17 = VAR16 + 5;
VAR18 = ((char *)( *(VAR17 - 5)));
VAR19 = ((int )(strlen(VAR18)));
VAR6[VAR13] = VAR18[VAR19];
FUN3(VAR7, VAR8, "VAR6", VAR6, "VAR11-VAR10");
free(VAR6);
void FUN5(char * VAR20, ...) {
FUN5("%s\n",&(VAR6[VAR13+1]));
free(VAR6);
int FUN4(int VAR5)
return VAR5;
VAR6[VAR12] = FUN4(VAR6[VAR12]);
free(VAR6);
