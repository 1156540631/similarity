VAR1 >>= 8;
VAR2 = FUN1(VAR3,VAR4,(((VAR1 & 0xff) >= 48 && (VAR1 & 0xff) <= '' || (VAR1 & 0xff) >= '' && (VAR1 & 0xff) <= '' || (VAR1 & 0xff) >= '' && (VAR1 & 0xff) <= '' || ((VAR1 & 0xff) == '.' || (VAR1 & 0xff) == 32 || (VAR1 & 0xff) == '-' || (VAR1 & 0xff) == '')?"%c" : "[%d]")),VAR1 & 0xff);
const char *VAR5 = ((void *)0);
FUN2(VAR6,sizeof(VAR6),VAR7 -> VAR1);
return ((void *)0);
return ((void *)0);
VAR5 = FUN3(VAR8,VAR7 -> VAR5);
VAR3[0] ^= '' ^ '';
FUN1(VAR3 + strlen(VAR3),VAR4 - strlen(VAR3)," (%s)",VAR5);
FUN1(VAR3 + strlen(VAR3),VAR4 - strlen(VAR3)," (%s / 0x%04X)",VAR6,VAR7 -> VAR1);
VAR9 FUN2(char *VAR3,VAR9 VAR4,unsigned int VAR1)
VAR2 = FUN1(VAR3,VAR4,(((VAR1 & 0xff) >= 48 && (VAR1 & 0xff) <= '' || (VAR1 & 0xff) >= '' && (VAR1 & 0xff) <= '' || (VAR1 & 0xff) >= '' && (VAR1 & 0xff) <= '' || ((VAR1 & 0xff) == '.' || (VAR1 & 0xff) == 32 || (VAR1 & 0xff) == '-' || (VAR1 & 0xff) == '')?"%c" : "[%d]")),VAR1 & 0xff);
FUN1(VAR3 + strlen(VAR3),VAR4 - strlen(VAR3)," (%s / 0x%04X)",VAR6,VAR7 -> VAR1);
void FUN4(char *VAR3,int VAR4,CLASS1 *VAR7,int VAR10)
FUN1(VAR3,VAR4,"%s: %s%s",(VAR11?VAR11 : "unknown"),VAR12,(VAR7 -> VAR13?" (VAR14)" : ""));
FUN1(VAR3 + strlen(VAR3),VAR4 - strlen(VAR3)," (%s / 0x%04X)",VAR6,VAR7 -> VAR1);
