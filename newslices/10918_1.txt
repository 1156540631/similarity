rewind(VAR1);
VAR2 = fread(*VAR3,1,VAR4,VAR1);
*VAR3 = VAR5;
return VAR6 - 32;
char *VAR7;
FUN1(&VAR7,"REVOCATION_CONSUMPTIBLE");
VAR8 = ((char *)VAR7);
VAR9[64 - 1] = '\';
FUN2(VAR10, VAR11, "VAR9", VAR9, "VAR12-VAR13");
VAR14 = ((int )(strlen(VAR8)));
VAR9[VAR15] = VAR8[VAR14];
FUN2(VAR10, VAR11, "VAR9", VAR9, "VAR16-VAR13");
VAR9[VAR17] = FUN3(VAR9[VAR17]);
FUN4("%s\n",&(VAR9[VAR15+1]));
free(VAR9);
void FUN4(char * VAR18, ...) {
FUN4("%s\n",&(VAR9[VAR15+1]));
free(VAR9);
int FUN3(int VAR6)
return VAR6;
VAR9[VAR17] = FUN3(VAR9[VAR17]);
free(VAR9);
void FUN1(char** VAR3, char* VAR19) {
VAR20 = FUN5(VAR19);
VAR1 = fopen(VAR20,"rb");
fseek(VAR1,0L,2);
VAR4 = ftell(VAR1);
*VAR3 = ((char *)(malloc(sizeof(char ) * (VAR4 + 1))));
FUN1(&VAR7,"REVOCATION_CONSUMPTIBLE");
VAR8 = ((char *)VAR7);
VAR14 = ((int )(strlen(VAR8)));
VAR9[VAR15] = VAR8[VAR14];
FUN2(VAR10, VAR11, "VAR9", VAR9, "VAR16-VAR13");
free(VAR9);
