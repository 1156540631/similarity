FUN1 (*VAR1)(VAR2&, VAR3) = VAR4;
static void * FUN2(void *)
do {
VAR5 = strstr(VAR6, "\n");
VAR2 VAR7;
if (VAR8 &&
sscanf(VAR6, "%d %d %d", &VAR9, &VAR10, &VAR11) == 3) {
VAR8 = false;
} else if (sscanf(VAR6, "VAR12 %d %d %s", &VAR7.VAR13, &VAR7.VAR14, VAR7.VAR15)) {
VAR16.FUN3(VAR7);   }
} CLASS1 (VAR5 && *(VAR6 = VAR5 + 1));
for (VAR3 VAR17 = 0; VAR17 < VAR16.FUN4(); VAR17++) {
VAR2 &VAR7 = VAR16[VAR17];
VAR18 = VAR19;
char VAR20[256];
FUN5(VAR20, sizeof(VAR20), "%s/", VAR7.VAR15);
CLASS1 ((VAR18 = VAR21.FUN6(VAR18))) {
VAR22 VAR23 = VAR21.FUN7(VAR18);
if (VAR23.FUN8(VAR20) ||
!VAR18->FUN9() ||
VAR23.FUN10() >= 256)
continue;
VAR7.VAR24.FUN3();
FUN1 &VAR25 = VAR7.VAR24.FUN11();
strcpy(VAR25.VAR15, VAR23.FUN12());
VAR25.VAR26 = VAR21.FUN13(VAR18);
FUN14(VAR7.VAR24.FUN15(), VAR7.VAR24.VAR5());
for (VAR3 VAR17 = 0; VAR17 < VAR16.FUN4(); VAR17++) {
VAR2 &VAR7 = VAR16[VAR17];
VAR3 VAR27 = 0;
CLASS1 (VAR28 && (!VAR7.VAR13 || VAR27++ < VAR7.VAR13)) {
for (VAR3 VAR29 = 0; VAR29 < VAR7.VAR24.FUN4(); VAR29++) {
FUN1 &VAR25 = VAR1(VAR7, VAR29);
FUN1 VAR4(VAR2& VAR7, VAR3 VAR29)
return VAR7.VAR24[VAR29];
FUN1 &VAR25 = VAR1(VAR7, VAR29);
CLASS2 *VAR30 = VAR31->FUN16();
wchar_t VAR32 = FUN17(VAR25.VAR33, VAR34);
FUN18((wchar_t*)VAR35, VAR32, (VAR30->VAR10 * VAR30->CLASS3 * VAR25.VAR36) / sizeof(wchar_t));
