FUN1 (fgets(VAR1, sizeof VAR1, VAR2) != VAR3)
register char *VAR4 = strchr(VAR1, '\');
VAR5 ? "VAR5" : "sending", VAR1);
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
register char **VAR11;
FUN1 ((VAR4 = *VAR11++) != VAR3)
(void) FUN2(VAR4, VAR12, &VAR10->VAR13, 0, VAR10);
char *VAR14;
CLASS1 *VAR7;
VAR15->VAR16 = VAR7;
VAR17 = VAR15;
register CLASS1 *VAR15 = VAR17;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
register CLASS1 *VAR15;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS1 *VAR7;
VAR21 = FUN5(VAR7);
register CLASS1 *VAR15;
FUN1 (VAR15 != VAR3 && !FUN6(VAR22, VAR15->VAR23))
register CLASS1 *VAR15;
VAR21 = FUN5(VAR7);
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS1 *VAR7;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS1 *VAR7;
if (FUN7(VAR7, VAR15))
VAR15->VAR23 |= VAR7->VAR23 & VAR24;
VAR17 = VAR15;
register CLASS1 *VAR15 = VAR17;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
register CLASS1 *VAR15;
VAR25 = strlen(VAR15->VAR19);
VAR1 = FUN8(VAR25 + 1);
(void) strcpy(VAR1, VAR15->VAR19);
register CLASS1 *VAR15;
VAR15 = VAR15->VAR16;
VAR21 = FUN5(VAR7);
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS1 *VAR7;
VAR21 = FUN5(VAR7);
register CLASS1 *VAR15;
VAR15 = VAR15->VAR16;
return (VAR15);
VAR21 = FUN5(VAR7);
VAR7->VAR23 |= VAR21->VAR23 & VAR26;
VAR7->VAR27 = VAR21->VAR27;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS1 *VAR7;
FUN9(VAR15, VAR8, VAR9, VAR10);
if (FUN10(VAR15, VAR8, VAR9, VAR10) == VAR28)
FUN11(VAR15, VAR8, VAR9 + 1, VAR10);
FUN12(VAR15, VAR8, VAR9, VAR10);
FUN13(*VAR8, VAR29);
register CLASS1 **VAR8;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
register CLASS1 **VAR8;
for (VAR30 = VAR8; (VAR31 = *VAR30) != VAR3; VAR30 = &VAR31->VAR32)
if (FUN7(VAR31, VAR15))
VAR15 = VAR31;
if (FUN7(VAR31, VAR15))
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS1 *VAR7;
VAR21 = FUN5(VAR7);
register CLASS1 *VAR15;
VAR21 = FUN5(VAR7);
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS1 *VAR7;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS1 *VAR7;
VAR21 = FUN5(VAR7);
register CLASS1 *VAR15;
VAR21 = FUN5(VAR7);
VAR7->VAR33 = VAR34.VAR35;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS1 *VAR7;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS1 *VAR7;
VAR21 = FUN5(VAR7);
register CLASS1 *VAR15;
VAR21 = FUN5(VAR7);
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS1 *VAR7;
FUN13(VAR7, VAR20);
if (FUN7(VAR7, VAR15))
VAR36 = FUN14(VAR15, VAR10);
FUN13(VAR15, VAR20);
VAR15->VAR37 = VAR7->VAR37;
VAR15->VAR38 = VAR7->VAR38;
VAR17 = VAR15;
VAR15->VAR32 = VAR17;
if (FUN7(VAR7, VAR15))
FUN13(VAR7, VAR20);
VAR15->VAR16 = VAR7;
VAR17 = VAR15;
VAR17 = VAR15->VAR32;
register CLASS1 *VAR15 = VAR17;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
register CLASS1 *VAR15;
bool VAR39 = FUN6(VAR40, VAR15->VAR23);
VAR15->VAR23 |= VAR41;
FUN13(VAR15, VAR20);
(void) strcpy(VAR1, VAR15->VAR19);
VAR15->VAR23 |= VAR42;
VAR15->VAR43 = "5.7.1";
else if (FUN6(VAR26, VAR15->VAR16->VAR23))
VAR44, FUN15(VAR1, 203));
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
VAR15->VAR23 |= VAR42;
VAR15->VAR43 = "5.7.1";
VAR15->VAR16->VAR27, VAR45);
else if (FUN6(VAR46, VAR15->VAR16->VAR23))
VAR15->VAR23 |= VAR42;
VAR15->VAR43 = "5.7.1";
VAR15->VAR16->VAR47);
if (FUN7(VAR31, VAR15))
FUN13(VAR31, VAR20);
if (!FUN6(VAR41, VAR31->VAR23))
if (!FUN6(VAR40, VAR15->VAR23))
VAR31->VAR23 |= VAR15->VAR23;
else if (FUN6(VAR48, VAR31->VAR23))
VAR31->VAR23 |= VAR15->VAR23 & ~VAR40;
VAR15 = VAR31;
VAR15->VAR32 = VAR3;
printf("VAR49 VAR50 %s\n", VAR15->VAR19);
if (FUN6(VAR40|VAR42|VAR51, VAR15->VAR23))
VAR15->VAR23 |= VAR40;
FUN16("VAR52 VAR53 %s", VAR15->VAR19);
VAR7->VAR27 = VAR21->VAR27;
VAR54 = FUN17(VAR34.VAR55);
VAR7->VAR27 = FUN18(VAR54->VAR56);
CLASS1 *VAR7;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS1 *VAR7;
FUN13(VAR7, VAR20);
VAR21 = FUN5(VAR7);
register CLASS1 *VAR15;
FUN1 (VAR15 != VAR3 && !FUN6(VAR22, VAR15->VAR23))
register CLASS1 *VAR15;
return (VAR15);
VAR21 = FUN5(VAR7);
VAR7->VAR23 |= VAR57;
VAR7->VAR23 |= VAR22;
VAR7->VAR23 |= VAR21->VAR23 & VAR26;
VAR7->VAR23 |= VAR26;
VAR7->VAR23 |= VAR26;
VAR7->VAR23 |= VAR46;
VAR7->VAR23 |= VAR46;
VAR7->VAR23 &= ~VAR48;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS1 *VAR7;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS1 **VAR8;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS1 **VAR8;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
(void) FUN2(VAR4, VAR12, &VAR10->VAR13, 0, VAR10);
CLASS1 **VAR8;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
register CLASS1 **VAR8;
for (VAR30 = VAR8; (VAR31 = *VAR30) != VAR3; VAR30 = &VAR31->VAR32)
if (FUN7(VAR31, VAR15))
VAR15 = VAR31;
VAR7->VAR33 = VAR34.VAR35;
CLASS1 *VAR7;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS1 *VAR7;
struct CLASS2 VAR34;
VAR21 = FUN5(VAR7);
register CLASS1 *VAR15;
VAR21 = FUN5(VAR7);
if (FUN19(fileno(VAR2), &VAR34) < 0)
VAR7->VAR58 = VAR34.VAR55;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS1 *VAR7;
(VAR59) 0, VAR10);
FUN9(VAR15, VAR8, VAR9, VAR10);
if (FUN10(VAR15, VAR8, VAR9, VAR10) == VAR28)
FUN11(VAR15, VAR8, VAR9 + 1, VAR10);
(VAR59) 0, VAR10);
FUN12(VAR15, VAR8, VAR9, VAR10);
fprintf(VAR10->VAR60,
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
register CLASS3 *VAR10;
VAR15 = FUN20(VAR4, VAR12, VAR61, VAR62, &VAR63, VAR10);
VAR17 = VAR15;
register CLASS1 *VAR15 = VAR17;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
register CLASS1 *VAR15;
VAR10->VAR64 = VAR15->VAR47;
VAR10->VAR65 = FUN18("VAR66: VAR67 VAR68 VAR69");
register CLASS3 *VAR10;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
register CLASS3 *VAR10;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS3 *VAR10;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS3 *VAR10;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
register CLASS3 *VAR10;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
VAR10->VAR70++;
VAR10->VAR70++;
register CLASS3 *VAR10;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
register CLASS3 *VAR10;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
register CLASS3 *VAR10;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
CLASS3 *VAR10;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS3 *VAR10;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
char *VAR44 = VAR10->VAR71;
VAR10->VAR70++;
VAR44, FUN15(VAR1, 203));
VAR10->VAR71 = VAR44;
CLASS3 *VAR10;
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS3 *VAR10;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
register CLASS3 *VAR10;
VAR10->VAR71 = VAR15->VAR47;
VAR10->VAR64 = "";
VAR18 = FUN4(VAR15->VAR19, VAR20, VAR15, VAR8, VAR9, VAR10);
CLASS3 *VAR10;
VAR10->VAR71 = VAR3;
VAR6 += FUN2(VAR1, VAR7, VAR8, VAR9 + 1, VAR10);
register CLASS3 *VAR10;
(void) FUN2(VAR4, VAR12, &VAR10->VAR13, 0, VAR10);
register CLASS3 *VAR10;
char VAR1[VAR72 + 1];
printf("VAR73: %s\n   VAR7=", VAR14);
FUN13(VAR7, VAR20);
strchr(VAR14, '<') != VAR3 || strchr(VAR14, '(') != VAR3))
(strchr(VAR14, ',') != VAR3 || strchr(VAR14, ';') != VAR3 ||
VAR10->VAR74 &= ~VAR75;
VAR62 = ' ';
if (!FUN6(VAR75, VAR10->VAR74) || VAR7 != VAR3)
VAR62 = ',';
VAR17 = VAR3;
VAR25 = strlen(VAR14) + 1;
if (VAR25 <= sizeof VAR1)
VAR76 = VAR1;
VAR76 = FUN8(VAR25);
strcpy(VAR76, FUN21(VAR14, VAR20, VAR29));
for (VAR4 = VAR76; *VAR4 != '\'; )
auto char *VAR63;
FUN1 ((isascii(*VAR4) && isspace(*VAR4)) || *VAR4 == ',')
VAR4++;
VAR4 = VAR63;
VAR36 = FUN14(VAR15, VAR10);
VAR15 = FUN20(VAR4, VAR12, VAR61, VAR62, &VAR63, VAR10);
if (FUN7(VAR7, VAR15))
VAR7->VAR23 |= VAR48;
VAR15->VAR23 |= VAR40;
VAR15->VAR23 |= VAR7->VAR23 & VAR24;
VAR15->VAR23 &= ~VAR24;
VAR15->VAR23 |= VAR7->VAR23 & VAR24;
VAR17 = VAR15;
register CLASS1 *VAR15 = VAR17;
VAR15 = FUN3(VAR15, VAR8, VAR9, VAR10);
register CLASS1 *VAR15;
VAR25 = strlen(VAR15->VAR19);
VAR1 = FUN8(VAR25 + 1);
(void) strcpy(VAR1, VAR15->VAR19);
