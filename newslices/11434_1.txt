*VAR1 = VAR2;
*VAR1 = VAR2;
return VAR3 - 32;
int VAR4 = 596;
char *VAR5;
FUN1(&VAR5,"7520",VAR4);
VAR6 = ((char *)VAR5);
VAR7 = (char*) malloc(64 * sizeof(char));
memset(VAR7,0,64);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR10-VAR11");
strcpy(VAR7, VAR6);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR12-VAR11");
VAR13 = strlen( VAR7);
VAR7[VAR14] = FUN3(VAR7[VAR14]);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR15-VAR16");
FUN4("%s\n",VAR7);
void FUN4(char * VAR17, ...) {
free(VAR7);
void FUN1(char** VAR1, char* VAR18, int VAR19) {
if ((VAR20 = FUN5(VAR21, VAR19, 0666)) >= 0) {
*VAR1 = (char*)calloc(VAR19, sizeof(char));
FUN1(&VAR5,"7520",VAR4);
VAR6 = ((char *)VAR5);
strcpy(VAR7, VAR6);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR12-VAR11");
VAR13 = strlen( VAR7);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR15-VAR16");
FUN4("%s\n",VAR7);
int FUN3(int VAR3)
return VAR3;
VAR7[VAR14] = FUN3(VAR7[VAR14]);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR15-VAR16");
FUN4("%s\n",VAR7);
