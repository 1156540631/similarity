int VAR1 = 0;
if ((VAR2 = fopen("VAR3-VAR4", "r")) == VAR5)
return -1;
FUN1 (((VAR6 = fgetc(VAR2)) != VAR7) && (VAR1 < VAR8)) {
*VAR9++ = (VAR10) VAR6;
VAR1++;
return VAR1;
VAR9 = (VAR10 *) malloc(10000*sizeof(VAR10));
VAR11 = FUN2(VAR9, 10000);
VAR12 = VAR9 + sizeof(VAR13);
VAR14 = VAR9 + VAR11;
FUN3(VAR15, &VAR12, VAR14, &VAR11, VAR9);
int FUN2(VAR10 *VAR9, int VAR8){
VAR12 = VAR9 + sizeof(VAR13);
FUN3(VAR15, &VAR12, VAR14, &VAR11, VAR9);
FUN3(VAR13 *VAR15, VAR10 **VAR16, VAR10 *VAR14, int *VAR17, VAR10 *VAR9)
char VAR18[2], *VAR19, *VAR20;
if ((VAR21 = FUN4(*VAR16, VAR14)) < 0) {
printf("VAR22 VAR23 VAR24 VAR25 VAR26\VAR21");
*VAR16 += VAR21;
FUN5(VAR27, *VAR16);
*VAR16 += VAR28;
FUN5(VAR29, *VAR16);
*VAR16 += VAR29;
VAR20 = (char *)VAR9 + VAR30;
VAR31 = (char *)*VAR16 - VAR20;
if ((VAR32)VAR31 > sizeof VAR18){
return (VAR33);}
printf("VAR34 %d VAR35 VAR36 VAR20 VAR37 VAR18 VAR38 VAR39 VAR40 %d VAR35\VAR21", VAR31, sizeof(VAR18));
memcpy(VAR18, VAR20, VAR31);
