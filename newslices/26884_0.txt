VAR1 = FUN1(VAR2->VAR3, VAR4, VAR2, VAR5, VAR6, VAR7);
char *VAR8;
CLASS1 *volatile VAR9 = VAR10;
printf("FUN1(%s)\n", VAR8);
VAR11 = FUN2(VAR8, VAR12, VAR13, VAR14, VAR15, VAR16, VAR10);
VAR9 = fopen(VAR8, "r");
if (FUN3(fileno(VAR9), &VAR17) < 0)
VAR18 = FUN4(fileno(VAR9));
FUN5 (fgets(VAR19, sizeof VAR19, VAR9) != VAR10)
register char *VAR20 = strchr(VAR19, '\');
VAR21 ? "VAR21" : "sending", VAR19);
VAR22 += FUN6(VAR19, VAR23, VAR5, VAR6 + 1, VAR7);
char *VAR24;
register CLASS2 *VAR2;
FUN5 (VAR2 != VAR10 && !FUN7(VAR25, VAR2->VAR26))
VAR2 = VAR2->VAR27;
return (VAR2);
VAR28 = FUN8(VAR23);
VAR23->VAR26 |= VAR28->VAR26 & VAR29;
VAR23->VAR30 = VAR28->VAR30;
VAR22 += FUN6(VAR19, VAR23, VAR5, VAR6 + 1, VAR7);
CLASS2 *VAR23;
FUN9(VAR2, VAR5, VAR6, VAR7);
if (FUN10(VAR2, VAR5, VAR6, VAR7) == VAR31)
FUN11(VAR2, VAR5, VAR6 + 1, VAR7);
FUN12(VAR2, VAR5, VAR6, VAR7);
FUN13(*VAR5, VAR32);
register CLASS2 **VAR5;
VAR2 = FUN14(VAR2, VAR5, VAR6, VAR7);
register CLASS2 **VAR5;
for (VAR33 = VAR5; (VAR34 = *VAR33) != VAR10; VAR33 = &VAR34->VAR35)
if (FUN15(VAR34, VAR2))
VAR2 = VAR34;
if (FUN15(VAR34, VAR2))
VAR1 = FUN1(VAR2->VAR3, VAR4, VAR2, VAR5, VAR6, VAR7);
CLASS2 *VAR23;
VAR28 = FUN8(VAR23);
register CLASS2 *VAR2;
VAR28 = FUN8(VAR23);
VAR22 += FUN6(VAR19, VAR23, VAR5, VAR6 + 1, VAR7);
CLASS2 *VAR23;
VAR1 = FUN1(VAR2->VAR3, VAR4, VAR2, VAR5, VAR6, VAR7);
CLASS2 *VAR23;
VAR28 = FUN8(VAR23);
register CLASS2 *VAR2;
VAR28 = FUN8(VAR23);
VAR23->VAR36 = VAR17.VAR37;
VAR22 += FUN6(VAR19, VAR23, VAR5, VAR6 + 1, VAR7);
CLASS2 *VAR23;
VAR1 = FUN1(VAR2->VAR3, VAR4, VAR2, VAR5, VAR6, VAR7);
CLASS2 *VAR23;
VAR28 = FUN8(VAR23);
register CLASS2 *VAR2;
VAR28 = FUN8(VAR23);
VAR22 += FUN6(VAR19, VAR23, VAR5, VAR6 + 1, VAR7);
CLASS2 *VAR23;
(void) strcpy(VAR19, VAR2->VAR3);
FUN16("VAR38 VAR39 %s", VAR2->VAR3);
VAR23->VAR30 = VAR28->VAR30;
VAR40 = FUN17(VAR17.VAR41);
VAR23->VAR30 = FUN18(VAR40->VAR42);
CLASS2 *VAR23;
VAR1 = FUN1(VAR2->VAR3, VAR4, VAR2, VAR5, VAR6, VAR7);
CLASS2 *VAR23;
VAR28 = FUN8(VAR23);
register CLASS2 *VAR2;
return (VAR2);
VAR28 = FUN8(VAR23);
VAR23->VAR26 |= VAR28->VAR26 & VAR29;
VAR22 += FUN6(VAR19, VAR23, VAR5, VAR6 + 1, VAR7);
CLASS2 *VAR23;
VAR22 += FUN6(VAR19, VAR23, VAR5, VAR6 + 1, VAR7);
CLASS2 *VAR23;
(VAR43) 0, VAR7);
FUN9(VAR2, VAR5, VAR6, VAR7);
if (FUN10(VAR2, VAR5, VAR6, VAR7) == VAR31)
VAR7->VAR44 = FUN18("VAR45: VAR46 VAR47 VAR48");
VAR7->VAR49++;
FUN11(VAR2, VAR5, VAR6 + 1, VAR7);
(VAR43) 0, VAR7);
FUN12(VAR2, VAR5, VAR6, VAR7);
VAR7->VAR49++;
VAR2 = FUN14(VAR2, VAR5, VAR6, VAR7);
(void) FUN6(VAR20, VAR50, &VAR7->VAR51, 0, VAR7);
register CLASS3 *VAR7;
VAR2 = FUN14(VAR2, VAR5, VAR6, VAR7);
register CLASS3 *VAR7;
VAR2 = FUN14(VAR2, VAR5, VAR6, VAR7);
register CLASS3 *VAR7;
VAR1 = FUN1(VAR2->VAR3, VAR4, VAR2, VAR5, VAR6, VAR7);
CLASS3 *VAR7;
VAR1 = FUN1(VAR2->VAR3, VAR4, VAR2, VAR5, VAR6, VAR7);
CLASS3 *VAR7;
VAR22 += FUN6(VAR19, VAR23, VAR5, VAR6 + 1, VAR7);
register CLASS3 *VAR7;
VAR22 += FUN6(VAR19, VAR23, VAR5, VAR6 + 1, VAR7);
register CLASS3 *VAR7;
strchr(VAR24, '<') != VAR10 || strchr(VAR24, '(') != VAR10))
(strchr(VAR24, ',') != VAR10 || strchr(VAR24, ';') != VAR10 ||
VAR52 = strlen(VAR24) + 1;
strcpy(VAR53, FUN19(VAR24, VAR4, VAR32));
for (VAR20 = VAR53; *VAR20 != '\'; )
VAR2 = FUN20(VAR20, VAR50, VAR54, VAR55, &VAR56, VAR7);
if (FUN15(VAR23, VAR2))
VAR2->VAR26 |= VAR23->VAR26 & VAR57;
VAR2->VAR26 &= ~VAR57;
VAR2->VAR26 |= VAR23->VAR26 & VAR57;
VAR58 = VAR2;
register CLASS2 *VAR2 = VAR58;
VAR2 = FUN14(VAR2, VAR5, VAR6, VAR7);
register CLASS2 *VAR2;
VAR52 = strlen(VAR2->VAR3);
