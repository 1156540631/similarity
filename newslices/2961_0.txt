static CLASS1 *FUN1(CLASS2 *VAR1)
VAR2 = FUN1(VAR1);
FUN2(VAR3,sizeof(VAR3),"FUN3 (VAR4 %s) VAR5 VAR6 for VAR7 VAR8 #%d:%d",FUN4(VAR1 -> VAR9 -> VAR4 -> VAR10),VAR1 -> VAR11,VAR1 -> VAR12);
if (!strncmp((VAR1 -> VAR13),"VAR14:",5)) {
FUN5(VAR1 -> VAR13,VAR1,VAR1 -> VAR9 -> VAR4);
static void FUN5(char *VAR15,CLASS2 *VAR1,CLASS3 *VAR16)
int VAR17 = 1;
CLASS4 *VAR18;
VAR19 = VAR17;
VAR18 = (FUN6(sizeof(( *VAR18)) * VAR19));
VAR20 = VAR15;
char *VAR21 = strchr(VAR20,',');
*(VAR21++) = 0;
if (!memcmp(VAR20,"VAR26",8)) {
if (VAR22 -> VAR23 > (2147483647 - VAR19) || !(VAR18 = (FUN7(VAR18,(VAR19 += VAR22 -> VAR23 - 1),sizeof(( *VAR18)))))) {
VAR24 = (VAR20[8]?FUN8("force_key_frames",(VAR20 + 8),1) : 0);
CLASS5 *VAR25 = VAR22 -> VAR26[VAR27];
VAR18[VAR12++] = FUN9(VAR25 -> VAR28,VAR25 -> VAR29,VAR16 -> VAR29) + VAR24;
if (VAR22 -> VAR23 > (2147483647 - VAR19) || !(VAR18 = (FUN7(VAR18,(VAR19 += VAR22 -> VAR23 - 1),sizeof(( *VAR18)))))) {
VAR20 = VAR21;
char *VAR21 = strchr(VAR20,',');
if (!memcmp(VAR20,"VAR26",8)) {
VAR24 = (VAR20[8]?FUN8("force_key_frames",(VAR20 + 8),1) : 0);
VAR18[VAR12++] = FUN9(VAR25 -> VAR28,VAR25 -> VAR29,VAR16 -> VAR29) + VAR24;
FUN10(VAR18,VAR19,sizeof(( *VAR18)),VAR30);
VAR1 = VAR31[VAR32];
VAR2 = FUN1(VAR1);
VAR1 -> VAR9 -> VAR33 = VAR2 -> VAR9 -> VAR33;
VAR2 = FUN1(VAR1);
if (VAR34 < 0 && FUN11(VAR2 -> VAR9 -> VAR35) >= FUN11(VAR2 -> VAR9 -> VAR36) && 0.5 / FUN11(VAR2 -> VAR9 -> VAR35) > FUN11(VAR2 -> VAR9 -> VAR29) && 0.5 / FUN11(VAR2 -> VAR9 -> VAR35) > FUN11(VAR37 -> VAR29) && FUN11(VAR2 -> VAR9 -> VAR29) < 1.0 / 500 && FUN11(VAR37 -> VAR29) < 1.0 / 500 || VAR34 == 2) {
VAR1 -> VAR9 -> VAR36 = VAR2 -> VAR9 -> VAR36;
VAR2 = FUN1(VAR1);
VAR1 -> VAR38 = FUN12(VAR4 -> VAR10);
VAR1 -> VAR39 = VAR1 -> VAR38 -> VAR40[VAR41];
VAR2 = FUN1(VAR1);
VAR4 -> VAR42 = FUN13(VAR1 -> VAR43 -> VAR43 -> VAR44[0]);
VAR1 -> VAR39 = FUN14(VAR1 -> VAR43 -> VAR43);
VAR2 = FUN1(VAR1);
VAR4 -> VAR45 = VAR1 -> VAR43 -> VAR43 -> VAR44[0] -> VAR46;
VAR4 -> VAR47 = VAR1 -> VAR43 -> VAR43 -> VAR44[0] -> VAR48;
VAR4 -> VAR49 = VAR1 -> VAR9 -> VAR49 = (VAR1 -> VAR50?FUN15((VAR1 -> VAR50 * (VAR4 -> VAR47) / (VAR4 -> VAR45)),255) : VAR1 -> VAR43 -> VAR43 -> VAR44[0] -> VAR49);
VAR2 = FUN1(VAR1);
int VAR41 = FUN16(VAR1 -> VAR39,VAR1 -> VAR38 -> VAR40);
FUN5(VAR1 -> VAR13,VAR1,VAR1 -> VAR9 -> VAR4);
static void FUN5(char *VAR15,CLASS2 *VAR1,CLASS3 *VAR16)
FUN5(VAR1 -> VAR13,VAR1,VAR1 -> VAR9 -> VAR4);
static void FUN5(char *VAR15,CLASS2 *VAR1,CLASS3 *VAR16)
FUN5(VAR1 -> VAR13,VAR1,VAR1 -> VAR9 -> VAR4);
static void FUN5(char *VAR15,CLASS2 *VAR1,CLASS3 *VAR16)
VAR20 = VAR15;
char *VAR21 = strchr(VAR20,',');
if (!memcmp(VAR20,"VAR26",8)) {
VAR24 = (VAR20[8]?FUN8("force_key_frames",(VAR20 + 8),1) : 0);
VAR18[VAR12++] = FUN9(VAR25 -> VAR28,VAR25 -> VAR29,VAR16 -> VAR29) + VAR24;
FUN10(VAR18,VAR19,sizeof(( *VAR18)),VAR30);
