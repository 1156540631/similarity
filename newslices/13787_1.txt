VAR1&     VAR2,
const VAR3& VAR4,
FUN1(VAR5, this, VAR4, VAR2, VAR6);
VAR4.VAR7, VAR4.VAR8,
VAR4.FUN2(), VAR4.FUN3());
const VAR3 *VAR9 = &VAR4;
VAR4.FUN3() != VAR10 &&
FUN4(this, VAR4.VAR11)) {
if (FUN5(VAR4) + VAR12.FUN6() <=
VAR13 = new VAR3(VAR4);
VAR13->VAR8 = VAR14;
VAR9 = VAR13;
VAR15 FUN7(const_cast<VAR3&>(*VAR9));
bool VAR16 = VAR17::FUN8(this);
FUN7.FUN9(VAR5);
if (FUN10(*VAR9, VAR2, VAR6)) {
bool VAR18, VAR19;
FUN11(&VAR18, &VAR19);
VAR20 FUN12(*VAR9, VAR5, this, VAR2,
VAR18, VAR19, VAR16);
if (FUN13(VAR5)) {
FUN14(VAR5, *VAR9, VAR21, 0,
FUN15(FUN12);
FUN16(FUN12);
FUN17(&FUN12.VAR22, VAR23);
FUN17(&FUN12.VAR22, VAR24);
FUN18(FUN12.VAR22) &&
FUN19(FUN12.VAR22);
if (!FUN20(FUN12.VAR22)) {
FUN12.VAR22 |= VAR25;
FUN21(FUN12);
VAR17::FUN21(VAR20& VAR26)
VAR27<CLASS1*, 8> VAR28;
for (VAR29 VAR30 = FUN22(), VAR31 = FUN23();
VAR30 != VAR31; ++VAR30) {
if (VAR30->FUN24()) {
CLASS2* VAR32 = VAR30->FUN25();
VAR33 VAR34;
VAR34.VAR35 = VAR32;
VAR32 = FUN26(VAR34);
void FUN26(VAR33 VAR34)
CLASS2 * VAR32 = VAR34.VAR35;
FUN27 (VAR32) {
VAR28.FUN28(VAR32->VAR36);
VAR32 = VAR32->FUN29();
return VAR32
VAR27<CLASS1*, 8> VAR37;
for (CLASS1* VAR38 = VAR39.FUN30(); VAR38; VAR38 = VAR38->FUN31()) {
if (VAR38->FUN32() & VAR40)
continue;
VAR37.FUN28(VAR38);
if ((!VAR41 || VAR28.FUN33() != VAR37.FUN33()) && !VAR42) {
for (VAR43 = 0; VAR43 < VAR28.FUN33(); ++VAR43) {
printf("VAR44 float: %p\n", VAR28.FUN34(VAR43));
for (VAR43 = 0; VAR43 < VAR37.FUN33(); ++VAR43) {
printf("VAR45 float: %p\n", VAR37.FUN34(VAR43));
if (FUN35() && !VAR46.FUN36() &&
(VAR46.FUN37()->FUN38() ||
(0 == VAR46.FUN37()->VAR47.VAR48 &&
VAR46.FUN37() != VAR46.FUN39() &&
VAR46.FUN40().FUN41()->FUN38()))) {
VAR1 VAR49;
VAR50::VAR51 VAR52;
bool VAR53 = VAR50::FUN42(this, &VAR52);
VAR54 VAR55 = VAR53 ? VAR52.VAR56
: VAR9->VAR57.VAR58;
CLASS1* VAR59 = FUN43();
FUN44(VAR59, FUN12, VAR49, VAR55);
FUN45(!FUN46() || VAR49.VAR48 == 0,"FUN36 VAR59 VAR60 VAR61 VAR62");
if (VAR53 && !FUN46()) {
VAR63 VAR64 = VAR59->FUN47();
VAR64.VAR65 = VAR52.VAR66 - VAR49.VAR67;
VAR59->FUN48(VAR64);
VAR54 VAR68;
FUN49(*VAR9, FUN12, VAR2, &VAR68);
VAR63 VAR69 = VAR63(0, 0, VAR2.VAR70, VAR2.VAR48);
FUN50(VAR69, VAR9->VAR11,VAR68, VAR2.VAR71);
VAR2.VAR71.FUN51(VAR21);
VAR2.VAR71.FUN51(VAR72);
