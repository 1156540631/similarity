VAR1 = VAR2 -> VAR1;
char VAR3[32];
FUN1(VAR3,sizeof(VAR3),VAR4 -> VAR5);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %VAR33",FUN3(VAR4 -> VAR8));
VAR9 = FUN4(VAR4);
return 4;
return 8;
return 16;
return 32;
return 64;
return 2;
return 4;
return FUN5(VAR10);
VAR11 = FUN6(VAR2 -> VAR10);
return 3;
VAR1 = (VAR11?VAR2 -> CLASS1 * VAR2 -> CLASS2 * VAR11 : VAR2 -> VAR1);
VAR1 = 0;
return VAR1;
VAR12 = FUN2(VAR6,VAR7,(((VAR5 & 0xff) >= 48 && (VAR5 & 0xff) <= '' || (VAR5 & 0xff) >= '' && (VAR5 & 0xff) <= '' || (VAR5 & 0xff) >= '' && (VAR5 & 0xff) <= '' || ((VAR5 & 0xff) == '.' || (VAR5 & 0xff) == 32 || (VAR5 & 0xff) == '-' || (VAR5 & 0xff) == '')?"%c" : "[%d]")),VAR5 & 0xff);
VAR6 += VAR12;
VAR5 >>= 8;
const char *VAR13 = ((void *)0);
return ((void *)0);
return ((void *)0);
VAR13 = FUN7(VAR14,VAR4 -> VAR13);
VAR6[0] ^= '' ^ '';
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6)," (%VAR33)",VAR13);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6)," (%VAR33 / 0x%04X)",VAR3,VAR4 -> VAR5);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %VAR33",FUN8(VAR4 -> VAR15));
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %dx%d",VAR4 -> VAR16,VAR4 -> VAR17);
FUN9(&VAR18 . VAR19,&VAR18 . VAR20,(VAR4 -> VAR16 * VAR4 -> VAR21 . VAR19),(VAR4 -> VAR17 * VAR4 -> VAR21 . VAR20),(1024 * 1024));
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6)," [VAR22 %d:%d VAR23 %d:%d]",VAR4 -> VAR21 . VAR19,VAR4 -> VAR21 . VAR20,VAR18 . VAR19,VAR18 . VAR20);
int VAR24 = (FUN10(VAR4 -> VAR25 . VAR19,VAR4 -> VAR25 . VAR20));
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %d/%d",VAR4 -> VAR25 . VAR19 / VAR24,VAR4 -> VAR25 . VAR20 / VAR24);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", VAR26=%d-%d",VAR4 -> VAR27,VAR4 -> VAR28);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %d VAR29",VAR4 -> CLASS1);
FUN11(VAR6,", ",VAR7);
FUN12(VAR6 + strlen(VAR6),(VAR7 - strlen(VAR6)),VAR4 -> CLASS2,VAR4 -> VAR30);
int VAR24 = (FUN10(VAR4 -> VAR25 . VAR19,VAR4 -> VAR25 . VAR20));
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %d/%d",VAR4 -> VAR25 . VAR19 / VAR24,VAR4 -> VAR25 . VAR20 / VAR24);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", VAR31 1");
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", VAR31 2");
VAR9 = FUN4(VAR4);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %d VAR32/VAR33",VAR9 / 1000);
VAR34 FUN1(char *VAR6,VAR34 VAR7,unsigned int VAR5)
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6)," (%VAR33 / 0x%04X)",VAR3,VAR4 -> VAR5);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %VAR33",FUN8(VAR4 -> VAR15));
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6)," (%d VAR35)",VAR4 -> VAR36);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %d VAR32/VAR33",VAR9 / 1000);
return 0;
return FUN5(VAR10);
VAR11 = FUN6(VAR2 -> VAR10);
VAR1 = (VAR11?VAR2 -> CLASS1 * VAR2 -> CLASS2 * VAR11 : VAR2 -> VAR1);
return VAR1;
VAR9 = FUN4(VAR4);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %d VAR32/VAR33",VAR9 / 1000);
static int FUN4(CLASS3 *VAR2)
VAR1 = (VAR11?VAR2 -> CLASS1 * VAR2 -> CLASS2 * VAR11 : VAR2 -> VAR1);
return VAR1;
VAR9 = FUN4(VAR4);
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %d VAR32/VAR33",VAR9 / 1000);
void FUN13(char *VAR6,int VAR7,CLASS3 *VAR4,int VAR37)
FUN2(VAR6,VAR7,"%VAR33: %VAR33%VAR33",(VAR38?VAR38 : "unknown"),VAR39,(VAR4 -> VAR40?" (VAR41)" : ""));
FUN2(VAR6 + strlen(VAR6),VAR7 - strlen(VAR6),", %d VAR32/VAR33",VAR9 / 1000);
