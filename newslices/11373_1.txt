*VAR1 = VAR2;
*VAR1 = (char*)calloc(VAR3, sizeof(char));
*VAR1 = VAR2;
return VAR4;
int VAR5 = 596;
char *VAR6;
FUN1(&VAR6,"9782",VAR5);
VAR7[5] = VAR6;
VAR8 = 5;
VAR9 = &VAR8;
VAR10 =  *(VAR7 +  *VAR9);
VAR11 = ((char *)VAR10);
VAR12 = (struct CLASS1*) malloc(sizeof(struct CLASS1));
VAR12->VAR13 = VAR14;
VAR12->VAR15[63] = '\';
VAR12->VAR16 = VAR14;
FUN2(VAR17, VAR18, "VAR12->VAR13", VAR12->VAR13, &VAR12->VAR13, "VAR19-VAR20");
FUN2(VAR17, VAR21, "VAR12->VAR15", VAR12->VAR15, "VAR19-VAR20");
FUN2(VAR17, VAR18, "VAR12->VAR16", VAR12->VAR16, &VAR12->VAR16, "VAR19-VAR20");
VAR22 = ((int )(strlen(VAR11)));
VAR12->VAR15[VAR23] = VAR11[VAR22];
FUN2(VAR17, VAR21, "VAR12->VAR15", VAR12->VAR15, "VAR24-VAR20");
VAR12->VAR15[VAR25] = VAR14(VAR12->VAR15[VAR25]);
FUN3("%VAR4",VAR12->VAR13(VAR12->VAR15[VAR25]));
free(VAR12);
void FUN1(char** VAR1, char* VAR26, int VAR3) {
if ((VAR27 = FUN4(VAR28, VAR3, 0666)) >= 0) {
*VAR1 = (char*)calloc(VAR3, sizeof(char));
FUN1(&VAR6,"9782",VAR5);
VAR7[5] = VAR6;
VAR10 =  *(VAR7 +  *VAR9);
VAR11 = ((char *)VAR10);
VAR22 = ((int )(strlen(VAR11)));
VAR12->VAR15[VAR23] = VAR11[VAR22];
FUN2(VAR17, VAR21, "VAR12->VAR15", VAR12->VAR15, "VAR24-VAR20");
free(VAR12);
int VAR14(int VAR4)
return VAR4 - 32;
VAR12->VAR15[VAR25] = VAR14(VAR12->VAR15[VAR25]);
FUN3("%VAR4",VAR12->VAR13(VAR12->VAR15[VAR25]));
free(VAR12);
