char* VAR1;
int VAR2 = 1000;
VAR3 = FUN1(VAR4, "data", VAR1, VAR2 * sizeof(char));
VAR1 = (char*) malloc(VAR2 * sizeof(char));
VAR3 = FUN1(VAR4, "data", VAR1, VAR2 * sizeof(char));
VAR2 = VAR2 * 2;
VAR1 = (char*) malloc(VAR2 * sizeof(char));
VAR3 = FUN1(VAR4, "data", VAR1, VAR2 * sizeof(char));
free(VAR1);
FUN2(VAR1);
return VAR5 - 32;
VAR6 = ((void *)VAR7);
VAR8[5] = VAR6;
VAR9 = 5;
FUN3(VAR10,1);
VAR11 = ((char *)((char *)VAR12));
VAR13 = (char*) malloc(64 * sizeof(char));
memset(VAR13,0,64);
FUN4(VAR14, VAR15, "FUN5(0)", FUN5(0), "VAR16-VAR17");
FUN4(VAR14, VAR18, "VAR19", VAR19, &VAR19, "VAR16-VAR17");
FUN4(VAR14, VAR18, "VAR20", VAR20, &VAR20, "VAR21-VAR17");
FUN4(VAR14, VAR18, "VAR19", VAR19, &VAR19, "VAR21-VAR17");
}
++VAR22;;
if (VAR7 != 0) {;
VAR9 = 5;
FUN3(VAR10,1);
FUN4(VAR14, VAR15, "FUN5(0)", FUN5(0), "VAR16-VAR17");
FUN4(VAR14, VAR18, "VAR20", VAR20, &VAR20, "VAR21-VAR17");
FUN4(VAR14, VAR18, "VAR19", VAR19, &VAR19, "VAR21-VAR17");
void FUN6(char * VAR23, ...) {
FUN4(VAR14, VAR24, "VAR13", VAR13, "VAR25-VAR26");
int FUN7(int VAR5)
return VAR5;
FUN4(VAR14, VAR18, "VAR19", VAR19, &VAR19, "VAR16-VAR17");
FUN4(VAR14, VAR18, "VAR20", VAR20, &VAR20, "VAR21-VAR17");
FUN4(VAR14, VAR18, "VAR19", VAR19, &VAR19, "VAR21-VAR17");
