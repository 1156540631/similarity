VAR1 = FUN1("UPCURVED_JUNCTION");
if (VAR1 != 0) {;
VAR2 = ((int )(strlen(VAR1)));
VAR3 = ((char *)(malloc(VAR2 + 1)));
if (VAR3 == 0) {
memset(VAR3,0,VAR2 + 1);
memcpy(VAR3,VAR1,VAR2);
VAR4[ *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *VAR5)))))))))))))))))))))))))))))))))))))))))))))))))] = VAR3;
VAR6 = VAR4[ *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *( *VAR5)))))))))))))))))))))))))))))))))))))))))))))))))];
if (VAR6 != 0) {
VAR7 = ((char *)VAR6);
FUN2(VAR8, VAR9, "VAR17", VAR7, "VAR10-VAR11");
for (VAR12 = 0; VAR12 < strlen(VAR7); ++VAR12) {
VAR13
VAR7[VAR12],
VAR14.VAR15[(int) VAR7[VAR12]]);
FUN2(VAR8, VAR16, "((int) VAR17[VAR12])", ((int) VAR7[VAR12]), &(VAR7[VAR12]), "VAR18-VAR11");
