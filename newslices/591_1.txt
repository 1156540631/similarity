return -1;
VAR1 = VAR2;
VAR3 = FUN1(VAR4, VAR2+1);
VAR5 = FUN2(VAR4, VAR2+2);
return -1;
VAR3, VAR5);
VAR6 = FUN3(VAR7, VAR8, VAR4,
VAR2, 4,
VAR3, VAR5);
FUN4(VAR9, VAR10, VAR4, VAR2, 1, VAR11);
VAR2 += 1;
FUN4(VAR9, VAR12, VAR4, VAR2, 1, VAR11);
VAR2 += 1;
FUN4(VAR9, VAR13, VAR4, VAR2, 2, VAR14);
VAR2 += 2;
VAR15 = FUN5(VAR4, VAR2, VAR16, VAR5);
FUN6(VAR9, VAR4, VAR2, VAR5,
"FUN7 (%u VAR17)", VAR5);
VAR2 += VAR5;
return VAR2 - VAR1;
VAR18 = FUN8(VAR19, VAR19+5, &VAR20);
(VAR21 == VAR22 || isspace(VAR19[VAR21])))
FUN9(VAR23[VAR24], VAR19, VAR21) == 0 &&
VAR25          VAR26;
FUN10(VAR4, VAR2), &VAR26,
VAR27);
if (!FUN11(VAR4, VAR2, VAR28,
return -1;
VAR19 = FUN12(VAR4, VAR2, VAR29);
VAR1 = VAR2;
VAR6 = FUN4(VAR7, VAR8, VAR4, VAR2, -1,
VAR30 = -1;
FUN13 (FUN14(VAR4, VAR2) != 0) {
VAR22 = FUN15(VAR4, VAR2,
FUN10(VAR4, VAR2), &VAR26,
VAR22 = FUN15(VAR4, VAR2,
VAR27);
VAR22 = FUN15(VAR4, VAR2,
return -1;
VAR31 = FUN16(VAR4, VAR2, VAR22, ':');
VAR19 = FUN12(VAR4, VAR2, VAR22);
VAR32 = FUN17(VAR19, VAR22, &VAR33);
VAR34 = VAR19;
VAR35 = *VAR34++;
if (!isascii(VAR35))
if (iscntrl(VAR35))
FUN18(VAR4, VAR2, VAR22 + 1);
FUN13 (FUN14(VAR4, VAR2) != 0) {
VAR22 = FUN15(VAR4, VAR2,
VAR31 = FUN16(VAR4, VAR2, VAR22, ':');
VAR19 = FUN12(VAR4, VAR2, VAR22);
VAR32 = FUN17(VAR19, VAR22, &VAR33);
VAR36 = FUN19(VAR4, VAR2);
VAR37 = FUN14(VAR4, VAR2);
VAR36 = VAR30;
VAR36 = 0;
VAR38 = FUN5(VAR4, VAR2, VAR36,
FUN20(VAR6, VAR2);
if (FUN1(VAR4, VAR2) == VAR39) {
VAR36 = 0;
FUN6(VAR40, VAR4, VAR2,
VAR36, "FUN7 (%d VAR17)",
VAR2 += VAR36;
return VAR2 - VAR1;
int VAR2 = 0;
? FUN21(VAR4, VAR2, VAR28, VAR7)
: FUN22(VAR4, VAR2, VAR28, VAR7);
VAR21 = (FUN1(VAR4, VAR2) == VAR39)
VAR2 += VAR21;
FUN13 (FUN14(VAR4, VAR2) != 0) {
VAR21 = (FUN1(VAR4, VAR2) == VAR39)
: FUN22(VAR4, VAR2, VAR28, VAR7);
FUN22(CLASS1 *VAR4, int VAR2, CLASS2 *VAR28,
VAR29 = FUN15(VAR4, VAR2,
VAR19 = FUN12(VAR4, VAR2, VAR29);
VAR19 = FUN12(VAR4, VAR2, VAR29);
FUN13 (FUN14(VAR4, VAR2) != 0) {
VAR22 = FUN15(VAR4, VAR2,
VAR31 = FUN16(VAR4, VAR2, VAR22, ':');
VAR19 = FUN12(VAR4, VAR2, VAR22);
VAR32 = FUN17(VAR19, VAR22, &VAR33);
FUN17(const CLASS3 *VAR19, VAR41 VAR22, CLASS4 *VAR42)
if (VAR22 >= 5 && FUN9("VAR43/", VAR19, 5) == 0) {
VAR18 = FUN8(VAR20, VAR19+VAR22, &VAR20);
VAR34 = VAR19;
VAR35 = *VAR34++;
if (!isascii(VAR35))
if (iscntrl(VAR35))
FUN23(CLASS1 *VAR4, CLASS2 *VAR28, CLASS5 *VAR7)
FUN13 (FUN14(VAR4, VAR2) != 0) {
VAR21 = (FUN1(VAR4, VAR2) == VAR39)
: FUN22(VAR4, VAR2, VAR28, VAR7);
FUN21(CLASS1 *VAR4, int VAR2, CLASS2 *VAR28,
VAR16 = FUN10(VAR4, VAR2);
FUN13 (FUN14(VAR4, VAR2) != 0) {
VAR21 = (FUN1(VAR4, VAR2) == VAR39)
: FUN22(VAR4, VAR2, VAR28, VAR7);
