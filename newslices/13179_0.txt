VAR1 VAR2::FUN1(CLASS1* VAR3,VAR4 VAR5) {
VAR1 VAR6 = 0;
FUN2 (VAR7 + VAR8 <= VAR9 + VAR10.VAR11) {
VAR1 VAR12 = FUN3(VAR7);
if (VAR7 + VAR8 + VAR12 <= VAR9 + VAR10.VAR11) {
VAR6 += VAR12 + (VAR10.VAR13 ? VAR14 : 0);}
VAR7 += VAR8 + VAR12;
} else {
FUN4(VAR15) << "VAR16 VAR17 VAR18 VAR10 VAR19 VAR17 VAR20 VAR21 VAR22-VAR23";
return 0;    }   }
if (VAR6 > VAR10.VAR11 + VAR24) {
FUN4(VAR15) << "VAR16 VAR17 VAR18 VAR10 VAR19 VAR17 VAR25 VAR26 VAR27 VAR28 VAR29 VAR22-VAR23";
return 0;}
CLASS2(VAR5, VAR6);
void VAR2::CLASS2(VAR30 VAR31,  int VAR32) {
++VAR31;
if (VAR31 == VAR33.FUN5())
return;
CLASS1* VAR34 = const_cast<CLASS1*>((*VAR31).VAR35);
int VAR36 = 0;
for (; VAR31 != VAR33.FUN5(); ++VAR31) {
VAR36 += (*VAR31).VAR11;
if ((*VAR31).VAR35 != VAR37)
(*VAR31).VAR35 += VAR32;}
CLASS3 = VAR36;
memmove(VAR34 + VAR32, VAR34, CLASS3);
