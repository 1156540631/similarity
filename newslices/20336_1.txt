VAR1 = FUN1("SS_TC_ROOT");
if (VAR1 != VAR2) {
VAR3 = strlen(VAR1) + strlen("testData") + 2;
VAR4 = (char*) malloc (VAR3 * sizeof(char));
if (VAR4 != VAR2) {
sprintf(VAR4, "%VAR34/%VAR34", VAR1, "testData");
if (FUN2(VAR4, &VAR5) == -1) {
VAR6 = mkdir(VAR4, 0700);
if (VAR6 == 0) {
VAR7 = strlen(VAR4) + strlen("VAR8.VAR9") + 2;
VAR10 = (char*) malloc (VAR7 * sizeof(char));
if (VAR10 != VAR2) {
sprintf(VAR10, "%VAR34/%VAR34", VAR4, "VAR8.VAR9");
VAR11 = fopen(VAR10, "w");
free(VAR10);
free(VAR4);
if (VAR11 == VAR2) {
FUN3();
FUN4(VAR12,((void *)0));
FUN5(VAR12,VAR13);
FUN6(VAR14,VAR15 . VAR16);
VAR17 = FUN7(VAR14,(&VAR15));
VAR17 = FUN8(VAR14,&VAR18,&VAR19);
VAR17 = FUN7(VAR14,(&VAR15));
FUN6(VAR14,VAR15 . VAR16);
FUN3();
FUN9(1,VAR20);
VAR17 = FUN10(VAR14 -> VAR21);
VAR17 = FUN11();
FUN12(0,VAR22,VAR23);
FUN13(VAR24 + strlen(VAR24),sizeof(VAR24) - strlen(VAR24),"VAR25=%5d VAR26=%3.*VAR27 VAR28=%3.1f ",VAR29,VAR26 < 9.95,VAR26,VAR28);
FUN13(VAR24 + strlen(VAR24),sizeof(VAR24) - strlen(VAR24),"%02d:%02d:%02d.%02d ",VAR30,VAR31,VAR32,100 * VAR33 / 1000000);
VAR34
vfprintf(VAR11, VAR35, VAR36);
fflush(VAR11);
FUN14();
if (VAR11 != VAR2 &&
VAR11 != VAR37) {
fclose(VAR11);
