rewind(VAR1);
VAR2 = fread(*VAR3,1,VAR4,VAR1);
*VAR3 = VAR5;
return VAR6 - 32;
char *VAR7;
FUN1(&VAR7,"FRITTERING_HYBRIDISED");
VAR8 = ((char *)VAR7);
VAR9 = (char*) malloc(64 * sizeof(char));
memset(VAR9,0,64);
FUN2(VAR10, VAR11, "VAR9", VAR9, "VAR12-VAR13");
strcpy(VAR9, VAR8);
FUN2(VAR10, VAR11, "VAR9", VAR9, "VAR14-VAR13");
VAR15 = strlen( VAR9);
VAR9[VAR16] = FUN3(VAR9[VAR16]);
FUN2(VAR10, VAR11, "VAR9", VAR9, "VAR17-VAR18");
FUN4("%s\n",VAR9);
void FUN4(char * VAR19, ...) {
free(VAR9);
int FUN3(int VAR6)
return VAR6;
VAR9[VAR16] = FUN3(VAR9[VAR16]);
FUN2(VAR10, VAR11, "VAR9", VAR9, "VAR17-VAR18");
FUN4("%s\n",VAR9);
void FUN1(char** VAR3, char* VAR20) {
VAR21 = FUN5(VAR20);
VAR1 = fopen(VAR21,"rb");
fseek(VAR1,0L,2);
VAR4 = ftell(VAR1);
*VAR3 = ((char *)(malloc(sizeof(char ) * (VAR4 + 1))));
FUN1(&VAR7,"FRITTERING_HYBRIDISED");
VAR8 = ((char *)VAR7);
strcpy(VAR9, VAR8);
FUN2(VAR10, VAR11, "VAR9", VAR9, "VAR14-VAR13");
VAR15 = strlen( VAR9);
FUN2(VAR10, VAR11, "VAR9", VAR9, "VAR17-VAR18");
FUN4("%s\n",VAR9);
