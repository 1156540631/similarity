static char VAR1[VAR2 + 1];
VAR3 = VAR4 = &VAR1[sizeof(VAR1) - 1];
VAR5 = VAR6 = VAR1;
VAR7 = VAR5;
FUN1 ((VAR8 = *VAR9++) != '\')
printf("VAR8 = %VAR8\n", VAR8);
VAR3--;
VAR3++;
VAR3--;
FUN2(' ');
FUN2(VAR8);
VAR3++;
VAR5--;
FUN2(VAR8);
FUN2(*VAR9);
VAR6 = VAR5;
VAR5 = VAR6;
FUN2('"');
VAR10 = VAR9;
for (VAR11 = VAR10; VAR11 < VAR9; )
VAR8 = *VAR11++;
FUN2('\\');
FUN2(VAR8);
FUN2(VAR8);
VAR5--;
FUN2('"');
FUN1 ((VAR8 = *VAR9++) != ':')
FUN2(VAR8);
FUN2(*VAR9);
FUN2(VAR8);
if (strchr(VAR12, VAR8) != VAR13)
VAR3--;
VAR5 = VAR6;
FUN2('"');
for (VAR11 = VAR10; VAR11 < VAR9; )
VAR8 = *VAR11++;
FUN2('\\');
FUN2(VAR8);
FUN2(VAR8);
VAR5--;
FUN2('"');
FUN1 ((VAR8 = *VAR9++) != '<')
FUN2(VAR8);
VAR3++;
VAR5--;
FUN2(VAR8);
FUN2(' ');
FUN2(VAR14);
FUN2('');
FUN2(VAR8);
FUN2(VAR8);
#VAR15 FUN2(VAR8)                   \
do                          \
{                           \
printf ("VAR5-VAR7 = %d   VAR3-VAR7=%d\n", (VAR5-VAR7), (VAR3-VAR7)); \
if (VAR16)               \
*VAR5++ = (VAR8);                \
else                        \
goto VAR17;               \
} FUN1 (0)
