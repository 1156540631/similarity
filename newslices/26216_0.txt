VAR1 = FUN1("SS_TC_ROOT");
if (VAR1 != VAR2) {
VAR3 = strlen(VAR1) + strlen("testData") + 2;
VAR4 = (char*) malloc (VAR3 * sizeof(char));
if (VAR4 != VAR2) {
sprintf(VAR4, "%s/%s", VAR1, "testData");
if (FUN2(VAR4, &VAR5) == -1) {
VAR6 = mkdir(VAR4, 0700);
if (VAR6 == 0) {
VAR7 = strlen(VAR4) + strlen("VAR8.VAR9") + 2;
VAR10 = (char*) malloc (VAR7 * sizeof(char));
if (VAR10 != VAR2) {
sprintf(VAR10, "%s/%s", VAR4, "VAR8.VAR9");
VAR11 = fopen(VAR10, "w");
free(VAR10);
free(VAR4);
if (VAR11 == VAR2) {
FUN3();
VAR12 = FUN4(VAR13);
FUN5(VAR14,VAR12);
FUN6(VAR15,((void *)0));
FUN7(VAR15,VAR16);
FUN8(VAR17,VAR18 . VAR19);
VAR20 = FUN9(VAR17,(&VAR18));
VAR20 = FUN10(VAR17,&VAR21,&VAR22);
VAR20 = FUN9(VAR17,(&VAR18));
VAR20 = FUN11(VAR17 -> VAR23);
VAR20 = FUN12();
FUN13(0,VAR24,VAR25);
FUN14(VAR26 + strlen(VAR26),sizeof(VAR26) - strlen(VAR26),"VAR27=%5d VAR28=%3.*VAR29 VAR30=%3.1f ",VAR31,VAR28 < 9.95,VAR28,VAR30);
FUN14(VAR26 + strlen(VAR26),sizeof(VAR26) - strlen(VAR26),"%02d:%02d:%02d.%02d ",VAR32,VAR33,VAR34,100 * VAR35 / 1000000);
FUN5(VAR36,VAR37);
FUN15(VAR38->VAR39[VAR40]);
FUN16("%s\n", VAR38->VAR39);
vfprintf(VAR11, VAR41, VAR42);
fflush(VAR11);
FUN16("%s\n", VAR38->VAR39);
FUN16("%s\n", VAR38->VAR43);
vfprintf(VAR11, VAR41, VAR42);
fflush(VAR11);
FUN16("%s\n", VAR38->VAR43);
FUN17();
if (VAR11 != VAR2 &&
VAR11 != VAR44) {
fclose(VAR11);
