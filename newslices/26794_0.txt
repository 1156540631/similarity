VAR1 = (unsigned char **) malloc(2 * sizeof(unsigned char *));
VAR2 = (unsigned char **) malloc(2 * sizeof(unsigned char *));
VAR3 = (unsigned char *) malloc(200*sizeof(unsigned char));
VAR4 = (unsigned char *) malloc(200*sizeof(unsigned char));
VAR5 = (char *) malloc(400*sizeof(char));
VAR6 = VAR5;
VAR7 = VAR8;
strcpy(VAR6, "VAR9 VAR10:");
VAR11 += strlen(VAR6);
*VAR7++ = *VAR6++;
VAR12 = FUN1((const char *) VAR13, VAR3, 200, VAR1, VAR14);
*VAR7++ = *VAR3++;
FUN2(24, VAR7);
VAR7 += 2;
FUN2(VAR15, VAR7);
VAR7 += 2;
FUN3(255, VAR7);
VAR7 += 4;
FUN2(30, VAR7);
VAR7 += 2;
FUN2(15, VAR7);
VAR7 += 2;
FUN2(256*2, VAR7);
VAR7 += 2;
FUN3(255, VAR7);
VAR7 += 4;
FUN3(VAR16+20000, VAR7);
VAR7 += 4;
FUN3(VAR16, VAR7);
VAR7 += 4;
FUN2(100, VAR7);
VAR7 += 2;
VAR12 = FUN1((const char *) VAR17, VAR4, 200, VAR2, VAR14);
*VAR7++ = *VAR4++;
FUN3(123, VAR7);
VAR7 += 4;
return (VAR7-VAR8);
CLASS1 *VAR18 = (CLASS1 *) malloc(100*sizeof(CLASS1));
CLASS1 *VAR19 = (CLASS1 *) malloc(1000 * sizeof(CLASS1));
VAR20 = FUN4(VAR19);
printf("VAR20 = %d\VAR28", VAR20);
VAR21 = VAR19 + sizeof(VAR9);
VAR22 = FUN5(VAR19, VAR20, VAR21, VAR18, 100);
FUN5(CLASS1 *VAR19, int VAR20, CLASS1 *VAR23, CLASS1 *VAR24, int VAR25)
VAR26 = VAR23;
VAR27 = VAR19 + VAR20;
printf("VAR19 = %s, VAR20 = %d, VAR23 = %s, VAR25 = %d\VAR28", (char *) VAR19, VAR20, (char *)VAR23, VAR25);
if ((VAR28 = FUN6(VAR19, VAR27, VAR26, (char *) VAR24, VAR25)) < 0) {
printf("FUN6 VAR29 %d\VAR28", VAR28);
int FUN4 (CLASS1 *VAR8) {
VAR22 = FUN5(VAR19, VAR20, VAR21, VAR18, 100);
