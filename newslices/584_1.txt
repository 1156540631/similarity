VAR1 VAR2 = FUN1(VAR3->VAR4);
VAR5 = VAR6.FUN2(VAR3);
VAR7.FUN3(VAR5->FUN4(), VAR3->FUN5());
return VAR8 + FUN1(VAR4) + FUN1(VAR9);
const char *VAR10;
VAR3 = (CLASS1 *)(VAR10 + FUN6(VAR11->VAR12));
!VAR3->FUN7())
if (((char *)VAR3 + VAR3->FUN8()) > VAR13 ||
return sizeof(CLASS1) + FUN1(VAR4) +
FUN1(VAR9) + FUN1(VAR14);
VAR3 = (CLASS1 *)((char *)VAR15 + VAR15->FUN8());
!VAR3->FUN7())
if (((char *)VAR3 + VAR3->FUN8()) > VAR13 ||
return VAR3;
return VAR16;
FUN9 ((VAR3 = VAR6.FUN10(VAR3))) {
VAR5 = VAR6.FUN2(VAR3);
VAR7.FUN3(VAR5->FUN4(), VAR3->FUN5());
VAR7.FUN3(VAR5->FUN4(), VAR3->FUN5());
return FUN6(VAR17);
return sizeof(CLASS1) + FUN1(VAR4) +
VAR3 = (CLASS1 *)((char *)VAR15 + VAR15->FUN8());
!VAR3->FUN7())
if (((char *)VAR3 + VAR3->FUN8()) > VAR13 ||
return VAR3;
FUN9 ((VAR3 = VAR6.FUN10(VAR3))) {
VAR18 VAR7;
VAR7.FUN3(VAR5->FUN4(), VAR3->FUN5());
VAR7.FUN3(VAR5->FUN4(), VAR3->FUN5());
const char *VAR19 = VAR7.FUN11();
VAR20<VAR21> VAR22;
VAR23 = strstr(VAR19, "\n");
} FUN9 (VAR23 && *(VAR19 = VAR23 + 1));
VAR23 = strstr(VAR19, "\n");
VAR21 VAR24;
sscanf(VAR19, "%d %d %d", &VAR25, &VAR26, &VAR27) == 3) {
} else if (sscanf(VAR19, "VAR28 %d %d %s",
&VAR24.VAR29, &VAR24.VAR30, VAR24.VAR31)) {
VAR22.FUN12(VAR24);
for (VAR32 VAR33 = 0; VAR33 < VAR22.FUN13(); VAR33++) {
for (VAR32 VAR33 = 0; VAR33 < VAR22.FUN13(); VAR33++) {
VAR21 &VAR24 = VAR22[VAR33];
FUN14(&VAR34, VAR16);
VAR35 &VAR36 = VAR24.VAR37[VAR38];
memcpy(VAR39, VAR36.VAR40,
FUN14(&VAR41, VAR16);
VAR36.VAR40 = VAR16;
free(VAR36.VAR40);
VAR18 FUN15(const CLASS1 *VAR3)
VAR18 VAR42 = VAR6.FUN15(VAR3);
VAR5 = VAR6.FUN2(VAR3);
const CLASS2 * FUN2(const CLASS1 *VAR3)
(CLASS2 *)(VAR10 + FUN6(VAR3->VAR43));
const CLASS2 * VAR8 =
if (((char *)VAR8 + VAR8->FUN8()) > (char *)VAR11)
FUN1(VAR9) + FUN5();
if (((char *)VAR8 + VAR8->FUN8()) > (char *)VAR11)
return VAR8;
VAR5 = VAR6.FUN2(VAR3);
VAR7.FUN3(VAR5->FUN4(), VAR3->FUN5());
return VAR8 + FUN1(VAR4) + FUN1(VAR9);
VAR7.FUN3(VAR5->FUN4(), VAR3->FUN5());
const char *VAR19 = VAR7.FUN11();
VAR23 = strstr(VAR19, "\n");
sscanf(VAR19, "%d %d %d", &VAR25, &VAR26, &VAR27) == 3) {
} else if (sscanf(VAR19, "VAR28 %d %d %s",
&VAR24.VAR29, &VAR24.VAR30, VAR24.VAR31)) {
VAR22.FUN12(VAR24);
for (VAR32 VAR33 = 0; VAR33 < VAR22.FUN13(); VAR33++) {
for (VAR32 VAR33 = 0; VAR33 < VAR22.FUN13(); VAR33++) {
VAR21 &VAR24 = VAR22[VAR33];
VAR35 &VAR36 = VAR24.VAR37[VAR38];
free(VAR36.VAR40);
