VAR1 += VAR2;
return VAR1 - VAR3;
return VAR1 - VAR3;
VAR1 += 2;
return VAR1 - VAR3;
memcpy(VAR4->VAR5.VAR6[0], VAR4->VAR7.VAR6[0],
VAR4->VAR8->CLASS1 * VAR4->VAR5.VAR9[0]);
VAR10 += 2;
VAR11 = *VAR10++ * 4;
VAR12 = *VAR10++ * 4;
VAR13 = *VAR10++ * 4;
VAR14 = VAR10;
VAR15 = *VAR14++;
FUN1(VAR14, VAR4->VAR16, VAR4->VAR17);
VAR18 = &VAR4->VAR5.VAR6[0][CLASS2 * VAR4->VAR5.VAR9[0] + VAR19];
VAR20 = &VAR4->VAR7.VAR6[0][CLASS2 * VAR4->VAR7.VAR9[0] + VAR19];
VAR21 = *VAR14++;
VAR21 = (VAR21 & 0x7F) + 1;
if (*VAR14++ == 0xFF)
VAR21 = FUN2(VAR14, &VAR18[VAR22], VAR21, VAR23 - VAR22);
memcpy(&VAR18[VAR22], VAR14, VAR21);
VAR14 += VAR21;
VAR21 = *VAR14++;
VAR21 = (VAR21 & 0x7F) + 1;
VAR20 += VAR4->VAR7.VAR9[0];
memcpy(&VAR18[VAR22], &VAR20[VAR22], VAR21 + 1);
VAR18 += VAR4->VAR5.VAR9[0];
memcpy(&VAR18[VAR22], VAR14, VAR21);
CLASS3 *VAR4 = VAR8->VAR24;
FUN3(VAR4);
static void FUN3(CLASS3 *VAR4)
const unsigned char *VAR10 = VAR4->VAR25 + 16;
VAR14 = VAR10;
VAR21 = *VAR14++;
VAR21 = (VAR21 & 0x7F) + 1;
memcpy(&VAR18[VAR22], VAR14, VAR21);
static void FUN1(const unsigned char *VAR3, unsigned char *VAR26, int VAR27)
VAR14 = VAR4->VAR16;
VAR21 = *VAR14++;
VAR21 = (VAR21 & 0x7F) + 1;
memcpy(&VAR18[VAR22], VAR14, VAR21);
