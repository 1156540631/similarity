VAR1 FUN1(const CLASS1 *VAR2)
VAR1 VAR3 = VAR4.FUN1(VAR2);
FUN2 ((VAR2 = VAR4.FUN3(VAR2))) {
VAR5 = VAR4.FUN4(VAR2);
const CLASS1 * FUN3(const CLASS1 *VAR6)
VAR2 = (CLASS1 *)((char *)VAR6 + VAR6->FUN5());
return sizeof(CLASS1) + FUN6(VAR7) +
VAR2 = (CLASS1 *)((char *)VAR6 + VAR6->FUN5());
!VAR2->FUN7())
if (((char *)VAR2 + VAR2->FUN5()) > VAR8 ||
return VAR2;
FUN2 ((VAR2 = VAR4.FUN3(VAR2))) {
VAR9.FUN8(VAR5->FUN9(), VAR2->FUN10());
return FUN11(VAR10);
VAR9.FUN8(VAR5->FUN9(), VAR2->FUN10());
const char *VAR11 = VAR9.FUN12();
VAR12 = strstr(VAR11, "\n");
sscanf(VAR11, "%d %d %d", &VAR13, &VAR14, &VAR15) == 3) {
} else if (sscanf(VAR11, "VAR16 %d %d %s",
&VAR17.VAR18, &VAR17.VAR19, VAR17.VAR20)) {
const CLASS2 * FUN4(const CLASS1 *VAR2)
(CLASS2 *)(VAR21 + FUN11(VAR2->VAR22));
const CLASS2 * VAR23 =
if (((char *)VAR23 + VAR23->FUN5()) > (char *)VAR24)
FUN6(VAR25) + FUN10();
return sizeof(CLASS2) + FUN6(VAR7) +
return VAR23;
VAR5 = VAR4.FUN4(VAR2);
VAR9.FUN8(VAR5->FUN9(), VAR2->FUN10());
return VAR23 + FUN6(VAR7) + FUN6(VAR25);
VAR9.FUN8(VAR5->FUN9(), VAR2->FUN10());
const char *VAR11 = VAR9.FUN12();
VAR12 = strstr(VAR11, "\n");
sscanf(VAR11, "%d %d %d", &VAR13, &VAR14, &VAR15) == 3) {
} else if (sscanf(VAR11, "VAR16 %d %d %s",
&VAR17.VAR18, &VAR17.VAR19, VAR17.VAR20)) {
bool FUN13(const char *VAR20)
VAR26 = open(VAR20, VAR27);
struct CLASS3 VAR28;
if (FUN14(VAR26, &VAR28) == -1 || VAR28.VAR29 < sizeof(VAR30)) {
VAR21 = (char *)FUN15(VAR31, VAR28.VAR29, VAR32, VAR33, VAR26, 0);
VAR21 = VAR31;
VAR34 VAR35 = FUN6(VAR2->VAR7);
VAR3.FUN8(VAR2->VAR23, VAR35);
if (!VAR4.FUN13("/system/VAR36/VAR37.VAR38")) {
FUN2 ((VAR2 = VAR4.FUN3(VAR2))) {
VAR2 = (CLASS1 *)(VAR21 + FUN11(VAR24->VAR39));
!VAR2->FUN7())
if (((char *)VAR2 + VAR2->FUN5()) > VAR8 ||
return VAR2;
FUN2 ((VAR2 = VAR4.FUN3(VAR2))) {
VAR9.FUN8(VAR5->FUN9(), VAR2->FUN10());
return FUN11(VAR10);
VAR9.FUN8(VAR5->FUN9(), VAR2->FUN10());
const char *VAR11 = VAR9.FUN12();
VAR12 = strstr(VAR11, "\n");
sscanf(VAR11, "%d %d %d", &VAR13, &VAR14, &VAR15) == 3) {
} else if (sscanf(VAR11, "VAR16 %d %d %s",
&VAR17.VAR18, &VAR17.VAR19, VAR17.VAR20)) {
