void FUN1(char *VAR1,int VAR2,CLASS1 *VAR3,int VAR4)
const char *VAR5 = ((void *)0);
VAR5 = FUN2(VAR6,VAR3 -> VAR5);
FUN3(VAR1,VAR2,"%s: %s%s",(VAR7?VAR7 : "unknown"),VAR8,(VAR3 -> VAR9?" (VAR10)" : ""));
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1)," (%s)",VAR5);
char VAR11[32];
FUN4(VAR11,sizeof(VAR11),VAR3 -> VAR12);
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1),", %s",FUN5(VAR3 -> VAR13));
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1)," (%d VAR14)",VAR3 -> VAR15);
return ((void *)0);
VAR1[0] ^= '' ^ '';
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1)," (%s)",VAR5);
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1),", %s",FUN5(VAR3 -> VAR13));
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1)," (%d VAR14)",VAR3 -> VAR15);
return ((void *)0);
VAR5 = FUN2(VAR6,VAR3 -> VAR5);
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1)," (%s)",VAR5);
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1),", %s",FUN5(VAR3 -> VAR13));
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1)," (%d VAR14)",VAR3 -> VAR15);
VAR16 FUN4(char *VAR1,VAR16 VAR2,unsigned int VAR12)
VAR17 = FUN3(VAR1,VAR2,(((VAR12 & 0xff) >= 48 && (VAR12 & 0xff) <= '' || (VAR12 & 0xff) >= '' && (VAR12 & 0xff) <= '' || (VAR12 & 0xff) >= '' && (VAR12 & 0xff) <= '' || ((VAR12 & 0xff) == '.' || (VAR12 & 0xff) == 32 || (VAR12 & 0xff) == '-' || (VAR12 & 0xff) == '')?"%c" : "[%d]")),VAR12 & 0xff);
VAR1 += VAR17;
VAR12 >>= 8;
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1)," (%s / 0x%04X)",VAR11,VAR3 -> VAR12);
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1),", %s",FUN5(VAR3 -> VAR13));
FUN3(VAR1 + strlen(VAR1),VAR2 - strlen(VAR1)," (%d VAR14)",VAR3 -> VAR15);
