static void * FUN1(void *)
VAR1<VAR2> VAR3;
VAR2 VAR4;
if (VAR5 &&
sscanf(VAR6, "%d %d %d", &VAR7, &VAR8, &VAR9) == 3) {
VAR5 = false;
} else if (VAR4.FUN2(VAR6)) {
VAR3.FUN3(VAR4);        }
for (VAR10 VAR11 = 0; VAR11 < VAR3.FUN4(); VAR11++) {
VAR2 &VAR4 = VAR3[VAR11];
VAR12 &VAR13 = FUN5(VAR4, VAR14);
VAR12 FUN5(VAR2& VAR4, VAR10 VAR14)
return VAR4.VAR15[VAR14];
VAR12 &VAR13 = FUN5(VAR4, VAR14);
if (!VAR13.VAR16) {
VAR13.FUN6(VAR17);             }
void *VAR18;
if (VAR19->lock(VAR19, VAR16->VAR20,
VAR21 |
VAR22 |
VAR23,
0, 0, VAR7, VAR8, &VAR18)) {
FUN7("VAR24 VAR25 lock VAR26");
VAR27->FUN8(VAR16);
break;                }
if (VAR16->VAR8 == VAR13.VAR8 && VAR16->VAR28 == VAR13.VAR7) {
memcpy(VAR18, VAR13.VAR16,  VAR13.VAR7 * VAR13.VAR8 * VAR13.VAR29);
