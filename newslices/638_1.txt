VAR1 = FUN1(VAR2, FUN2(VAR2));
VAR3 VAR4)
return FUN3(VAR5, VAR4);
VAR6 = 0;
VAR1 = FUN4(VAR7.FUN5(), VAR8, 0, 0);
VAR1 = FUN1(VAR2, FUN2(VAR2));
VAR1 = FUN1(VAR9, FUN2(VAR9));
VAR10 VAR4)
VAR11 = (CLASS1 *) malloc(sizeof(CLASS1) * 4096);
VAR10 VAR12 = 0;
VAR6 += VAR13;
VAR10 VAR13 = VAR14 - VAR6;
VAR13 = VAR4;
memcpy(&VAR11[VAR6],VAR15 + VAR12, sizeof(CLASS1) * VAR13);
VAR4 -= VAR13;
VAR14 += VAR4;
VAR12 += VAR13;
memcpy(&VAR11[VAR6],VAR15 + VAR12, sizeof(CLASS1) * VAR13);
VAR11 = (CLASS1 *) realloc(VAR11, sizeof(CLASS1) * VAR14);
VAR16::FUN6(const CLASS1* VAR2,
FUN7(VAR17 && VAR9 && VAR2, "VAR18 VAR19!!!");
VAR1 = FUN1(VAR2, FUN2(VAR2));
VAR3 VAR4)
return FUN3(VAR5, VAR4);
VAR10 VAR4)
VAR14 += VAR4;
VAR11 = (CLASS1 *) realloc(VAR11, sizeof(CLASS1) * VAR14);
VAR16::FUN1(const CLASS1 *VAR5,
return FUN3(VAR5, VAR4);
VAR16::FUN3(const CLASS1* VAR15,
memcpy(&VAR11[VAR6],VAR15 + VAR12, sizeof(CLASS1) * VAR13);
VAR11 = (CLASS1 *) realloc(VAR11, sizeof(CLASS1) * VAR14);
VAR16::FUN8(const CLASS1 *VAR5, VAR3 VAR4)
return FUN3(VAR5, VAR4);
