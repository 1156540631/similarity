static char VAR1[VAR2 + 1];
VAR3 = VAR4 = &VAR1[sizeof(VAR1) - 1];
VAR5 = VAR6 = VAR1;
VAR7 = VAR5;
FUN1(VAR8);
FUN1(*VAR9);
VAR3--;
FUN1('"');
FUN1('\\');
FUN1(VAR8);
FUN1(VAR8);
FUN1('"');
FUN1(VAR8);
VAR3++;
FUN1(VAR8);
FUN1(' ');
FUN1(VAR10);
FUN1('');
FUN1(VAR8);
FUN1(VAR8);
FUN1(VAR8);
VAR3--;
VAR3++;
VAR3--;
FUN1(' ');
FUN1(VAR8);
VAR3++;
FUN1(VAR8);
FUN1(*VAR9);
VAR6 = VAR5;
VAR5 = VAR6;
FUN1('"');
VAR11 = VAR9;
for (VAR12 = VAR11; VAR12 < VAR9; )
VAR8 = *VAR12++;
FUN1('\\');
FUN1(VAR8);
FUN1(VAR8);
VAR5--;
FUN1('"');
FUN2 ((VAR8 = *VAR9++) != ':')
FUN1(VAR8);
FUN1(*VAR9);
#VAR13 FUN1(VAR8)                   \
do                          \
{                           \
printf ("VAR5-VAR7 = %d   VAR3-VAR7=%d\n", (VAR5-VAR7), (VAR3-VAR7)); \
if (VAR14)               \
*VAR5++ = (VAR8);                \
else                        \
goto VAR15;               \
} FUN2 (0)
