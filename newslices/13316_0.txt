int (*VAR1)(VAR2 ) = VAR3;
VAR4 VAR5::FUN1(CLASS1* VAR6,VAR7 VAR8) {
VAR4 VAR9 = 0;
FUN2 (VAR10 + VAR11 <= VAR12 + VAR13.VAR14) {
VAR4 VAR15 = FUN3(VAR10);
if (VAR10 + VAR11 + VAR15 <= VAR12 + VAR13.VAR14) {
VAR9 += VAR15 + (VAR13.VAR16 ? VAR17 : 0);}
VAR10 += VAR11 + VAR15;
} else {
FUN4(VAR18) << "VAR19 VAR20 VAR21 VAR13 VAR22 VAR20 VAR23 VAR24 VAR25-VAR26";
return 0;    }   }
if (VAR9 > VAR13.VAR14 + VAR27) {
FUN4(VAR18) << "VAR19 VAR20 VAR21 VAR13 VAR22 VAR20 VAR28 VAR29 VAR30 VAR31 VAR32 VAR25-VAR26";
return 0;}
CLASS2(VAR8, VAR9);
void VAR5::CLASS2(VAR2 VAR33,  int VAR34) {
++VAR33;
if (VAR33 == VAR35.FUN5())
return;
CLASS1* VAR36 = const_cast<CLASS1*>((*VAR33).VAR37);
int VAR38 = 0;
for (; VAR33 != VAR35.FUN5(); ++VAR33) {
VAR38 += VAR1(VAR33);
int VAR3(VAR2 VAR33)
return (*VAR33).VAR14;
VAR38 += VAR1(VAR33);
if ((*VAR33).VAR37 != VAR39)
(*VAR33).VAR37 += VAR34;}
memmove(VAR36 + VAR34, VAR36, VAR38);
