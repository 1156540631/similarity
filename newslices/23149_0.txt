VAR1 = FUN1("SS_TC_ROOT");
if (VAR1 != VAR2) {
VAR3 = strlen(VAR1) + strlen("testData") + 2;
VAR4 = (char*) malloc (VAR3 * sizeof(char));
if (VAR4 != VAR2) {
sprintf(VAR4, "%s/%s", VAR1, "testData");
if (FUN2(VAR4, &VAR5) == -1) {
VAR6 = mkdir(VAR4, 0700);
if (VAR6 == 0) {
VAR7 = strlen(VAR4) + strlen("VAR8.VAR9") + 2;
VAR10 = (char*) malloc (VAR7 * sizeof(char));
if (VAR10 != VAR2) {
sprintf(VAR10, "%s/%s", VAR4, "VAR8.VAR9");
VAR11 = fopen(VAR10, "w");
free(VAR10);
free(VAR4);
if (VAR11 == VAR2) {
FUN3();
FUN4(&VAR12,"8709",VAR13);
CLASS1 *VAR14 = FUN5(VAR15,FUN6(VAR16,VAR17,VAR18,VAR19,VAR20));
return FUN7(VAR16,VAR21,(VAR22?VAR21 : ((const char *)1)),VAR23,VAR20);
CLASS1 *VAR14 = FUN8(&VAR24,VAR20);
return FUN7(VAR16,VAR21,(VAR22?VAR21 : ((const char *)1)),VAR23,VAR20);
CLASS1 *VAR14 = FUN5(VAR15,FUN6(VAR16,VAR17,VAR18,VAR19,VAR20));
FUN3();
FUN4(&VAR12,"8709",VAR13);
FUN9(VAR25);
FUN10("%s\n",&(VAR26[VAR27+1]));
vfprintf(VAR11, VAR28, VAR29);
fflush(VAR11);
FUN11();
if (VAR11 != VAR2 &&
VAR11 != VAR30) {
fclose(VAR11);
