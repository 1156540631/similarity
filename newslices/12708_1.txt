return VAR1 - 32;
VAR2 = FUN1("FAIRLY_INCOHERENCY");
VAR3 = ((int )(strlen(VAR2)));
VAR4 = ((char *)(malloc(VAR3 + 1)));
memset(VAR4,0,VAR3 + 1);
memcpy(VAR4,VAR2,VAR3);
VAR5 = &VAR4;
VAR6 = ((char *)( *VAR5));
VAR7 = (char*) malloc(64 * sizeof(char));
memset(VAR7,0,64);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR10-VAR11");
strcpy(VAR7, VAR6);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR12-VAR11");
VAR13 = strlen( VAR7);
VAR7[VAR14] = FUN3(VAR7[VAR14]);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR15-VAR16");
FUN4("%s\n",VAR7);
int FUN3(int VAR1)
return VAR1;
VAR7[VAR14] = FUN3(VAR7[VAR14]);
FUN2(VAR8, VAR9, "VAR7", VAR7, "VAR15-VAR16");
FUN4("%s\n",VAR7);
void FUN4(char * VAR17, ...) {
free(VAR7);
