fprintf(VAR1, "  -VAR2 %s ...\n", VAR3);
FUN1("VAR4 \"%s\" 'VAR5 VAR6 VAR7 template \"%s\"", VAR8, VAR3);
VAR9             VAR10 = VAR11;
if (FUN2 (VAR12)) {
FUN3 (VAR12);
FUN1("VAR13 VAR14 \"%s\" VAR15 VAR16 VAR17", VAR12);
FUN4(&VAR18, &VAR19);
else if (strcmp(VAR20[2], "fields3") == 0)
else if (strcmp(VAR20[2], "protocols") == 0)
else if (strcmp(VAR20[2], "values") == 0)
else if (strcmp(VAR20[2], "decodes") == 0)
FUN1("VAR21 \"%s\" VAR22 for -VAR23 VAR24", VAR20[2]);
FUN5 ((VAR25 = FUN6(VAR26, VAR20, VAR27)) != -1) {
VAR28 = FUN7(&VAR18, VAR25, VAR12, &VAR10);
FUN8(VAR28);
FUN9(VAR29);
FUN1("VAR21 -VAR30 VAR24 \"%s\"", VAR12);
else if (strcmp(VAR12, "dd") == 0)
VAR28 = FUN7(&VAR18, VAR25, VAR12, &VAR10);
FUN8(VAR28);
VAR12);
FUN10(VAR31, VAR32);
FUN1("VAR21 -VAR30 VAR24 \"%s\"", VAR12);
if (!FUN11(VAR12))
FUN12(VAR8);
FUN12(VAR33);
FUN1("VAR4 \"%s\" 'VAR5 VAR6 VAR7 template \"%s\"", VAR8, VAR3);
FUN1(const char *VAR31, ...)
FUN5 ((VAR25 = FUN6(VAR26, VAR20, VAR27)) != -1) {
VAR28 = FUN7(&VAR18, VAR25, VAR12, &VAR10);
FUN8(VAR28);
if(!FUN13(VAR34, VAR12)) {
FUN14(VAR34, VAR12);
VAR35 = FUN15(VAR12);
FUN1("VAR21 -VAR30 VAR24 \"%s\"", VAR12);
VAR36 = FUN16(VAR12);
if (strcmp(VAR12, "r") == 0)
VAR37 = FUN17(VAR12, &VAR38);
if (strcmp(VAR12, "text") == 0) {
if(!FUN13(VAR34, VAR12)) {
FUN14(VAR34, VAR12);
VAR35 = FUN15(VAR12);
VAR36 = FUN16(VAR12);
if (!FUN18(VAR12)) {
FUN19(VAR12);
FUN1("-VAR30 VAR24 \"%s\" VAR39 VAR40 VAR41", VAR12);
FUN11(const CLASS1 *VAR8)
FUN12(VAR8);
FUN12(VAR42);
VAR33 = FUN16(VAR8);
extern char         *VAR12;
VAR28 = FUN7(&VAR18, VAR25, VAR12, &VAR10);
FUN8(VAR28);
FUN20(int VAR26, char *VAR20[])
static const char    VAR27[] = VAR43 VAR44;
VAR45 = FUN21(VAR20[0], FUN20);
FUN5 ((VAR25 = FUN6(VAR26, VAR20, VAR27)) != -1) {
FUN22(VAR12);
if (VAR26 >= 2 && strcmp(VAR20[1], "-VAR23") == 0) {
if (strcmp(VAR20[2], "fields") == 0)
else if (strcmp(VAR20[2], "fields2") == 0)
else if (strcmp(VAR20[2], "defaultprefs") == 0)
else if (strcmp(VAR20[2], "currentprefs") == 0) {
FUN5 ((VAR25 = FUN6(VAR26, VAR20, VAR27)) != -1) {
VAR28 = FUN7(&VAR18, VAR25, VAR12, &VAR10);
FUN8(VAR28);
if (!FUN11(VAR12))
FUN1("\"%s\" VAR46 VAR16 VAR47 VAR48 VAR49 VAR1 VAR22=VAR50 VAR51.", VAR12);
FUN1("\"%s\" 'VAR5 VAR47 VAR48 VAR52 VAR53 VAR54", VAR12);
else if (strcmp(VAR12, "VAR47") == 0)
else if (strcmp(VAR12, "ad") == 0)
else if (strcmp(VAR12, "VAR2") == 0)
else if (strcmp(VAR12, "e") == 0)
} else if (strcmp(VAR12, "ps") == 0) {
} else if (strcmp(VAR12, "pdml") == 0) {
} else if (strcmp(VAR12, "psml") == 0) {
} else if(strcmp(VAR12, "fields") == 0) {
VAR28 = FUN7(&VAR18, VAR25, VAR12, &VAR10);
FUN8(VAR28);
FUN23(const char *VAR31, ...)
FUN1("VAR4 \"%s\" 'VAR5 VAR6 VAR7 template \"%s\"", VAR8, VAR3);
