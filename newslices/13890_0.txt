VAR1->VAR2.VAR3.VAR4 = malloc( FUN1( VAR1->VAR5.VAR6, sizeof( VAR7 ) ) );
if( VAR1->VAR2.VAR3.VAR4->VAR8 != VAR9 && VAR1->VAR5.VAR6 > sizeof( VAR7 ) )
if( VAR1->VAR2.VAR3.VAR4->VAR10 > VAR1->VAR5.VAR6 - sizeof( VAR7 ) )
VAR1->VAR2.VAR3.VAR4->VAR10 = VAR1->VAR5.VAR6 - sizeof( VAR7 );
void * VAR11[5];
VAR11[2] = VAR1->VAR2.VAR12.VAR13;
VAR1->VAR2.VAR12.VAR13 = FUN2(VAR14)
void FUN2(void * VAR14[2])
void * VAR1->VAR2.VAR12.VAR13 = VAR14[2];
VAR1->VAR2.VAR12.VAR13 = malloc( FUN1( VAR1->VAR5.VAR6,sizeof( *VAR1->VAR2.VAR12.VAR13 ) ) );
return VAR1->VAR2.VAR12.VAR13;
if( VAR1->VAR2.VAR12.VAR13->VAR15 > VAR1->VAR5.VAR6 )
VAR1->VAR2.VAR12.VAR13->VAR15 = VAR1->VAR5.VAR6;
if( VAR1->VAR5.VAR6 > sizeof(VAR16) )
memcpy( &VAR1->VAR2.VAR12.VAR13[1], VAR17 + 8 + sizeof(VAR16), VAR1->VAR5.VAR6 -sizeof(VAR16) );
