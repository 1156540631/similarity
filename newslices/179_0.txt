fprintf(VAR1, "%VAR11: VAR2 VAR3 > %FUN1 (%FUN1)\n", VAR4, VAR5, VAR2);
fprintf(VAR1, "%VAR11: VAR6 VAR3 < 0 (%FUN1)\n", VAR4, VAR6);
fprintf(VAR1, "%VAR11: VAR6 VAR3 > %FUN1 (%FUN1)\n", VAR4, VAR5, VAR6);
if (VAR2 + VAR6 > FUN2(VAR7)) {
VAR4, FUN2(VAR7), VAR2, VAR6);
fprintf(VAR1, "%VAR11: VAR8 VAR3 < 0 (%FUN1)\n", VAR4, VAR8);
fprintf(VAR1, "%VAR11: VAR8 VAR3 > %FUN1 (%FUN1)\n", VAR4, VAR9, VAR8);
if (VAR8 + VAR10 > FUN3(VAR7)) {
VAR4, FUN3(VAR7), VAR8, VAR10);
CLASS1 *VAR7 = FUN4(VAR11->VAR12.VAR13);
if (!FUN5(VAR7, VAR14, VAR2, VAR8, VAR6, VAR10)) {
VAR2 = 0;
VAR8 = 0;
VAR6 = FUN2(VAR7);
VAR10 = FUN3(VAR7);
VAR15 = FUN6(VAR7);
VAR16 = FUN7(VAR7) * VAR6;
VAR17 = FUN7(VAR7) * VAR2 + VAR15 * VAR8;
VAR18 = VAR11->VAR12.VAR19 + VAR17;
VAR20 = FUN8(VAR7) + VAR17;
for (VAR21 = VAR10; VAR21 > 0; VAR21--, VAR18 += VAR15, VAR20 += VAR15) {
memcpy(VAR20, VAR18, VAR16);
FUN9(VAR11->VAR22, true);
FUN10(VAR11->VAR23, VAR11->VAR24, VAR11->VAR22);
static void FUN11(void *VAR25)
FUN12(VAR11);
static inline void FUN12(struct CLASS2 *VAR11)
FUN12(VAR11);
FUN13(VAR11);
static void FUN13(struct CLASS2 *VAR11)
VAR26 = FUN14(VAR11);
FUN13(VAR11);
FUN15(VAR11);
static inline int FUN14(struct CLASS2 *VAR11)
VAR26 = FUN14(VAR11);
static void FUN13(struct CLASS2 *VAR11)
FUN13(VAR11);
FUN15(VAR11);
static inline void FUN15(struct CLASS2 *VAR11)
VAR27 = &VAR11->VAR28[VAR11->VAR29++];
FUN16(VAR11, VAR27->VAR2, VAR27->VAR8, VAR27->VAR6, VAR27->VAR10);
int VAR2, int VAR8, int VAR6, int VAR10)
if (!FUN5(VAR7, VAR14, VAR2, VAR8, VAR6, VAR10)) {
int VAR2, int VAR8, int VAR6, int VAR10)
VAR16 = FUN7(VAR7) * VAR6;
VAR17 = FUN7(VAR7) * VAR2 + VAR15 * VAR8;
VAR18 = VAR11->VAR12.VAR19 + VAR17;
VAR20 = FUN8(VAR7) + VAR17;
memcpy(VAR20, VAR18, VAR16);
static inline void FUN16(struct CLASS2 *VAR11,
FUN16(VAR11, VAR27->VAR2, VAR27->VAR8, VAR27->VAR6, VAR27->VAR10);
VAR27 = &VAR11->VAR28[VAR11->VAR29++];
FUN16(VAR11, VAR27->VAR2, VAR27->VAR8, VAR27->VAR6, VAR27->VAR10);
int VAR2, int VAR8, int VAR6, int VAR10)
if (!FUN5(VAR7, VAR14, VAR2, VAR8, VAR6, VAR10)) {
int VAR2, int VAR8, int VAR6, int VAR10)
fprintf(VAR1, "%VAR11: VAR2 VAR3 < 0 (%FUN1)\n", VAR4, VAR2);
VAR16 = FUN7(VAR7) * VAR6;
VAR17 = FUN7(VAR7) * VAR2 + VAR15 * VAR8;
VAR18 = VAR11->VAR12.VAR19 + VAR17;
VAR20 = FUN8(VAR7) + VAR17;
memcpy(VAR20, VAR18, VAR16);
for (VAR21 = VAR10; VAR21 > 0; VAR21--, VAR18 += VAR15, VAR20 += VAR15) {
memcpy(VAR20, VAR18, VAR16);
static inline bool FUN5(CLASS1 *VAR7,
VAR15 = FUN6(VAR7);
VAR16 = FUN7(VAR7) * VAR6;
for (VAR21 = VAR10; VAR21 > 0; VAR21--, VAR18 += VAR15, VAR20 += VAR15) {
memcpy(VAR20, VAR18, VAR16);
