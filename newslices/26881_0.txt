CLASS1 *VAR1;
FUN1(VAR1, VAR2);
FUN1(VAR1, VAR2);
struct CLASS2 VAR3;
if (FUN2(fileno(VAR4), &VAR3) < 0)
VAR1->VAR5 = VAR3.VAR6;
VAR7 += FUN3(VAR8, VAR1, VAR9, VAR10 + 1, VAR11);
(void) FUN3(VAR12, VAR13, &VAR11->VAR14, 0, VAR11);
CLASS1 *VAR1;
VAR15 = FUN4(VAR16->VAR17, VAR2, VAR16, VAR9, VAR10, VAR11);
CLASS1 **VAR9;
VAR15 = FUN4(VAR16->VAR17, VAR2, VAR16, VAR9, VAR10, VAR11);
CLASS1 **VAR9;
VAR7 += FUN3(VAR8, VAR1, VAR9, VAR10 + 1, VAR11);
(void) FUN3(VAR12, VAR13, &VAR11->VAR14, 0, VAR11);
CLASS1 **VAR9;
char *VAR18 = VAR11->VAR19;
VAR11->VAR19 = VAR18;
register CLASS3 *VAR11;
if (FUN5(VAR1, VAR16))
(VAR20) 0, VAR11);
FUN6(VAR16, VAR9, VAR10, VAR11);
if (FUN7(VAR16, VAR9, VAR10, VAR11) == VAR21)
VAR11->VAR22 = FUN8("VAR23: VAR24 VAR25 VAR26");
VAR11->VAR27++;
(VAR20) 0, VAR11);
if (FUN9(VAR28, VAR11->VAR29))
FUN10(VAR16, VAR9, VAR10, VAR11);
VAR11->VAR27++;
VAR11->VAR29 |= VAR30;
fprintf(VAR11->VAR31,
VAR16 = FUN11(VAR16, VAR9, VAR10, VAR11);
VAR11->VAR19 = VAR16->VAR32;
VAR11->VAR33 = VAR16->VAR32;
VAR11->VAR33 = "";
VAR11->VAR27++;
VAR18, FUN12(VAR8, 203));
VAR11->VAR19 = VAR18;
VAR15 = FUN4(VAR16->VAR17, VAR2, VAR16, VAR9, VAR10, VAR11);
(void) FUN3(VAR12, VAR13, &VAR11->VAR14, 0, VAR11);
CLASS3 *VAR11;
if (FUN9(VAR28, VAR11->VAR29))
VAR11->VAR19 = VAR34;
VAR7 += FUN3(VAR8, VAR1, VAR9, VAR10 + 1, VAR11);
register CLASS3 *VAR11;
(void) FUN3(VAR12, VAR13, &VAR11->VAR14, 0, VAR11);
register CLASS3 *VAR11;
char VAR8[VAR35 + 1];
FUN1(VAR1, VAR2);
VAR11->VAR29 &= ~VAR36;
VAR37 = ' ';
if (!FUN9(VAR36, VAR11->VAR29) || VAR1 != VAR34)
VAR37 = ',';
VAR38 = VAR34;
VAR39 = strlen(VAR40) + 1;
if (VAR39 <= sizeof VAR8)
VAR41 = VAR8;
VAR41 = FUN13(VAR39);
strcpy(VAR41, FUN14(VAR40, VAR2, VAR42));
for (VAR12 = VAR41; *VAR12 != '\'; )
auto char *VAR43;
FUN15 ((isascii(*VAR12) && isspace(*VAR12)) || *VAR12 == ',')
VAR12++;
VAR12 = VAR43;
VAR44 = FUN16(VAR16, VAR11);
FUN17(VAR16, VAR9, VAR10 + 1, VAR11);
VAR16 = FUN11(VAR16, VAR9, VAR10, VAR11);
VAR7 += FUN3(VAR8, VAR1, VAR9, VAR10 + 1, VAR11);
VAR16 = FUN18(VAR12, VAR13, VAR45, VAR37, &VAR43, VAR11);
VAR16->VAR46 = VAR1->VAR46;
VAR38 = VAR16;
VAR16->VAR47 = VAR38;
VAR16->VAR48 = VAR1;
if (FUN5(VAR1, VAR16))
VAR1->VAR49 |= VAR50;
VAR16->VAR49 |= VAR51;
VAR16->VAR52 = VAR1->VAR52;
VAR16->VAR49 |= VAR1->VAR49 & VAR53;
VAR16->VAR49 &= ~VAR53;
VAR16->VAR49 |= VAR1->VAR49 & VAR53;
VAR38 = VAR16;
register CLASS1 *VAR16 = VAR38;
FUN1(*VAR9, VAR42);
register CLASS1 **VAR9;
FUN6(VAR16, VAR9, VAR10, VAR11);
if (FUN7(VAR16, VAR9, VAR10, VAR11) == VAR21)
FUN17(VAR16, VAR9, VAR10 + 1, VAR11);
FUN10(VAR16, VAR9, VAR10, VAR11);
VAR16 = FUN11(VAR16, VAR9, VAR10, VAR11);
register CLASS1 *VAR16;
register CLASS1 **VAR9;
bool VAR54 = FUN9(VAR51, VAR16->VAR49);
VAR16->VAR49 |= VAR55;
FUN1(VAR16, VAR2);
VAR39 = strlen(VAR16->VAR17);
(void) strcpy(VAR8, VAR16->VAR17);
VAR16->VAR49 |= VAR56;
VAR16->VAR57 = "5.7.1";
else if (FUN9(VAR58, VAR16->VAR48->VAR49))
VAR16->VAR49 |= VAR56;
VAR16->VAR57 = "5.7.1";
VAR16->VAR48->VAR59, VAR60);
else if (FUN9(VAR61, VAR16->VAR48->VAR49))
VAR16->VAR49 |= VAR56;
VAR16->VAR57 = "5.7.1";
VAR16->VAR48->VAR32);
for (VAR62 = VAR9; (VAR63 = *VAR62) != VAR34; VAR62 = &VAR63->VAR47)
if (FUN5(VAR63, VAR16))
if (!FUN9(VAR55, VAR63->VAR49))
else if (FUN9(VAR50, VAR63->VAR49))
VAR16 = VAR63;
if (FUN5(VAR63, VAR16))
if (!FUN9(VAR51, VAR16->VAR49))
VAR63->VAR49 |= VAR16->VAR49;
VAR63->VAR49 |= VAR16->VAR49 & ~VAR51;
VAR16 = VAR63;
VAR16->VAR47 = VAR34;
printf("VAR64 VAR65 %s\n", VAR16->VAR17);
if (FUN9(VAR51|VAR56|VAR66, VAR16->VAR49))
VAR16->VAR49 |= VAR51;
VAR1->VAR67 = VAR3.VAR68;
VAR1->VAR59 = VAR69->VAR59;
VAR70 = FUN19(VAR3.VAR6);
VAR1->VAR59 = FUN8(VAR70->VAR71);
CLASS1 *VAR1;
FUN1(VAR1, VAR2);
VAR15 = FUN4(VAR16->VAR17, VAR2, VAR16, VAR9, VAR10, VAR11);
CLASS1 *VAR1;
FUN1(VAR1, VAR2);
VAR69 = FUN20(VAR1);
register CLASS1 *VAR16;
FUN15 (VAR16 != VAR34 && !FUN9(VAR72, VAR16->VAR49))
register CLASS1 *VAR16;
VAR16 = VAR16->VAR48;
return (VAR16);
VAR69 = FUN20(VAR1);
VAR1->VAR49 |= VAR73;
VAR1->VAR49 |= VAR72;
VAR1->VAR49 |= VAR69->VAR49 & VAR58;
VAR1->VAR49 |= VAR58;
VAR1->VAR49 |= VAR58;
VAR1->VAR49 |= VAR61;
VAR1->VAR49 |= VAR66;
VAR1->VAR49 |= VAR61;
VAR1->VAR49 &= ~VAR50;
VAR7 += FUN3(VAR8, VAR1, VAR9, VAR10 + 1, VAR11);
if (VAR7 > 0 && !FUN9(VAR50, VAR1->VAR49))
VAR1->VAR49 |= VAR51;
CLASS1 *VAR1;
VAR15 = FUN4(VAR16->VAR17, VAR2, VAR16, VAR9, VAR10, VAR11);
CLASS1 *VAR1;
VAR69 = FUN20(VAR1);
register CLASS1 *VAR16;
VAR69 = FUN20(VAR1);
CLASS1 *VAR1;
VAR15 = FUN4(VAR16->VAR17, VAR2, VAR16, VAR9, VAR10, VAR11);
FUN21("VAR74 VAR75 %s", VAR16->VAR17);
VAR15 = FUN4(VAR16->VAR17, VAR2, VAR16, VAR9, VAR10, VAR11);
char *VAR76;
VAR77 = FUN22(VAR76, VAR78, VAR79, VAR80, VAR81, VAR82, VAR34);
VAR4 = fopen(VAR76, "r");
if (FUN2(fileno(VAR4), &VAR3) < 0)
VAR83 = FUN23(fileno(VAR4));
FUN15 (fgets(VAR8, sizeof VAR8, VAR4) != VAR34)
register char *VAR12 = strchr(VAR8, '\');
VAR84 ? "VAR84" : "sending", VAR8);
VAR7 += FUN3(VAR8, VAR1, VAR9, VAR10 + 1, VAR11);
char *VAR40;
strchr(VAR40, '<') != VAR34 || strchr(VAR40, '(') != VAR34))
(strchr(VAR40, ',') != VAR34 || strchr(VAR40, ';') != VAR34 ||
VAR39 = strlen(VAR40) + 1;
