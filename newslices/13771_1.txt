VAR1&     VAR2,
const VAR3& VAR4,
FUN1(VAR5, this, VAR4, VAR2, VAR6);
VAR4.VAR7, VAR4.VAR8,
VAR4.FUN2(), VAR4.FUN3());
const VAR3 *VAR9 = &VAR4;
VAR4.FUN3() != VAR10 &&
FUN4(this, VAR4.VAR11)) {
if (FUN5(VAR4) + VAR12.FUN6() <=
VAR13 = new VAR3(VAR4);
VAR13->VAR8 = VAR14;
VAR9 = VAR13;
VAR15 FUN7(const_cast<VAR3&>(*VAR9));
bool VAR16 = VAR17::FUN8(this);
FUN7.FUN9(VAR5);
if (FUN10(*VAR9, VAR2, VAR6)) {
bool VAR18, VAR19;
FUN11(&VAR18, &VAR19);
VAR20 FUN12(*VAR9, VAR5, this, VAR2,
VAR18, VAR19, VAR16);
if (FUN13(VAR5)) {
FUN14(VAR5, *VAR9, VAR21, 0,
FUN15(FUN12);
FUN16(FUN12);
FUN17(&FUN12.VAR22, VAR23);
FUN17(&FUN12.VAR22, VAR24);
FUN18(FUN12.VAR22) &&
FUN19(FUN12.VAR22);
if (!FUN20(FUN12.VAR22)) {
FUN12.VAR22 |= VAR25;
FUN21(FUN12);
VAR17::FUN21(VAR20& VAR26)
VAR27<CLASS1*, 8> VAR28;
for (VAR29 VAR30 = FUN22(), VAR31 = FUN23();
VAR30 != VAR31; ++VAR30) {
if (VAR30->FUN24()) {
CLASS2* VAR32 = VAR30->FUN25();
VAR32 = FUN26(VAR32);
static CLASS2 * FUN26(const CLASS2 * VAR32)
FUN27 (VAR32) {
VAR28.FUN28(VAR32->VAR33);
VAR32 = VAR32->FUN29();
return VAR32;
VAR32 = FUN26(VAR32);
VAR27<CLASS1*, 8> VAR34;
for (CLASS1* VAR35 = VAR36.FUN30(); VAR35; VAR35 = VAR35->FUN31()) {
if (VAR35->FUN32() & VAR37)
continue;
VAR34.FUN28(VAR35);
if ((!VAR38 || VAR28.FUN33() != VAR34.FUN33()) && !VAR39) {
for (VAR40 = 0; VAR40 < VAR28.FUN33(); ++VAR40) {
printf("VAR41 float: %p\n", VAR28.FUN34(VAR40));
for (VAR40 = 0; VAR40 < VAR34.FUN33(); ++VAR40) {
printf("VAR42 float: %p\n", VAR34.FUN34(VAR40));
if (FUN35() && !VAR43.FUN36() &&
(VAR43.FUN37()->FUN38() ||
(0 == VAR43.FUN37()->VAR44.VAR45 &&
VAR43.FUN37() != VAR43.FUN39() &&
VAR43.FUN40().FUN41()->FUN38()))) {
VAR1 VAR46;
VAR47::VAR48 VAR49;
bool VAR50 = VAR47::FUN42(this, &VAR49);
VAR51 VAR52 = VAR50 ? VAR49.VAR53
: VAR9->VAR54.VAR55;
CLASS1* VAR56 = FUN43();
FUN44(VAR56, FUN12, VAR46, VAR52);
FUN45(!FUN46() || VAR46.VAR45 == 0,"FUN36 VAR56 VAR57 VAR58 VAR59");
if (VAR50 && !FUN46()) {
VAR60 VAR61 = VAR56->FUN47();
VAR61.VAR62 = VAR49.VAR63 - VAR46.VAR64;
VAR56->FUN48(VAR61);
VAR51 VAR65;
FUN49(*VAR9, FUN12, VAR2, &VAR65);
VAR60 VAR66 = VAR60(0, 0, VAR2.VAR67, VAR2.VAR45);
FUN50(VAR66, VAR9->VAR11,VAR65, VAR2.VAR68);
VAR2.VAR68.FUN51(VAR21);
VAR2.VAR68.FUN51(VAR69);
