if (FUN1(VAR1, VAR2))
FUN2(VAR1, VAR3);
(void) FUN3(VAR4, VAR5, &VAR6->VAR7, 0, VAR6);
CLASS1 *VAR1;
(void) FUN3(VAR4, VAR5, &VAR6->VAR7, 0, VAR6);
VAR6->VAR8 = FUN4("VAR9: VAR10 VAR11 VAR12");
VAR6->VAR13++;
VAR6->VAR13++;
fprintf(VAR6->VAR14,
register CLASS2 *VAR6;
VAR2 = FUN5(VAR2, VAR15, VAR16, VAR6);
register CLASS2 *VAR6;
char *VAR17 = VAR6->VAR18;
if (FUN6(VAR19, VAR6->VAR20))
VAR6->VAR20 |= VAR21;
register CLASS2 *VAR6;
VAR2 = FUN5(VAR2, VAR15, VAR16, VAR6);
VAR6->VAR18 = VAR17;
VAR6->VAR13++;
CLASS2 *VAR6;
char *VAR17 = VAR6->VAR18;
VAR17, FUN7(VAR22, 203));
VAR6->VAR18 = VAR17;
VAR23 = FUN8(VAR2->VAR24, VAR3, VAR2, VAR15, VAR16, VAR6);
CLASS2 *VAR6;
VAR25 += FUN3(VAR22, VAR1, VAR15, VAR16 + 1, VAR6);
register CLASS2 *VAR6;
FUN2(VAR1, VAR3);
(strchr(VAR26, ',') != VAR27 || strchr(VAR26, ';') != VAR27 ||
VAR28 = strlen(VAR26) + 1;
strcpy(VAR29, FUN9(VAR26, VAR3, VAR30));
VAR2 = FUN10(VAR4, VAR5, VAR31, VAR32, &VAR33, VAR6);
if (FUN1(VAR1, VAR2))
FUN2(VAR1, VAR3);
VAR2->VAR34 = VAR1;
if (FUN1(VAR1, VAR2))
VAR2->VAR35 = VAR1->VAR35;
VAR36 = VAR2;
register CLASS1 *VAR2 = VAR36;
FUN2(*VAR15, VAR30);
register CLASS1 **VAR15;
FUN11(VAR2, VAR15, VAR16, VAR6);
if (FUN12(VAR2, VAR15, VAR16, VAR6) == VAR37)
FUN13(VAR2, VAR15, VAR16 + 1, VAR6);
FUN14(VAR2, VAR15, VAR16, VAR6);
VAR2 = FUN5(VAR2, VAR15, VAR16, VAR6);
register CLASS1 *VAR2;
register CLASS1 **VAR15;
bool VAR38 = FUN6(VAR39, VAR2->VAR40);
for (VAR41 = VAR15; (VAR42 = *VAR41) != VAR27; VAR41 = &VAR42->VAR43)
if (FUN1(VAR42, VAR2))
VAR2 = VAR42;
if (FUN1(VAR42, VAR2))
FUN2(VAR42, VAR3);
VAR2 = VAR42;
if (FUN6(VAR39|VAR44|VAR45, VAR2->VAR40))
VAR23 = FUN8(VAR2->VAR24, VAR3, VAR2, VAR15, VAR16, VAR6);
CLASS1 *VAR1;
VAR46 = FUN15(VAR1);
register CLASS1 *VAR2;
FUN16 (VAR2 != VAR27 && !FUN6(VAR47, VAR2->VAR40))
register CLASS1 *VAR2;
return (VAR2);
VAR46 = FUN15(VAR1);
VAR1->VAR40 |= VAR46->VAR40 & VAR48;
CLASS1 *VAR1;
VAR23 = FUN8(VAR2->VAR24, VAR3, VAR2, VAR15, VAR16, VAR6);
CLASS1 *VAR1;
VAR46 = FUN15(VAR1);
register CLASS1 *VAR2;
VAR46 = FUN15(VAR1);
CLASS1 *VAR1;
VAR23 = FUN8(VAR2->VAR24, VAR3, VAR2, VAR15, VAR16, VAR6);
FUN17("VAR49 VAR50 %s", VAR2->VAR24);
VAR23 = FUN8(VAR2->VAR24, VAR3, VAR2, VAR15, VAR16, VAR6);
char *VAR51;
VAR52 = FUN18(VAR51, VAR53, VAR54, VAR55, VAR56, VAR57, VAR27);
VAR58 = fopen(VAR51, "r");
if (FUN19(fileno(VAR58), &VAR59) < 0)
VAR60 = FUN20(fileno(VAR58));
FUN16 (fgets(VAR22, sizeof VAR22, VAR58) != VAR27)
register char *VAR4 = strchr(VAR22, '\');
VAR61 ? "VAR61" : "sending", VAR22);
VAR25 += FUN3(VAR22, VAR1, VAR15, VAR16 + 1, VAR6);
char *VAR26;
if (VAR1 == VAR27 && (strchr(VAR26, ',') != VAR27 || strchr(VAR26, ';') != VAR27 || strchr(VAR26, '<') != VAR27 || strchr(VAR26, '(') != VAR27))
