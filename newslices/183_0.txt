return FUN1("image2", VAR1, VAR1);
char VAR2[1024];
return VAR3 && (FUN2(VAR2, sizeof(VAR2), VAR3, 1)>=0);
return FUN3(VAR4->VAR5, &VAR4->VAR6, VAR3, VAR4, 0, VAR4->VAR7);
const char *VAR3, void *VAR8,
if ((VAR9 = FUN4(&VAR4->VAR5, VAR3, VAR10 | VAR4->VAR11,
return FUN3(VAR4->VAR5, &VAR4->VAR6, VAR3, VAR4, 0, VAR4->VAR7);
const char *VAR3, void *VAR8,
if (!FUN5(VAR3)) {
VAR12 = FUN1(VAR13, VAR1, VAR1);
CLASS1 *VAR12, const char *VAR3)
int VAR9 = FUN6(&VAR14, VAR12, VAR13, VAR3);
const char *VAR13, const char *VAR3)
VAR12 = FUN1(VAR1, VAR3, VAR1);
char *VAR15, VAR16[20], VAR17;
VAR18 = 0;
FUN7 (isdigit(*VAR19)) {
VAR17 = *VAR19++;
VAR18 = VAR18 * 10 + *VAR19++ - '';
memcpy(VAR15, VAR16, VAR20);
FUN8(VAR16, sizeof(VAR16), "%0*VAR21", VAR18, VAR22);
VAR20 = strlen(VAR16);
memcpy(VAR15, VAR16, VAR20);
int FUN5(const char *VAR3)
return VAR3 && (FUN2(VAR2, sizeof(VAR2), VAR3, 1)>=0);
const char *VAR23, int VAR22)
VAR19 = VAR23;
VAR17 = *VAR19++;
VAR18 = VAR18 * 10 + *VAR19++ - '';
FUN8(VAR16, sizeof(VAR16), "%0*VAR21", VAR18, VAR22);
VAR20 = strlen(VAR16);
memcpy(VAR15, VAR16, VAR20);
VAR15 += VAR20;
memcpy(VAR15, VAR16, VAR20);
*VAR15++ = VAR17;
memcpy(VAR15, VAR16, VAR20);
CLASS1 *FUN1(const char *VAR24, const char *VAR3,
FUN9(VAR3) != VAR25) {
FUN5(VAR3) &&
int FUN2(char *VAR2, int VAR26,
VAR15 = VAR2;
memcpy(VAR15, VAR16, VAR20);
int FUN10(CLASS2 **VAR27, const char *VAR3, CLASS3 *VAR28, CLASS4 **VAR29)
if ((VAR9 = FUN11(VAR4, VAR3, &VAR30)) < 0)
static int FUN11(CLASS2 *VAR4, const char *VAR3, CLASS4 **VAR29)
if (!FUN5(VAR3)) {
