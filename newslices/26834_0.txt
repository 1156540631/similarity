VAR1 = (CLASS1 *) malloc(10000*sizeof(CLASS1));
VAR2 = FUN1(VAR1, 10000);
int FUN1(CLASS1 *VAR1, int VAR3){
int VAR4 = 0;
if ((VAR5 = fopen("VAR6-VAR7", "r")) == VAR8)
return -1;
FUN2 (((VAR9 = fgetc(VAR5)) != VAR10) && (VAR4 < VAR3)) {
*VAR1++ = (CLASS1) VAR9;
VAR4++;
return VAR4;}
CLASS2 = VAR1 + sizeof(VAR11);
VAR12 = VAR1 + VAR2;
FUN3(VAR13, &CLASS2, VAR12, &VAR2, VAR1);
FUN3(VAR11 *VAR13, CLASS1 **VAR14, CLASS1 *VAR12, int *VAR15, CLASS1 *VAR1)
char VAR16[2], *VAR17, *VAR18;
if ((VAR19 = FUN4(*VAR14, VAR12)) < 0) {
*VAR14 += VAR19;
FUN5(VAR20, *VAR14);
*VAR14 += VAR21;
FUN5(VAR22, *VAR14);
*VAR14 += VAR22;
VAR18 = (char *)VAR1 + VAR23;
VAR24 = (char *)*VAR14 - VAR18;
if ((VAR25)VAR24 > sizeof VAR16){
printf("VAR26 VAR27 VAR28!\VAR19");
printf("VAR29 %d VAR30 VAR31 VAR18 VAR32 VAR16 VAR33 VAR34 VAR35 %d VAR30\VAR19", VAR24, sizeof(VAR16));
