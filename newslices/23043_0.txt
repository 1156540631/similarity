CLASS1 *VAR1;
if (FUN1(VAR1, VAR2))
FUN2(VAR1, VAR3);
VAR1->VAR4 |= VAR5;
struct CLASS2 VAR6;
if (FUN3(fileno(VAR7), &VAR6) < 0)
VAR1->VAR8 = VAR6.VAR9;
VAR10 += FUN4(VAR11, VAR1, VAR12, VAR13 + 1, VAR14);
(void) FUN4(VAR15, VAR16, &VAR14->VAR17, 0, VAR14);
CLASS1 *VAR1;
char *VAR18 = VAR14->VAR19;
if (FUN1(VAR1, VAR2))
VAR2->VAR4 |= VAR1->VAR4 & VAR20;
VAR21 = VAR2;
register CLASS1 *VAR2 = VAR21;
VAR2 = FUN5(VAR2, VAR12, VAR13, VAR14);
VAR14->VAR19 = VAR18;
register CLASS3 *VAR14;
register CLASS1 *VAR2;
VAR22 = strlen(VAR2->VAR23);
(void) strcpy(VAR11, VAR2->VAR23);
FUN6("VAR24 VAR25 %s", VAR2->VAR23);
VAR26 = FUN7(VAR2->VAR23, VAR3, VAR2, VAR12, VAR13, VAR14);
char *VAR27;
VAR28 = FUN8(VAR27, VAR29, VAR30, VAR31, VAR32, VAR33, VAR34);
VAR7 = fopen(VAR27, "r");
if (FUN3(fileno(VAR7), &VAR6) < 0)
VAR35 = FUN9(fileno(VAR7));
FUN10 (fgets(VAR11, sizeof VAR11, VAR7) != VAR34)
register char *VAR15 = strchr(VAR11, '\');
VAR36 ? "VAR36" : "sending", VAR11);
VAR10 += FUN4(VAR11, VAR1, VAR12, VAR13 + 1, VAR14);
char *VAR37;
FUN2(VAR1, VAR3);
(void) FUN4(VAR15, VAR16, &VAR14->VAR17, 0, VAR14);
CLASS1 *VAR1;
strchr(VAR37, '<') != VAR34 || strchr(VAR37, '(') != VAR34))
(strchr(VAR37, ',') != VAR34 || strchr(VAR37, ';') != VAR34 ||
VAR22 = strlen(VAR37) + 1;
VAR38 = FUN11(VAR22);
strcpy(VAR38, FUN12(VAR37, VAR3, VAR39));
VAR26 = FUN7(VAR2->VAR23, VAR3, VAR2, VAR12, VAR13, VAR14);
CLASS1 **VAR12;
VAR26 = FUN7(VAR2->VAR23, VAR3, VAR2, VAR12, VAR13, VAR14);
CLASS1 **VAR12;
VAR10 += FUN4(VAR11, VAR1, VAR12, VAR13 + 1, VAR14);
(void) FUN4(VAR15, VAR16, &VAR14->VAR17, 0, VAR14);
CLASS1 **VAR12;
char *VAR18 = VAR14->VAR19;
VAR14->VAR40 = FUN13("VAR41: VAR42 VAR43 VAR44");
VAR14->VAR45++;
if (FUN14(VAR46, VAR14->VAR47))
VAR14->VAR45++;
VAR14->VAR47 |= VAR48;
fprintf(VAR14->VAR49,
register CLASS3 *VAR14;
VAR14->VAR19 = VAR2->VAR50;
VAR14->VAR40 = FUN13("VAR41: VAR42 VAR43 VAR44");
VAR14->VAR45++;
if (FUN14(VAR46, VAR14->VAR47))
VAR14->VAR45++;
VAR14->VAR47 |= VAR48;
fprintf(VAR14->VAR49,
VAR2 = FUN5(VAR2, VAR12, VAR13, VAR14);
VAR14->VAR19 = VAR18;
register CLASS3 *VAR14;
(VAR51) 0, VAR14);
FUN15(VAR2, VAR12, VAR13, VAR14);
if (FUN16(VAR2, VAR12, VAR13, VAR14) == VAR52)
FUN17(VAR2, VAR12, VAR13 + 1, VAR14);
(VAR51) 0, VAR14);
FUN18(VAR2, VAR12, VAR13, VAR14);
VAR2 = FUN5(VAR2, VAR12, VAR13, VAR14);
register CLASS3 *VAR14;
VAR14->VAR19 = VAR2->VAR50;
VAR14->VAR53 = VAR2->VAR50;
VAR14->VAR53 = "";
VAR14->VAR45++;
CLASS3 *VAR14;
char *VAR18 = VAR14->VAR19;
VAR18, FUN19(VAR11, 203));
VAR14->VAR19 = VAR18;
VAR26 = FUN7(VAR2->VAR23, VAR3, VAR2, VAR12, VAR13, VAR14);
CLASS3 *VAR14;
if (FUN14(VAR46, VAR14->VAR47))
VAR14->VAR19 = VAR34;
VAR10 += FUN4(VAR11, VAR1, VAR12, VAR13 + 1, VAR14);
register CLASS3 *VAR14;
(void) FUN4(VAR15, VAR16, &VAR14->VAR17, 0, VAR14);
register CLASS3 *VAR14;
char VAR11[VAR54 + 1];
VAR14->VAR47 &= ~VAR55;
VAR56 = ' ';
if (!FUN14(VAR55, VAR14->VAR47) || VAR1 != VAR34)
VAR56 = ',';
VAR21 = VAR34;
VAR22 = strlen(VAR37) + 1;
if (VAR22 <= sizeof VAR11)
VAR38 = VAR11;
VAR38 = FUN11(VAR22);
strcpy(VAR38, FUN12(VAR37, VAR3, VAR39));
for (VAR15 = VAR38; *VAR15 != '\'; )
auto char *VAR57;
FUN10 ((isascii(*VAR15) && isspace(*VAR15)) || *VAR15 == ',')
VAR15++;
VAR15 = VAR57;
VAR58 = FUN20(VAR2, VAR14);
VAR2 = FUN21(VAR15, VAR16, VAR59, VAR56, &VAR57, VAR14);
VAR2->VAR60 = VAR21;
VAR2->VAR61 = VAR1;
if (FUN1(VAR1, VAR2))
VAR2->VAR4 |= VAR62;
VAR2->VAR63 = VAR1->VAR63;
VAR2->VAR4 |= VAR1->VAR4 & VAR20;
VAR2->VAR4 &= ~VAR20;
VAR21 = VAR2;
register CLASS1 *VAR2 = VAR21;
FUN15(VAR2, VAR12, VAR13, VAR14);
if (FUN16(VAR2, VAR12, VAR13, VAR14) == VAR52)
FUN17(VAR2, VAR12, VAR13 + 1, VAR14);
FUN18(VAR2, VAR12, VAR13, VAR14);
FUN2(*VAR12, VAR39);
register CLASS1 **VAR12;
VAR2 = FUN5(VAR2, VAR12, VAR13, VAR14);
register CLASS1 *VAR2;
register CLASS1 **VAR12;
bool VAR64 = FUN14(VAR62, VAR2->VAR4);
VAR2->VAR4 |= VAR65;
VAR22 = strlen(VAR2->VAR23);
(void) strcpy(VAR11, VAR2->VAR23);
VAR2->VAR4 |= VAR66;
VAR2->VAR67 = "5.7.1";
else if (FUN14(VAR68, VAR2->VAR61->VAR4))
VAR2->VAR4 |= VAR66;
VAR2->VAR67 = "5.7.1";
VAR2->VAR61->VAR69, VAR70);
else if (FUN14(VAR71, VAR2->VAR61->VAR4))
VAR2->VAR4 |= VAR66;
VAR2->VAR67 = "5.7.1";
VAR2->VAR61->VAR50);
for (VAR72 = VAR12; (VAR73 = *VAR72) != VAR34; VAR72 = &VAR73->VAR60)
if (FUN1(VAR73, VAR2))
if (!FUN14(VAR65, VAR73->VAR4))
else if (FUN14(VAR5, VAR73->VAR4))
VAR2 = VAR73;
if (FUN1(VAR73, VAR2))
if (!FUN14(VAR65, VAR73->VAR4))
if (!FUN14(VAR62, VAR2->VAR4))
VAR73->VAR4 |= VAR2->VAR4;
else if (FUN14(VAR5, VAR73->VAR4))
VAR73->VAR4 |= VAR2->VAR4 & ~VAR62;
VAR2 = VAR73;
VAR2->VAR60 = VAR34;
printf("VAR74 VAR75 %s\n", VAR2->VAR23);
if (FUN14(VAR62|VAR66|VAR76, VAR2->VAR4))
VAR2->VAR4 |= VAR62;
VAR1->VAR77 = VAR6.VAR78;
VAR1->VAR69 = VAR79->VAR69;
VAR80 = FUN22(VAR6.VAR9);
VAR1->VAR69 = FUN13(VAR80->VAR81);
CLASS1 *VAR1;
FUN2(VAR1, VAR3);
VAR26 = FUN7(VAR2->VAR23, VAR3, VAR2, VAR12, VAR13, VAR14);
CLASS1 *VAR1;
FUN2(VAR1, VAR3);
VAR79 = FUN23(VAR1);
register CLASS1 *VAR2;
FUN10 (VAR2 != VAR34 && !FUN14(VAR82, VAR2->VAR4))
register CLASS1 *VAR2;
VAR2 = VAR2->VAR61;
return (VAR2);
VAR79 = FUN23(VAR1);
VAR1->VAR4 |= VAR83;
VAR1->VAR4 |= VAR82;
VAR1->VAR4 |= VAR79->VAR4 & VAR68;
VAR1->VAR4 |= VAR68;
VAR1->VAR4 |= VAR68;
VAR1->VAR4 |= VAR71;
VAR1->VAR4 |= VAR76;
VAR1->VAR4 |= VAR71;
VAR1->VAR4 &= ~VAR5;
VAR10 += FUN4(VAR11, VAR1, VAR12, VAR13 + 1, VAR14);
if (VAR10 > 0 && !FUN14(VAR5, VAR1->VAR4))
VAR1->VAR4 |= VAR62;
CLASS1 *VAR1;
VAR26 = FUN7(VAR2->VAR23, VAR3, VAR2, VAR12, VAR13, VAR14);
CLASS1 *VAR1;
VAR79 = FUN23(VAR1);
register CLASS1 *VAR2;
VAR79 = FUN23(VAR1);
CLASS1 *VAR1;
VAR26 = FUN7(VAR2->VAR23, VAR3, VAR2, VAR12, VAR13, VAR14);
FUN6("VAR24 VAR25 %s", VAR2->VAR23);
VAR26 = FUN7(VAR2->VAR23, VAR3, VAR2, VAR12, VAR13, VAR14);
char *VAR27;
CLASS4 *volatile VAR7 = VAR34;
char VAR11[VAR84];
printf("FUN7(%s)\n", VAR27);
VAR28 = FUN8(VAR27, VAR29, VAR30, VAR31, VAR32, VAR33, VAR34);
VAR7 = fopen(VAR27, "r");
if (FUN3(fileno(VAR7), &VAR6) < 0)
VAR35 = FUN9(fileno(VAR7));
FUN10 (fgets(VAR11, sizeof VAR11, VAR7) != VAR34)
register char *VAR15 = strchr(VAR11, '\');
VAR36 ? "VAR36" : "sending", VAR11);
VAR18, FUN19(VAR11, 203));
VAR10 += FUN4(VAR11, VAR1, VAR12, VAR13 + 1, VAR14);
register char **VAR85;
FUN10 ((VAR15 = *VAR85++) != VAR34)
(void) FUN4(VAR15, VAR16, &VAR14->VAR17, 0, VAR14);
char *VAR37;
printf("VAR86: %s\n   VAR1=", VAR37);
strchr(VAR37, '<') != VAR34 || strchr(VAR37, '(') != VAR34))
(strchr(VAR37, ',') != VAR34 || strchr(VAR37, ';') != VAR34 ||
VAR22 = strlen(VAR37) + 1;
VAR38 = FUN11(VAR22);
strcpy(VAR38, FUN12(VAR37, VAR3, VAR39));
