VAR1));
FUN1(VAR2, VAR1, VAR3);
VAR4<char> VAR5 = new char[VAR6];
reinterpret_cast<CLASS1*>(VAR5.FUN2()),
*reinterpret_cast<CLASS1*>(VAR5.FUN2());
CLASS1 &VAR7 =
if (!FUN3(VAR8, VAR7.VAR9,
VAR10 VAR1,
VAR11 VAR12 = FUN4(VAR1);
!FUN5(VAR1, VAR13"VAR14.VAR15") &&
FUN6(VAR7.VAR9);
FUN7(VAR7.VAR9,
new VAR16[FUN4(VAR7.VAR9) + 1];
VAR17 VAR18 =
FUN8(VAR18, VAR7.VAR9);
FUN8(VAR18 + VAR19 - 3, VAR13"old");
FUN7(VAR17 VAR20, VAR21 &VAR22, VAR21 &VAR23,
VAR21 VAR24 = FUN9(VAR20, 0);
if (!FUN10(VAR20, 0, VAR24,
if (!FUN11(VAR25, VAR7.VAR9)) {
VAR7.VAR9, VAR26)) {
const VAR11 VAR19 = FUN4(VAR7.VAR9);
FUN8(VAR18 + VAR19 - 3, VAR13"old");
