VAR1->VAR2 = VAR3;
VAR1->VAR4 = 0;
VAR5 = FUN1(VAR6, VAR7, VAR7->VAR8);
VAR5 = FUN2(VAR6, VAR7);
for (VAR7 = VAR9->VAR10; VAR7; VAR7 = VAR7->VAR11) {
FUN3(VAR7->VAR12);
VAR7->VAR13++;
VAR5 = FUN4(VAR6, VAR7);
return VAR3;
VAR7->VAR14 |= VAR15;
return VAR7;
return VAR3;
VAR16 = FUN5(VAR6, VAR17);
VAR5 = FUN6(VAR6, &VAR16->VAR1);
VAR18 VAR1;
FUN7(&VAR1);
VAR5 = FUN8(VAR6, &VAR19->VAR1, VAR20.VAR2, &VAR1);
VAR5 = FUN6(VAR6, &VAR1);
static int FUN6(CLASS1 *VAR6, VAR18 *VAR1)
if (!memcmp(VAR16->VAR1.VAR2, VAR1->VAR2, VAR1->VAR4)) {
void FUN7(VAR18 *VAR1)
FUN7(&VAR1);
VAR5 = FUN6(VAR6, &VAR1);
static int FUN4(CLASS1 *VAR6, CLASS2 *VAR7)
VAR5 = FUN4(VAR6, VAR7);
return VAR7;
VAR16 = FUN5(VAR6, VAR17);
VAR5 = FUN6(VAR6, &VAR16->VAR1);
