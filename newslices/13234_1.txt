static void *FUN1(void *)
if (!VAR1.FUN2("/system/VAR2/VAR3.VAR4")) {
bool FUN2(const char *VAR5)
VAR6 = open(VAR5, VAR7);
if (FUN3(VAR6, &VAR8) == -1 || VAR8.VAR9 < sizeof(VAR10)) {
VAR11 = (char *)FUN4(VAR12, VAR8.VAR9, VAR13, VAR14, VAR6, 0);
if (!VAR1.FUN2("/system/VAR2/VAR3.VAR4")) {
VAR15 VAR16, VAR17, VAR18;
FUN5 ((VAR19 = VAR1.FUN6(VAR19))) {
VAR19 = (CLASS1 *)(VAR11 + FUN7(VAR20->VAR21));
!VAR19->FUN8())
if (((char *)VAR19 + VAR19->FUN9()) > VAR22 ||
return VAR19;
FUN5 ((VAR19 = VAR1.FUN6(VAR19))) {
VAR23.FUN10(VAR24->FUN11(), VAR19->FUN12());
return FUN7(VAR25);
VAR23.FUN10(VAR24->FUN11(), VAR19->FUN12());
const char *VAR26 = VAR23.FUN13();
VAR27 = strstr(VAR26, "\n");
VAR28 VAR29;
sscanf(VAR26, "%d %d %d", &VAR16, &VAR17, &VAR18) == 3) {
} else if (sscanf(VAR26, "VAR30 %d %d %s", &VAR29.VAR31, &VAR29.VAR32, VAR29.VAR5)) {
for (VAR33 VAR34 = 0; VAR34 < VAR35.FUN14(); VAR34++) {
VAR28 &VAR29 = VAR35[VAR34];
VAR29.VAR36.FUN15();
VAR37 &VAR38 = FUN16(&VAR29);
VAR37 FUN16(VAR28 *&VAR29)
return VAR29->VAR36.FUN17();
VAR37 &VAR38 = FUN16(&VAR29);
strcpy(VAR38.VAR5, VAR39.FUN13());
