VAR1 = FUN1(VAR2,VAR3,(((VAR4 & 0xff) >= 48 && (VAR4 & 0xff) <= '' || (VAR4 & 0xff) >= '' && (VAR4 & 0xff) <= '' || (VAR4 & 0xff) >= '' && (VAR4 & 0xff) <= '' || ((VAR4 & 0xff) == '.' || (VAR4 & 0xff) == 32 || (VAR4 & 0xff) == '-' || (VAR4 & 0xff) == '')?"%c" : "[%d]")),VAR4 & 0xff);
VAR4 >>= 8;
const char *VAR5 = ((void *)0);
return ((void *)0);
VAR5 = FUN2(VAR6,VAR7 -> VAR5);
FUN3(VAR8,sizeof(VAR8),VAR7 -> VAR4);
return ((void *)0);
VAR2[0] ^= '' ^ '';
FUN1(VAR2 + strlen(VAR2),VAR3 - strlen(VAR2)," (%s)",VAR5);
FUN1(VAR2 + strlen(VAR2),VAR3 - strlen(VAR2)," (%s / 0x%04X)",VAR8,VAR7 -> VAR4);
VAR9 FUN3(char *VAR2,VAR9 VAR3,unsigned int VAR4)
VAR1 = FUN1(VAR2,VAR3,(((VAR4 & 0xff) >= 48 && (VAR4 & 0xff) <= '' || (VAR4 & 0xff) >= '' && (VAR4 & 0xff) <= '' || (VAR4 & 0xff) >= '' && (VAR4 & 0xff) <= '' || ((VAR4 & 0xff) == '.' || (VAR4 & 0xff) == 32 || (VAR4 & 0xff) == '-' || (VAR4 & 0xff) == '')?"%c" : "[%d]")),VAR4 & 0xff);
FUN1(VAR2 + strlen(VAR2),VAR3 - strlen(VAR2)," (%s / 0x%04X)",VAR8,VAR7 -> VAR4);
void FUN4(char *VAR2,int VAR3,CLASS1 *VAR7,int VAR10)
FUN1(VAR2,VAR3,"%s: %s%s",(VAR11?VAR11 : "unknown"),VAR12,(VAR7 -> VAR13?" (VAR14)" : ""));
FUN1(VAR2 + strlen(VAR2),VAR3 - strlen(VAR2)," (%s / 0x%04X)",VAR8,VAR7 -> VAR4);
