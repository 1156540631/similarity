if (!FUN1(VAR1, VAR2, VAR3, VAR4, VAR5, VAR6)) {
int VAR3, int VAR4, int VAR5, int VAR6)
int VAR7 = FUN2(VAR1) * VAR5;
if (!FUN1(VAR1, VAR2, VAR3, VAR4, VAR5, VAR6)) {
VAR8 VAR9 = VAR10->VAR11[FUN3(VAR12) >> 2];
return VAR9;
return FUN4(FUN5(VAR10));
VAR3 = FUN6(VAR10);
if (FUN7(VAR10, VAR13, VAR3, VAR4, VAR7, VAR14) == 0) {
VAR8 VAR15, int VAR3, int VAR4, int VAR5, int VAR6)
if (!FUN1(VAR1, VAR2, VAR3, VAR4, VAR5, VAR6)) {
fprintf(VAR16, "%VAR10: VAR3 VAR17 < 0 (%FUN8)\n", VAR18, VAR3);
fprintf(VAR16, "%VAR10: VAR3 VAR17 > %FUN8 (%FUN8)\n", VAR18, VAR19, VAR3);
if (VAR3 + VAR5 > FUN9(VAR1)) {
VAR18, FUN9(VAR1), VAR3, VAR5);
fprintf(VAR16, "%VAR10: VAR4 VAR17 < 0 (%FUN8)\n", VAR18, VAR4);
fprintf(VAR16, "%VAR10: VAR4 VAR17 > %FUN8 (%FUN8)\n", VAR18, VAR20, VAR4);
if (VAR4 + VAR6 > FUN10(VAR1)) {
VAR18, FUN10(VAR1), VAR4, VAR6);
VAR8 VAR9 = VAR10->VAR11[FUN3(VAR12) >> 2];
return VAR9;
return FUN4(FUN5(VAR10));
VAR7 = FUN6(VAR10);
if (FUN7(VAR10, VAR13, VAR3, VAR4, VAR7, VAR14) == 0) {
VAR8 VAR15, int VAR3, int VAR4, int VAR5, int VAR6)
CLASS1 *VAR1 = FUN11(VAR10->VAR21.VAR22);
int VAR23 = FUN12(VAR1);
int VAR7 = FUN2(VAR1) * VAR5;
VAR24 = VAR10->VAR21.VAR25 + FUN2(VAR1) * VAR3 + VAR23 * VAR4;
VAR26 = VAR24;
VAR26 += VAR23;
memcpy(VAR26, VAR24, VAR7);
static inline bool FUN1(CLASS1 *VAR1,
VAR24 = VAR10->VAR21.VAR25 + FUN2(VAR1) * VAR3 + VAR23 * VAR4;
VAR26 = VAR24;
memcpy(VAR26, VAR24, VAR7);
