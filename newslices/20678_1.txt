VAR1 = FUN1(VAR2);
VAR3 = fopen(VAR1,"rb");
if (VAR3 != 0) {
fseek(VAR3,0L,2);
VAR4 = ftell(VAR3);
rewind(VAR3);
*VAR5 = ((char *)(malloc(sizeof(char ) * (VAR4 + 1))));
if (*VAR5 != 0) {
VAR6 = fread(*VAR5,1,VAR4,VAR3);
if (VAR3 != 0) {
fclose(VAR3);
FUN2(&VAR7,"REVOCATION_CONSUMPTIBLE");
if (VAR7 != 0) {;
VAR8 = ((char *)VAR7);
VAR9 = ((int )(strlen(VAR8)));
for (; VAR9 >= 0; (--VAR10 , --VAR9)) {
VAR11[VAR10] = VAR8[VAR9];
FUN3(VAR12, VAR13, "VAR11", VAR11, "VAR14-VAR15");
VAR11[VAR16] = FUN4(VAR11[VAR16]);
FUN5("%s\n",&(VAR11[VAR10+1]));
free(VAR11);
FUN3(VAR12, VAR13, "VAR11", VAR11, "VAR17-VAR15");
if (VAR7 != 0)
free(((char *)VAR7));
int FUN4(int VAR18)
if (VAR18 >= 97 && VAR18 <= 122) {
return VAR18 - 32;
return VAR18;
VAR11[VAR16] = FUN4(VAR11[VAR16]);
FUN5("%s\n",&(VAR11[VAR10+1]));
void FUN5(char * VAR19, ...) {
FUN5("%s\n",&(VAR11[VAR10+1]));
