VAR1 = FUN1(fileno(VAR2));
FUN2 (fgets(VAR3, sizeof VAR3, VAR2) != VAR4)
register char *VAR5 = strchr(VAR3, '\');
VAR6 ? "VAR6" : "sending", VAR3);
VAR7 += FUN3(VAR3, VAR8, VAR9, VAR10 + 1, VAR11);
register char **VAR12;
FUN2 ((VAR5 = *VAR12++) != VAR4)
(void) FUN3(VAR5, VAR13, &VAR11->VAR14, 0, VAR11);
char *VAR15;
CLASS1 **VAR9;
VAR7 += FUN3(VAR3, VAR8, VAR9, VAR10 + 1, VAR11);
(void) FUN3(VAR5, VAR13, &VAR11->VAR14, 0, VAR11);
CLASS1 **VAR9;
VAR11->VAR16 = FUN4("VAR17: VAR18 VAR19 VAR20");
fprintf(VAR11->VAR21,
register CLASS2 *VAR11;
(VAR22) 0, VAR11);
FUN5(VAR23, VAR9, VAR10, VAR11);
FUN6(VAR23, VAR9, VAR10 + 1, VAR11);
(VAR22) 0, VAR11);
FUN7(VAR23, VAR9, VAR10, VAR11);
VAR23 = FUN8(VAR23, VAR9, VAR10, VAR11);
VAR7 += FUN3(VAR3, VAR8, VAR9, VAR10 + 1, VAR11);
VAR24 = FUN9(VAR23->VAR25, VAR26, VAR23, VAR9, VAR10, VAR11);
CLASS2 *VAR11;
VAR7 += FUN3(VAR3, VAR8, VAR9, VAR10 + 1, VAR11);
register CLASS2 *VAR11;
VAR11->VAR27++;
CLASS2 *VAR11;
VAR24 = FUN9(VAR23->VAR25, VAR26, VAR23, VAR9, VAR10, VAR11);
CLASS2 *VAR11;
VAR7 += FUN3(VAR3, VAR8, VAR9, VAR10 + 1, VAR11);
register CLASS2 *VAR11;
char *VAR28 = VAR11->VAR29;
VAR23 = FUN10(VAR5, VAR13, VAR30, VAR31, &VAR32, VAR11);
VAR33 = VAR23;
register CLASS1 *VAR23 = VAR33;
VAR23 = FUN8(VAR23, VAR9, VAR10, VAR11);
register CLASS1 *VAR23;
VAR11->VAR34 = VAR23->VAR35;
register CLASS2 *VAR11;
VAR23 = FUN8(VAR23, VAR9, VAR10, VAR11);
VAR11->VAR27++;
VAR11->VAR27++;
register CLASS2 *VAR11;
VAR23 = FUN8(VAR23, VAR9, VAR10, VAR11);
VAR11->VAR29 = VAR28;
char *VAR28 = VAR11->VAR29;
VAR28, FUN11(VAR3, 203));
VAR11->VAR29 = VAR28;
CLASS2 *VAR11;
VAR24 = FUN9(VAR23->VAR25, VAR26, VAR23, VAR9, VAR10, VAR11);
CLASS2 *VAR11;
VAR7 += FUN3(VAR3, VAR8, VAR9, VAR10 + 1, VAR11);
register CLASS2 *VAR11;
if (FUN12(VAR36, VAR11->VAR37))
VAR11->VAR37 |= VAR38;
register CLASS2 *VAR11;
printf("VAR39 VAR40 %s\n", VAR23->VAR25);
FUN13("VAR41 VAR42 %s", VAR23->VAR25);
VAR24 = FUN9(VAR23->VAR25, VAR26, VAR23, VAR9, VAR10, VAR11);
char *VAR43;
VAR44 = FUN14(VAR43, VAR45, VAR46, VAR47, VAR48, VAR49, VAR4);
VAR2 = fopen(VAR43, "r");
if (FUN15(fileno(VAR2), &VAR50) < 0)
VAR1 = FUN1(fileno(VAR2));
FUN2 (fgets(VAR3, sizeof VAR3, VAR2) != VAR4)
register char *VAR5 = strchr(VAR3, '\');
VAR6 ? "VAR6" : "sending", VAR3);
VAR7 += FUN3(VAR3, VAR8, VAR9, VAR10 + 1, VAR11);
VAR23 = FUN8(VAR23, VAR9, VAR10, VAR11);
register CLASS2 *VAR11;
VAR11->VAR29 = VAR23->VAR35;
VAR11->VAR34 = VAR23->VAR35;
VAR11->VAR34 = "";
VAR24 = FUN9(VAR23->VAR25, VAR26, VAR23, VAR9, VAR10, VAR11);
CLASS2 *VAR11;
if (FUN12(VAR36, VAR11->VAR37))
VAR11->VAR29 = VAR4;
VAR7 += FUN3(VAR3, VAR8, VAR9, VAR10 + 1, VAR11);
register CLASS2 *VAR11;
(void) FUN3(VAR5, VAR13, &VAR11->VAR14, 0, VAR11);
register CLASS2 *VAR11;
char VAR3[VAR51 + 1];
printf("VAR52: %s\n   VAR8=", VAR15);
FUN16(VAR8, VAR26);
strchr(VAR15, '<') != VAR4 || strchr(VAR15, '(') != VAR4))
(strchr(VAR15, ',') != VAR4 || strchr(VAR15, ';') != VAR4 ||
VAR11->VAR37 &= ~VAR53;
VAR31 = ' ';
if (!FUN12(VAR53, VAR11->VAR37) || VAR8 != VAR4)
VAR31 = ',';
VAR33 = VAR4;
VAR54 = strlen(VAR15) + 1;
if (VAR54 <= sizeof VAR3)
VAR55 = VAR3;
VAR55 = FUN17(VAR54);
strcpy(VAR55, FUN18(VAR15, VAR26, VAR56));
for (VAR5 = VAR55; *VAR5 != '\'; )
auto char *VAR32;
FUN2 ((isascii(*VAR5) && isspace(*VAR5)) || *VAR5 == ',')
VAR5++;
VAR5 = VAR32;
VAR57 = FUN19(VAR23, VAR11);
VAR7 += FUN3(VAR3, VAR8, VAR9, VAR10 + 1, VAR11);
VAR23 = FUN10(VAR5, VAR13, VAR30, VAR31, &VAR32, VAR11);
VAR33 = VAR23;
register CLASS1 *VAR23 = VAR33;
VAR24 = FUN9(VAR23->VAR25, VAR26, VAR23, VAR9, VAR10, VAR11);
CLASS1 **VAR9;
VAR24 = FUN9(VAR23->VAR25, VAR26, VAR23, VAR9, VAR10, VAR11);
FUN5(VAR23, VAR9, VAR10, VAR11);
if (FUN20(VAR23, VAR9, VAR10, VAR11) == VAR58)
FUN6(VAR23, VAR9, VAR10 + 1, VAR11);
FUN7(VAR23, VAR9, VAR10, VAR11);
FUN16(*VAR9, VAR56);
register CLASS1 **VAR9;
VAR23 = FUN8(VAR23, VAR9, VAR10, VAR11);
register CLASS1 *VAR23;
register CLASS1 **VAR9;
for (VAR59 = VAR9; (VAR60 = *VAR59) != VAR4; VAR59 = &VAR60->VAR61)
if (FUN21(VAR60, VAR23))
VAR23 = VAR60;
if (FUN21(VAR60, VAR23))
printf("%s VAR62 VAR9: ", VAR23->VAR35);
