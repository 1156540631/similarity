FUN1 (*VAR1)(VAR2& , VAR3) = VAR4;
static void * FUN2(void *)
VAR5<VAR2> VAR6;
VAR2 VAR7;
if (VAR8 &&
sscanf(VAR9, "%d %d %d", &VAR10, &VAR11, &VAR12) == 3) {
VAR8 = false;
} else if (sscanf(VAR9, "VAR13 %d %d %s",
&VAR7.VAR14, &VAR7.VAR15, VAR7.VAR16)) {
VAR6.FUN3(VAR7);        }
for (VAR3 VAR17 = 0; VAR17 < VAR6.FUN4(); VAR17++) {
VAR2 &VAR7 = VAR6[VAR17];
FUN1 &VAR18 = VAR1(VAR7, VAR19);
FUN1 VAR4(VAR2& VAR7, VAR3 VAR19)
return VAR7.VAR20[VAR19];
FUN1 &VAR18 = VAR1(VAR7, VAR19);
if (!VAR18.VAR21) {
VAR18.FUN5(VAR22);             }
void *VAR23;
if (VAR24->lock(VAR24, VAR21->VAR25,
VAR26 |
VAR27 |
VAR28,
0, 0, VAR10, VAR11, &VAR23)) {
FUN6("VAR29 VAR30 lock VAR31");
VAR32->FUN7(VAR21);
break;                }
if (VAR21->VAR11 == VAR18.VAR11 && VAR21->VAR33 == VAR18.VAR10) {
memcpy(VAR23, VAR18.VAR21,  VAR18.VAR10 * VAR18.VAR11 * VAR18.VAR34);
