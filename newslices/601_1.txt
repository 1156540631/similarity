VAR1 = VAR2;
*VAR3++ = *VAR1++;
VAR4 = *VAR1++;
VAR4 = (VAR4 & 0x7F) * 2;
return VAR1 - VAR2;
memcpy(VAR3, VAR1, VAR4);
VAR1 += VAR4;
return VAR1 - VAR2;
VAR1 += 2;
return VAR1 - VAR2;
return VAR1 - VAR2;
return VAR1 - VAR2;
memcpy(VAR5->VAR6.VAR7[0], VAR5->VAR8.VAR7[0],
VAR5->VAR9->CLASS1 * VAR5->VAR6.VAR10[0]);
VAR11 += 2;
VAR12 = *VAR11++ * 4;
VAR13 = *VAR11++ * 4;
VAR14 = *VAR11++ * 4;
VAR15 = VAR11;
VAR16 = *VAR15++;
FUN1(VAR15, VAR5->VAR17, VAR5->VAR18);
VAR19 = &VAR5->VAR6.VAR7[0][CLASS2 * VAR5->VAR6.VAR10[0] + VAR20];
VAR21 = &VAR5->VAR8.VAR7[0][CLASS2 * VAR5->VAR8.VAR10[0] + VAR20];
VAR22 = *VAR15++;
VAR22 = (VAR22 & 0x7F) + 1;
if (*VAR15++ == 0xFF)
VAR22 = FUN2(VAR15, &VAR19[VAR23], VAR22, VAR24 - VAR23);
memcpy(&VAR19[VAR23], VAR15, VAR22);
VAR22 = *VAR15++;
VAR15 += VAR22;
VAR22 = *VAR15++;
if (*VAR15++ == 0xFF)
VAR22 = FUN2(VAR15, &VAR19[VAR23], VAR22, VAR24 - VAR23);
memcpy(&VAR19[VAR23], VAR15, VAR22);
VAR15 += VAR22;
if (*VAR15++ == 0xFF)
memcpy(&VAR19[VAR23], VAR15, VAR22);
memcpy(&VAR19[VAR23], &VAR21[VAR23], VAR22 + 1);
VAR19 += VAR5->VAR6.VAR10[0];
memcpy(&VAR19[VAR23], &VAR21[VAR23], VAR22 + 1);
CLASS3 *VAR5 = VAR9->VAR25;
FUN3(VAR5);
static void FUN1(const unsigned char *VAR2, unsigned char *VAR26, int VAR27)
VAR15 = VAR5->VAR17;
VAR22 = *VAR15++;
if (*VAR15++ == 0xFF)
memcpy(&VAR19[VAR23], VAR15, VAR22);
memcpy(&VAR19[VAR23], &VAR21[VAR23], VAR22 + 1);
static int FUN2(const unsigned char *VAR2, unsigned char *VAR26,
VAR22 = *VAR15++;
if (*VAR15++ == 0xFF)
memcpy(&VAR19[VAR23], VAR15, VAR22);
memcpy(&VAR19[VAR23], &VAR21[VAR23], VAR22 + 1);
static void FUN3(CLASS3 *VAR5)
const unsigned char *VAR11 = VAR5->VAR28 + 16;
VAR15 = VAR11;
VAR22 = *VAR15++;
if (*VAR15++ == 0xFF)
memcpy(&VAR19[VAR23], VAR15, VAR22);
memcpy(&VAR19[VAR23], &VAR21[VAR23], VAR22 + 1);
