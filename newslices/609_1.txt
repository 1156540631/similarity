if (!VAR1) VAR1 = ", ";
VAR2 = FUN1((5 + strlen(VAR1)) * VAR3);
VAR4   = VAR2;
int VAR5 = FUN2(VAR2, 5 + strlen(VAR1), "%d%VAR9", VAR6[VAR7], VAR1);
VAR4[strlen(VAR4) - strlen(VAR1)] = '\';
VAR8   = FUN3(&VAR9->VAR10, VAR9->VAR11);
VAR12  = FUN3(&VAR9->VAR10, VAR9->VAR11);
VAR3 = FUN4(&VAR9->VAR10, VAR9->VAR11);
VAR13   = FUN4(&VAR9->VAR10, VAR9->VAR11);
FUN5(VAR3, "ModelPixelScaleTag", VAR14);
FUN5(VAR3, "ModelTransformationTag", VAR14);
FUN5(VAR3, "ModelTiepointTag", VAR14);
FUN5(1, "GeoTIFF_Version", VAR14);
FUN5(2, "GeoTIFF_Key_Revision", ".");
FUN5(VAR3, "artist", VAR14);
FUN5(VAR3, "copyright", VAR14);
FUN5(VAR3, "date", VAR14);
FUN5(VAR3, "document_name", VAR14);
FUN5(VAR3, "computer", VAR14);
FUN5(VAR3, "description", VAR14);
FUN5(VAR3, "make", VAR14);
FUN5(VAR3, "model", VAR14);
FUN5(VAR3, "page_name", VAR14);
FUN5(VAR3, "page_number", " / ");
FUN5(VAR3, "software", VAR14);
const char *VAR15, const char *VAR1, CLASS1 *VAR9)
case VAR16 : return FUN6(VAR3, VAR15, VAR1, VAR9);
const char *VAR1, CLASS1 *VAR9)
if (VAR3 >= VAR17 / sizeof(VAR18) || VAR3 <= 0)
if (FUN7(&VAR9->VAR10) < VAR3 * sizeof(VAR18))
VAR6 = FUN1(VAR3 * sizeof(VAR18));
VAR2 = FUN8(VAR6, VAR3, VAR1);
static char *FUN8(VAR18 *VAR6, int VAR3, const char *VAR1)
VAR2 = FUN1((5 + strlen(VAR1)) * VAR3);
VAR4   = VAR2;
VAR4[strlen(VAR4) - strlen(VAR1)] = '\';
static int FUN9(int VAR3, int VAR12,
case VAR16 : return FUN6(VAR3, VAR15, VAR1, VAR9);
static int FUN6(int VAR3, const char *VAR15,
VAR6 = FUN1(VAR3 * sizeof(VAR18));
VAR2 = FUN8(VAR6, VAR3, VAR1);
static unsigned FUN3(CLASS2 *VAR10, int VAR11)
unsigned VAR19 = VAR11 ? FUN10(VAR10) : FUN11(VAR10);
VAR8   = FUN3(&VAR9->VAR10, VAR9->VAR11);
VAR12  = FUN3(&VAR9->VAR10, VAR9->VAR11);
VAR3 = FUN4(&VAR9->VAR10, VAR9->VAR11);
static unsigned FUN4(CLASS2 *VAR10, int VAR11)
unsigned VAR19 = VAR11 ? FUN12(VAR10) : FUN13(VAR10);
return VAR19;
VAR3 = FUN4(&VAR9->VAR10, VAR9->VAR11);
VAR13   = FUN4(&VAR9->VAR10, VAR9->VAR11);
FUN5(VAR3, "software", VAR14);
