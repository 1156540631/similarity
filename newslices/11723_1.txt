*VAR1 = VAR2;
*VAR1 = (char*)calloc(VAR3, sizeof(char));
*VAR1 = VAR2;
return VAR4;
int VAR5 = 596;
char *VAR6;;
FUN1(&VAR6,"9330",VAR5);
VAR7 = VAR6;
VAR8 = &VAR7;
VAR9 = VAR8 + 5;
VAR10 = ((char *)( *(VAR9 - 5)));
VAR11 = (struct CLASS1*) malloc(sizeof(struct CLASS1));
VAR11->VAR12 = VAR13;
VAR11->VAR14[63] = '\';
VAR11->VAR15 = VAR13;
FUN2(VAR16, VAR17, "VAR11->VAR12", VAR11->VAR12, &VAR11->VAR12, "VAR18-VAR19");
FUN2(VAR16, VAR20, "VAR11->VAR14", VAR11->VAR14, "VAR18-VAR19");
FUN2(VAR16, VAR17, "VAR11->VAR15", VAR11->VAR15, &VAR11->VAR15, "VAR18-VAR19");
VAR21 = ((int )(strlen(VAR10)));
VAR11->VAR14[VAR22] = VAR10[VAR21];
FUN2(VAR16, VAR20, "VAR11->VAR14", VAR11->VAR14, "VAR23-VAR19");
VAR11->VAR14[VAR24] = VAR13(VAR11->VAR14[VAR24]);
FUN3("%VAR4",VAR11->VAR12(VAR11->VAR14[VAR24]));
free(VAR11);
int VAR13(int VAR4)
return VAR4 - 32;
VAR11->VAR14[VAR24] = VAR13(VAR11->VAR14[VAR24]);
FUN3("%VAR4",VAR11->VAR12(VAR11->VAR14[VAR24]));
free(VAR11);
void FUN1(char** VAR1, char* VAR25, int VAR3) {
if ((VAR26 = FUN4(VAR27, VAR3, 0666)) >= 0) {
*VAR1 = (char*)calloc(VAR3, sizeof(char));
FUN1(&VAR6,"9330",VAR5);
VAR7 = VAR6;
VAR8 = &VAR7;
VAR9 = VAR8 + 5;
VAR10 = ((char *)( *(VAR9 - 5)));
VAR21 = ((int )(strlen(VAR10)));
VAR11->VAR14[VAR22] = VAR10[VAR21];
FUN2(VAR16, VAR20, "VAR11->VAR14", VAR11->VAR14, "VAR23-VAR19");
free(VAR11);
