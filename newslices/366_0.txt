const VAR1 VAR2 = 2;
VAR3 += VAR2;
VAR4 += FUN1(VAR3,
const unsigned char VAR5[] = {0, 0, 0, 1};
memcpy(VAR6, VAR5, VAR7);
VAR8 += (VAR9 ? VAR7 : 0);
return VAR8;
VAR4 += FUN1(VAR3,
const_cast<CLASS1*>(VAR4));
CLASS1* VAR6) {
memcpy(VAR6, VAR5, VAR7);
CLASS1* VAR6,
if (VAR10.FUN2() == VAR11) {
VAR12 VAR13 = VAR10.FUN3();
for (; VAR13 != VAR10.FUN4(); ++VAR13)
if (VAR13 != VAR10.FUN4() &&
FUN5(VAR14, VAR15.VAR16))) {
FUN5(VAR15.VAR16, VAR17))) {
VAR14 = static_cast<int>(VAR15.VAR16);
FUN5(VAR14, VAR15.VAR16)) {
VAR17 = static_cast<int>(VAR15.VAR16);
FUN5(VAR15.VAR16, VAR17)) {
VAR18 VAR19 = VAR10.FUN6(VAR13.FUN7(), VAR15);
VAR1 VAR20 = FUN8(VAR6, VAR19);
VAR18 VAR21) {
VAR22& VAR15 = *VAR21;
VAR1 VAR23 = 0;
VAR23 += (*VAR24).VAR25;
const CLASS1* VAR26 = VAR15.VAR27;
VAR15.VAR27 = VAR6 + VAR23;
const VAR1 VAR28 = 1;
VAR3 = VAR26 + VAR28;
CLASS1* VAR4 = VAR6 + VAR23;
VAR3 += VAR8;
VAR1 VAR8 = FUN9(VAR3);
VAR8,
VAR1 VAR8,
VAR8);
return VAR8;
VAR4 += FUN1(VAR3,
const_cast<CLASS1*>(VAR4));
const_cast<CLASS1*>(VAR15.VAR27));
CLASS1* VAR6) {
memcpy(VAR6, VAR5, VAR7);
VAR1 VAR29::FUN8(CLASS1* VAR6,
VAR15.VAR27 = VAR6 + VAR23;
const_cast<CLASS1*>(VAR15.VAR27));
CLASS1* VAR6) {
memcpy(VAR6, VAR5, VAR7);
int VAR29::FUN10(const VAR22& VAR15,
VAR18 VAR19 = VAR10.FUN6(VAR13.FUN7(), VAR15);
VAR1 VAR20 = FUN8(VAR6, VAR19);
VAR18 VAR21) {
VAR22& VAR15 = *VAR21;
const CLASS1* VAR26 = VAR15.VAR27;
VAR3 = VAR26 + VAR28;
VAR1 VAR8 = FUN9(VAR3);
VAR8,
VAR1 VAR8,
VAR8);
return VAR8;
VAR4 += FUN1(VAR3,
const_cast<CLASS1*>(VAR4));
CLASS1* VAR6) {
memcpy(VAR6, VAR5, VAR7);
VAR1 VAR29::FUN1(const CLASS1* VAR30,
VAR30,
VAR1 VAR8 = FUN9(VAR3);
VAR8,
VAR1 VAR8,
VAR8);
return VAR8;
VAR4 += FUN1(VAR3,
const_cast<CLASS1*>(VAR4));
CLASS1* VAR6) {
memcpy(VAR6, VAR5, VAR7);
