VAR1 = FUN1(VAR2);
VAR3 = fopen(VAR1,"rb");
if (VAR3 != 0) {
fseek(VAR3,0L,2);
VAR4 = ftell(VAR3);
rewind(VAR3);
*VAR5 = ((char *)(malloc(sizeof(char ) * (VAR4 + 1))));
if (*VAR5 != 0) {
VAR6 = fread(*VAR5,1,VAR4,VAR3);
if (VAR3 != 0) {
fclose(VAR3);
FUN2(&VAR7,"SCIMITARED_FURNESS");
if (VAR7 != 0) {;
VAR8 = &VAR7;
VAR9 = VAR8 + 5;
VAR10 = ((char *)( *(VAR9 - 5)));
VAR11 = ((int )(strlen(VAR10)));
for (; VAR11 >= 0; (--VAR12 , --VAR11)) {
VAR13[VAR12] = VAR10[VAR11];
FUN3(VAR14, VAR15, "VAR13", VAR13, "VAR16-VAR17");
VAR13[VAR18] = FUN4(VAR13[VAR18]);
FUN5("%s\n",&(VAR13[VAR12+1]));
free(VAR13);
FUN3(VAR14, VAR15, "VAR13", VAR13, "VAR19-VAR17");
if ( *(VAR9 - 5) != 0)
free(((char *)( *(VAR9 - 5))));
void FUN5(char * VAR20, ...) {
FUN5("%s\n",&(VAR13[VAR12+1]));
int FUN4(int VAR21)
if (VAR21 >= 97 && VAR21 <= 122) {
return VAR21 - 32;
return VAR21;
VAR13[VAR18] = FUN4(VAR13[VAR18]);
FUN5("%s\n",&(VAR13[VAR12+1]));
