static CLASS1 *FUN1(CLASS2 *VAR1)
VAR2 = FUN1(VAR1);
if (!strncmp((VAR1 -> VAR3),"VAR4:",5)) {
FUN2(VAR1 -> VAR3,VAR1,VAR1 -> VAR5 -> VAR6);
static void FUN2(char *VAR7,CLASS2 *VAR1,CLASS3 *VAR8)
int VAR9 = 1;
CLASS4 *VAR10;
VAR11 = VAR9;
VAR10 = (FUN3(sizeof(( *VAR10)) * VAR11));
VAR12 = VAR7;
char *VAR13 = strchr(VAR12,',');
*(VAR13++) = 0;
if (!memcmp(VAR12,"VAR18",8)) {
if (VAR14 -> VAR15 > (2147483647 - VAR11) || !(VAR10 = (FUN4(VAR10,(VAR11 += VAR14 -> VAR15 - 1),sizeof(( *VAR10)))))) {
VAR16 = (VAR12[8]?FUN5("force_key_frames",(VAR12 + 8),1) : 0);
CLASS5 *VAR17 = VAR14 -> VAR18[VAR19];
VAR10[VAR20++] = FUN6(VAR17 -> VAR21,VAR17 -> VAR22,VAR8 -> VAR22) + VAR16;
if (VAR14 -> VAR15 > (2147483647 - VAR11) || !(VAR10 = (FUN4(VAR10,(VAR11 += VAR14 -> VAR15 - 1),sizeof(( *VAR10)))))) {
VAR12 = VAR13;
char *VAR13 = strchr(VAR12,',');
if (!memcmp(VAR12,"VAR18",8)) {
VAR16 = (VAR12[8]?FUN5("force_key_frames",(VAR12 + 8),1) : 0);
VAR10[VAR20++] = FUN6(VAR17 -> VAR21,VAR17 -> VAR22,VAR8 -> VAR22) + VAR16;
FUN7(VAR10,VAR11,sizeof(( *VAR10)),VAR23);
VAR1 = VAR24[VAR25];
VAR2 = FUN1(VAR1);
VAR1 -> VAR5 -> VAR26 = VAR2 -> VAR5 -> VAR26;
if (VAR27 < 0 && FUN8(VAR2 -> VAR5 -> VAR28) >= FUN8(VAR2 -> VAR5 -> VAR29) && 0.5 / FUN8(VAR2 -> VAR5 -> VAR28) > FUN8(VAR2 -> VAR5 -> VAR22) && 0.5 / FUN8(VAR2 -> VAR5 -> VAR28) > FUN8(VAR30 -> VAR22) && FUN8(VAR2 -> VAR5 -> VAR22) < 1.0 / 500 && FUN8(VAR30 -> VAR22) < 1.0 / 500 || VAR27 == 2) {
VAR1 -> VAR5 -> VAR29 = VAR2 -> VAR5 -> VAR29;
VAR2 = FUN1(VAR1);
int VAR31 = FUN9(VAR1 -> VAR32,VAR1 -> VAR33 -> VAR34);
VAR1 -> VAR32 = VAR1 -> VAR33 -> VAR34[VAR31];
VAR2 = FUN1(VAR1);
VAR6 -> VAR35 = FUN10(VAR1 -> VAR36 -> VAR36 -> VAR37[0]);
VAR1 -> VAR32 = FUN11(VAR1 -> VAR36 -> VAR36);
VAR2 = FUN1(VAR1);
VAR6 -> VAR38 = VAR1 -> VAR36 -> VAR36 -> VAR37[0] -> VAR39;
VAR6 -> VAR40 = VAR1 -> VAR36 -> VAR36 -> VAR37[0] -> VAR41;
VAR6 -> VAR42 = VAR1 -> VAR5 -> VAR42 = (VAR1 -> VAR43?FUN12((VAR1 -> VAR43 * (VAR6 -> VAR40) / (VAR6 -> VAR38)),255) : VAR1 -> VAR36 -> VAR36 -> VAR37[0] -> VAR42);
VAR2 = FUN1(VAR1);
VAR1 -> VAR33 = FUN13(VAR6 -> VAR44);
FUN14(VAR45,sizeof(VAR45),"FUN15 (VAR6 %s) VAR46 VAR47 for VAR48 VAR49 #%d:%d",FUN16(VAR1 -> VAR5 -> VAR6 -> VAR44),VAR1 -> VAR50,VAR1 -> VAR20);
FUN2(VAR1 -> VAR3,VAR1,VAR1 -> VAR5 -> VAR6);
static void FUN2(char *VAR7,CLASS2 *VAR1,CLASS3 *VAR8)
FUN2(VAR1 -> VAR3,VAR1,VAR1 -> VAR5 -> VAR6);
static void FUN2(char *VAR7,CLASS2 *VAR1,CLASS3 *VAR8)
FUN2(VAR1 -> VAR3,VAR1,VAR1 -> VAR5 -> VAR6);
static void FUN2(char *VAR7,CLASS2 *VAR1,CLASS3 *VAR8)
VAR12 = VAR7;
char *VAR13 = strchr(VAR12,',');
if (!memcmp(VAR12,"VAR18",8)) {
VAR16 = (VAR12[8]?FUN5("force_key_frames",(VAR12 + 8),1) : 0);
VAR10[VAR20++] = FUN6(VAR17 -> VAR21,VAR17 -> VAR22,VAR8 -> VAR22) + VAR16;
FUN7(VAR10,VAR11,sizeof(( *VAR10)),VAR23);
