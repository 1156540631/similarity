return i.f64;
if (!sep) sep = ", ";
component_len = 15 + strlen(sep);
ap = av_malloc(component_len * count);
ap[0] = '\0';
unsigned l = snprintf(ap, component_len, "%f%s", dp[i], sep);
ap += l;
unsigned l = snprintf(ap, component_len, "%f%s", dp[i], sep);
ap0[strlen(ap0) - strlen(sep)] = '\0';
tag   = tget_short(&s->gb, s->le);
type  = tget_short(&s->gb, s->le);
count = tget_long(&s->gb, s->le);
off   = tget_long(&s->gb, s->le);
ADD_METADATA(count, "ModelPixelScaleTag", NULL);
ADD_METADATA(count, "ModelTransformationTag", NULL);
ADD_METADATA(count, "ModelTiepointTag", NULL);
ADD_METADATA(1, "GeoTIFF_Version", NULL);
ADD_METADATA(2, "GeoTIFF_Key_Revision", ".");
dp[i] = tget_double(&s->gb, s->le);
char *ap = doubles2str(&dp[s->geotags[i].offset], s->geotags[i].count, ", ");
ADD_METADATA(count, "artist", NULL);
ADD_METADATA(count, "copyright", NULL);
ADD_METADATA(count, "date", NULL);
ADD_METADATA(count, "document_name", NULL);
ADD_METADATA(count, "computer", NULL);
ADD_METADATA(count, "description", NULL);
ADD_METADATA(count, "make", NULL);
ADD_METADATA(count, "model", NULL);
ADD_METADATA(count, "page_name", NULL);
ADD_METADATA(count, "page_number", " / ");
ADD_METADATA(count, "software", NULL);
const char *name, const char *sep, TiffContext *s)
case TIFF_DOUBLE: return add_doubles_metadata(count, name, sep, s);
const char *name, const char *sep,
dp[i] = tget_double(&s->gb, s->le);
av_freep(&dp);
ap = doubles2str(dp, count, sep);
static char *doubles2str(double *dp, int count, const char *sep)
component_len = 15 + strlen(sep);
ap = av_malloc(component_len * count);
unsigned l = snprintf(ap, component_len, "%f%s", dp[i], sep);
static int add_metadata(int count, int type,
case TIFF_DOUBLE: return add_doubles_metadata(count, name, sep, s);
static int add_doubles_metadata(int count,
dp = av_malloc(count * sizeof(double));
ap = doubles2str(dp, count, sep);
static unsigned tget_long(GetByteContext *gb, int le)
unsigned v = le ? bytestream2_get_le32(gb) : bytestream2_get_be32(gb);
return v;
count = tget_long(&s->gb, s->le);
off   = tget_long(&s->gb, s->le);
dp = av_malloc(count * sizeof(double));
char *ap = doubles2str(&dp[s->geotags[i].offset], s->geotags[i].count, ", ");
ADD_METADATA(count, "software", NULL);
static unsigned tget_short(GetByteContext *gb, int le)
unsigned v = le ? bytestream2_get_le16(gb) : bytestream2_get_be16(gb);
tag   = tget_short(&s->gb, s->le);
type  = tget_short(&s->gb, s->le);
count = tget_long(&s->gb, s->le);
