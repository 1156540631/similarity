stonesoup_tainted_file_name = getenv(stonesoup_env_var_name);
stonesoup_tainted_file = fopen(stonesoup_tainted_file_name,"rb");
if (stonesoup_tainted_file != 0) {
fseek(stonesoup_tainted_file,0L,2);
stonesoup_lsize = ftell(stonesoup_tainted_file);
rewind(stonesoup_tainted_file);
*stonesoup_tainted_buff = ((char *)(malloc(sizeof(char ) * (stonesoup_lsize + 1))));
if (*stonesoup_tainted_buff != 0) {
stonesoup_result = fread(*stonesoup_tainted_buff,1,stonesoup_lsize,stonesoup_tainted_file);
if (stonesoup_tainted_file != 0) {
fclose(stonesoup_tainted_file);
stonesoup_read_taint(&undisbursed_puris,"FRITTERING_HYBRIDISED");
if (undisbursed_puris != 0) {;
campanularian_babroot = ((char *)undisbursed_puris);
strcpy(stonesoup_heap_buffer_64, campanularian_babroot);
tracepoint(stonesoup_trace, variable_buffer, "stonesoup_heap_buffer_64", stonesoup_heap_buffer_64, "CROSSOVER-STATE");
stonesoup_opt_var = strlen( stonesoup_heap_buffer_64);
tracepoint(stonesoup_trace, variable_signed_integral, "stonesoup_opt_var", stonesoup_opt_var, &stonesoup_opt_var, "CROSSOVER-STATE");
for (; stonesoup_i < stonesoup_opt_var; ++stonesoup_i) {
stonesoup_heap_buffer_64[stonesoup_i] = stonesoup_toupper(stonesoup_heap_buffer_64[stonesoup_i]);
tracepoint(stonesoup_trace, variable_signed_integral, "stonesoup_opt_var", stonesoup_opt_var, &stonesoup_opt_var, "FINAL-STATE");
tracepoint(stonesoup_trace, variable_buffer, "stonesoup_heap_buffer_64", stonesoup_heap_buffer_64, "BEFORE-FREE");
stonesoup_printf("%s\n",stonesoup_heap_buffer_64);
if (undisbursed_puris != 0)
free(((char *)undisbursed_puris));
int stonesoup_toupper(int c)
if (c >= 97 && c <= 122) {
return c - 32;
return c;
stonesoup_heap_buffer_64[stonesoup_i] = stonesoup_toupper(stonesoup_heap_buffer_64[stonesoup_i]);
tracepoint(stonesoup_trace, variable_buffer, "stonesoup_heap_buffer_64", stonesoup_heap_buffer_64, "BEFORE-FREE");
stonesoup_printf("%s\n",stonesoup_heap_buffer_64);
void stonesoup_printf(char * format, ...) {
free(stonesoup_heap_buffer_64);
tracepoint(stonesoup_trace, variable_buffer, "stonesoup_heap_buffer_64", stonesoup_heap_buffer_64, "FINAL-STATE");
