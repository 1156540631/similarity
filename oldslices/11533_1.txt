rubbery_brilliant = getenv("FAIRLY_INCOHERENCY");
if (rubbery_brilliant != 0) {;
miscalculating_abevacuation = ((int )(strlen(rubbery_brilliant)));
turmet_clerkish = ((char *)(malloc(miscalculating_abevacuation + 1)));
if (turmet_clerkish == 0) {
memcpy(turmet_clerkish,rubbery_brilliant,miscalculating_abevacuation);
aleatoric_muslim = &turmet_clerkish;
if ( *aleatoric_muslim != 0) {
absent_harleian = ((char *)( *aleatoric_muslim));
strcpy(stonesoup_heap_buffer_64, absent_harleian);
tracepoint(stonesoup_trace, variable_buffer, "stonesoup_heap_buffer_64", stonesoup_heap_buffer_64, "CROSSOVER-STATE");
stonesoup_opt_var = strlen( stonesoup_heap_buffer_64);
tracepoint(stonesoup_trace, variable_signed_integral, "stonesoup_opt_var", stonesoup_opt_var, &stonesoup_opt_var, "CROSSOVER-STATE");
for (; stonesoup_i < stonesoup_opt_var; ++stonesoup_i) {
stonesoup_heap_buffer_64[stonesoup_i] = stonesoup_toupper(stonesoup_heap_buffer_64[stonesoup_i]);
tracepoint(stonesoup_trace, variable_signed_integral, "stonesoup_opt_var", stonesoup_opt_var, &stonesoup_opt_var, "FINAL-STATE");
tracepoint(stonesoup_trace, variable_buffer, "stonesoup_heap_buffer_64", stonesoup_heap_buffer_64, "BEFORE-FREE");
stonesoup_printf("%s\n",stonesoup_heap_buffer_64);
if ( *aleatoric_muslim != 0)
free(((char *)( *aleatoric_muslim)));
int stonesoup_toupper(int c)
if (c >= 97 && c <= 122) {
return c;
void stonesoup_printf(char * format, ...) {
free(stonesoup_heap_buffer_64);
tracepoint(stonesoup_trace, variable_buffer, "stonesoup_heap_buffer_64", stonesoup_heap_buffer_64, "FINAL-STATE");
