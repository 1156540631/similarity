dnptrs = (unsigned char **) malloc(2 * sizeof(unsigned char *));
dnptrs2 = (unsigned char **) malloc(2 * sizeof(unsigned char *));
comp_dn = (unsigned char *) malloc(200*sizeof(unsigned char));
comp_dn2 = (unsigned char *) malloc(200*sizeof(unsigned char));
temp1 = (char *) malloc(400*sizeof(char));
temp = temp1;
p = buf;
strcpy(temp, "HEADER JUNK:");
len += strlen(temp);
*p++ = *temp++;
comp_size = dn_comp((const char *) exp_dn, comp_dn, 200, dnptrs, lastdnptr);
*p++ = *comp_dn++;
PUTSHORT(24, p);
p += 2;
PUTSHORT(C_IN, p);
p += 2;
PUTLONG(255, p);
p += 4;
PUTSHORT(30, p);
p += 2;
PUTSHORT(15, p);
p += 2;
PUTSHORT(256*2, p);
p += 2;
PUTLONG(255, p);
p += 4;
PUTLONG(now+20000, p);
p += 4;
PUTLONG(now, p);
p += 4;
PUTSHORT(100, p);
p += 2;
comp_size = dn_comp((const char *) exp_dn2, comp_dn2, 200, dnptrs2, lastdnptr);
*p++ = *comp_dn2++;
PUTLONG(123, p);
p += 4;
return (p-buf);
u_char *name = (u_char *) malloc(100*sizeof(u_char));
u_char *msg = (u_char *) malloc(1000 * sizeof(u_char));
msglen = createSig(msg);
printf("msglen = %d\n", msglen);
dp = msg + sizeof(HEADER);
ret = rrextract(msg, msglen, dp, name, 100);
rrextract(u_char *msg, int msglen, u_char *rrp, u_char *dname, int namelen)
cp = rrp;
eom = msg + msglen;
printf("msg = %s, msglen = %d, rrp = %s, namelen = %d\n", (char *) msg, msglen, (char *)rrp, namelen);
if ((n = dn_expand(msg, eom, cp, (char *) dname, namelen)) < 0) {
printf("dn_expand returned %d\n", n);
int createSig (u_char *buf) {
ret = rrextract(msg, msglen, dp, name, 100);
