status = dn_expand(data, data + len, p + 2, host,
l = strlen(host) + 1;
host, l);
status = dn_expand(data, data + len, p + 6, host,
l = strlen(host) + 1;
host, l);
(*rr)->rr_u.rr_txt = (char *) xalloc(size + 1);
(*rr)->rr_u.rr_data = (unsigned char*) xalloc(size);
unsigned char reply[1024];
len = read_record_from_file(reply, sizeof(reply));
len = res_search(domain, rr_class, rr_type, reply, sizeof reply);
r = parse_dns_reply(reply, len);
unsigned char *data;
char host[MAXHOSTNAMELEN];
p = data;
memcpy((void *) &r->dns_r_h, (void *)  p, (size_t) sizeof(HEADER));
p += sizeof(HEADER);
strcpy(host, "LL.MIT.EDU");
status = strlen(host);
r->dns_r_q.dns_q_domain = (char *) strdup(host);
p += status;
GETSHORT(r->dns_r_q.dns_q_type, p);
GETSHORT(r->dns_r_q.dns_q_class, p);
(*rr)->rr_domain = (char *) strdup(host);
status = dn_expand(data, data + len, p, host,
(*rr)->rr_u.rr_txt = (char *) strdup(host);
strcpy(host,"BLAH.MIT.EDU");
status = strlen(host);
printf("status returned = %d\n", status);
p += status;
GETSHORT(size, p);
(*rr)->rr_u.rr_mx->mx_r_preference = (p[0] << 8) | p[1];
(*rr)->rr_u.rr_srv->srv_r_priority = (p[0] << 8) | p[1];
(*rr)->rr_u.rr_srv->srv_r_weight = (p[2] << 8) | p[3];
(*rr)->rr_u.rr_srv->srv_r_port = (p[4] << 8) | p[5];
p += size;
GETSHORT(type, p);
GETLONG(ttl, p);
GETSHORT(size, p);
(void) strncpy((*rr)->rr_u.rr_txt, (char*) p + 1, *p);
void *xalloc(size_t sz);
printf("Copying %d bytes into a buffer of size %d!!!\n", *p, size+1);
p += size;
GETSHORT(type, p);
GETLONG(ttl, p);
GETSHORT(size, p);
(void) strncpy((*rr)->rr_u.rr_txt, (char*) p + 1, *p);
size_t strlcpy(char *, const char *, size_t);
strcpy(host,"BLAH.MIT.EDU");
status = strlen(host);
printf("status returned = %d\n", status);
p += status;
GETSHORT(type, p);
GETLONG(ttl, p);
GETSHORT(size, p);
(void) strncpy((*rr)->rr_u.rr_txt, (char*) p + 1, *p);
int read_record_from_file(unsigned char *, int);
r = parse_dns_reply(reply, len);
unsigned char *data;
p = data;
GETSHORT(r->dns_r_q.dns_q_type, p);
GETSHORT(r->dns_r_q.dns_q_class, p);
GETSHORT(type, p);
GETLONG(ttl, p);
GETSHORT(size, p);
(void) strncpy((*rr)->rr_u.rr_txt, (char*) p + 1, *p);
