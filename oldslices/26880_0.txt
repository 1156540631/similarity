(strchr(list, ',') != NULL || strchr(list, ';') != NULL ||
strchr(list, '<') != NULL || strchr(list, '(') != NULL))
i = strlen(list) + 1;
strcpy(bufp, denlstring(list, FALSE, TRUE));
b = self_reference(a, e);
al = a;
a->q_next = al;
printaddr(a, FALSE);
al = a;
al = a;
register ADDRESS *a = al;
alias(a, sendq, aliaslevel, e);
if (udbexpand(a, sendq, aliaslevel, e) == EX_TEMPFAIL)
maplocaluser(a, sendq, aliaslevel + 1, e);
forward(a, sendq, aliaslevel, e);
printaddr(*sendq, TRUE);
register ADDRESS **sendq;
a = recipient(a, sendq, aliaslevel, e);
register ADDRESS *a;
register ADDRESS **sendq;
for (pq = sendq; (q = *pq) != NULL; pq = &q->q_next)
if (sameaddr(q, a))
a = q;
if (sameaddr(q, a))
ret = include(a->q_user, FALSE, a, sendq, aliaslevel, e);
ADDRESS *ctladdr;
ca = getctladdr(ctladdr);
register ADDRESS *a;
while (a != NULL && !bitset(QGOODUID, a->q_flags))
register ADDRESS *a;
return (a);
ca = getctladdr(ctladdr);
ctladdr->q_flags |= ca->q_flags & QBOGUSSHELL;
ADDRESS *ctladdr;
ret = include(a->q_user, FALSE, a, sendq, aliaslevel, e);
ADDRESS *ctladdr;
ca = getctladdr(ctladdr);
register ADDRESS *a;
ca = getctladdr(ctladdr);
ADDRESS *ctladdr;
ret = include(a->q_user, FALSE, a, sendq, aliaslevel, e);
message("including file %s", a->q_user);
ret = include(a->q_user, FALSE, a, sendq, aliaslevel, e);
char *fname;
rval = safefile(fname, uid, gid, uname, sfflags, S_IREAD, NULL);
fp = fopen(fname, "r");
if (fstat(fileno(fp), &st) < 0)
safechown = chownsafe(fileno(fp));
while (fgets(buf, sizeof buf, fp) != NULL)
register char *p = strchr(buf, '\n');
forwarding ? "forwarding" : "sending", buf);
nincludes += sendtolist(buf, ctladdr, sendq, aliaslevel + 1, e);
char *list;
if (ctladdr == NULL && (strchr(list, ',') != NULL || strchr(list, ';') != NULL || strchr(list, '<') != NULL || strchr(list, '(') != NULL))
