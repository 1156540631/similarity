static int		asn1_size_length(int length);
valuelen = asn1_size_integer(packet->object_value.integer);
1 + asn1_size_length(valuelen) + valuelen;
asn1_set_integer(&bufptr, packet->version);
asn1_set_length(&bufptr, commlen);
int length);
memcpy(bufptr, packet->community, commlen);
bufptr += commlen;
*bufptr++ = packet->request_type;
*bufptr++ = ASN1_SEQUENCE;
asn1_set_oid(&bufptr, packet->object_name);
asn1_set_length(&bufptr, valuelen);
int length);
memcpy(bufptr, packet->object_value.string, valuelen);
static void		asn1_set_integer(unsigned char **buffer,
asn1_set_integer(&bufptr, packet->version);
memcpy(bufptr, packet->community, commlen);
asn1_set_integer(&bufptr, packet->request_id);
asn1_set_integer(&bufptr, packet->error_status);
asn1_set_integer(&bufptr, packet->error_index);
memcpy(bufptr, packet->object_value.string, valuelen);
static void		asn1_set_length(unsigned char **buffer,
asn1_set_length(&bufptr, msglen);
asn1_set_length(&bufptr, commlen);
memcpy(bufptr, packet->community, commlen);
asn1_set_length(&bufptr, reqlen);
asn1_set_length(&bufptr, listlen);
asn1_set_length(&bufptr, varlen);
asn1_set_length(&bufptr, valuelen);
memcpy(bufptr, packet->object_value.string, valuelen);
asn1_encode_snmp(unsigned char *buffer,
valuelen = 0;
valuelen = asn1_size_integer(packet->object_value.boolean);
valuelen = strlen(packet->object_value.string);
valuelen = asn1_size_oid(packet->object_value.oid);
1 + asn1_size_length(valuelen) + valuelen;
commlen = strlen(packet->community);
1 + asn1_size_length(commlen) + commlen +
bufptr = buffer;
*bufptr++ = ASN1_SEQUENCE;
asn1_set_length(&bufptr, msglen);
*bufptr++ = ASN1_OCTET_STRING;
asn1_set_length(&bufptr, commlen);
memcpy(bufptr, packet->community, commlen);
asn1_set_length(&bufptr, reqlen);
asn1_set_integer(&bufptr, packet->request_id);
asn1_set_integer(&bufptr, packet->error_status);
asn1_set_integer(&bufptr, packet->error_index);
*bufptr++ = ASN1_SEQUENCE;
asn1_set_length(&bufptr, listlen);
asn1_set_length(&bufptr, varlen);
*bufptr++ = ASN1_OCTET_STRING;
asn1_set_length(&bufptr, valuelen);
memcpy(bufptr, packet->object_value.string, valuelen);
static void		asn1_set_oid(unsigned char **buffer,
asn1_set_oid(&bufptr, packet->object_name);
memcpy(bufptr, packet->object_value.string, valuelen);
