unsigned int payload;
unsigned int padding = 16;
if (1 + 2 + 16 > s->s3->rrec.length)
return 0;
hbtype = *p++;
n2s(p, payload);
if (1 + 2 + payload + 16 > s->s3->rrec.length)
return 0;
pl = p;
if (hbtype == TLS1_HB_REQUEST)
unsigned char *buffer, *bp;
unsigned int write_length =

payload + padding;
int r;
if (write_length > SSL3_RT_MAX_PLAIN_LENGTH)
return 0;
void (*funcPtr) (char *) = badsource;
funcPtr(buffer)
void badsource(char * buffer)
buffer = OPENSSL_malloc(write_length);
bp = buffer;
r = dtls1_write_bytes(s, TLS1_RT_HEARTBEAT, buffer, write_length);
if (r >= 0 && s->msg_callback)
s->msg_callback(1, s->version, TLS1_RT_HEARTBEAT,
buffer, write_length,
s, s->msg_callback_arg);
