static void print_codec(const AVCodec *c)
int encoder = av_codec_is_encoder(c);
printf("%s %s [%s]:\n",(encoder?"Encoder" : "Decoder"),c -> name,(c -> long_name?c -> long_name : ""));
const int *p = c -> supported_samplerates;
char name[16];
snprintf(name,sizeof(name),"%d", *p);
p++;
snprintf(name,sizeof(name),"%d", *p);
show_help_children(c -> priv_class,1 | 2);
if ((prev -> id) == id && ((encoder?av_codec_is_encoder(prev) : av_codec_is_decoder(prev)))) {
while(prev = (av_codec_next(prev))){
if ((prev -> id) == id && ((encoder?av_codec_is_encoder(prev) : av_codec_is_decoder(prev)))) {
return prev;
while(codec = next_codec_for_id(desc -> id,codec,encoder)){
print_codec(codec);
while(codec = next_codec_for_id(desc -> id,codec,encoder)){
static const AVCodec *next_codec_for_id(enum AVCodecID id,const AVCodec *prev,int encoder)
while(prev = (av_codec_next(prev))){
if ((prev -> id) == id && ((encoder?av_codec_is_encoder(prev) : av_codec_is_decoder(prev)))) {
return prev;
return ((void *)0);
while(codec = next_codec_for_id(desc -> id,codec,encoder)){
print_codec(codec);
static void print_codec(const AVCodec *c)
print_codec(codec);
static void print_codec(const AVCodec *c)
const int *p = c -> supported_samplerates;
p++;
snprintf(name,sizeof(name),"%d", *p);
int show_help(void *optctx,const char *opt,const char *arg)
topic = av_strdup((arg?arg : ""));
par = strchr(topic,'=');
*(par++) = 0;
show_help_codec(par,0);
show_help_codec(par,1);
static void show_help_codec(const char *name,int encoder)
codec = ((encoder?avcodec_find_encoder_by_name(name) : avcodec_find_decoder_by_name(name)));
print_codec(codec);
show_help_children(child,flags);
print_codec(codec);
