stonesoup_tainted_file = fopen(stonesoup_tainted_file_name,"rb");
fseek(stonesoup_tainted_file,0L,2);
stonesoup_lsize = ftell(stonesoup_tainted_file);
rewind(stonesoup_tainted_file);
*stonesoup_tainted_buff = ((char *)(malloc(sizeof(char ) * (stonesoup_lsize + 1))));
stonesoup_result = fread(*stonesoup_tainted_buff,1,stonesoup_lsize,stonesoup_tainted_file);
*stonesoup_tainted_buff = NULL;
struct underseated_headhunting phascolarctos_proemial;
char *pectinous_bloodthirsting;;
stonesoup_read_taint(&pectinous_bloodthirsting,"IDEATIONAL_OCULISTS");
phascolarctos_proemial . latinian_pattersonville = ((char *)pectinous_bloodthirsting);
desuete_blowfishes[5] = phascolarctos_proemial;
typika_fixtures[1] = 5;
endeavorer_actuarian =  *(desuete_blowfishes + typika_fixtures[1]);
houppelande_driftlet = ((char *)endeavorer_actuarian . latinian_pattersonville);
stonesoup_buff_size = strlen(houppelande_driftlet) + 1;
stonesoup_other_size = 64;
stonesoup_other_buff = (char*) malloc (stonesoup_other_size * sizeof (char));
houppelande_driftlet[stonesoup_buff_size - stonesoup_i - 1];
stonesoup_other_buff[stonesoup_other_size - stonesoup_i - 1] =
stonesoup_printf("%02x",stonesoup_other_buff[stonesoup_other_size - stonesoup_i - 1]);
free (stonesoup_other_buff);
void stonesoup_read_taint(char** stonesoup_tainted_buff, char* stonesoup_env_var_name) {
stonesoup_tainted_file_name = getenv(stonesoup_env_var_name);
stonesoup_tainted_file = fopen(stonesoup_tainted_file_name,"rb");
fseek(stonesoup_tainted_file,0L,2);
stonesoup_lsize = ftell(stonesoup_tainted_file);
*stonesoup_tainted_buff = ((char *)(malloc(sizeof(char ) * (stonesoup_lsize + 1))));
stonesoup_read_taint(&pectinous_bloodthirsting,"IDEATIONAL_OCULISTS");
phascolarctos_proemial . latinian_pattersonville = ((char *)pectinous_bloodthirsting);
endeavorer_actuarian =  *(desuete_blowfishes + typika_fixtures[1]);
houppelande_driftlet = ((char *)endeavorer_actuarian . latinian_pattersonville);
stonesoup_buff_size = strlen(houppelande_driftlet) + 1;
houppelande_driftlet[stonesoup_buff_size - stonesoup_i - 1];
stonesoup_other_buff[stonesoup_other_size - stonesoup_i - 1] =
free (stonesoup_other_buff);
void stonesoup_printf(char * format, ...) {
free (stonesoup_other_buff);
