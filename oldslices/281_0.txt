buf[0] = getc(fp);
while (gif_get_block(fp, buf) != 0);
static int	gif_get_block(FILE *fp, unsigned char *buffer);
switch (getc(fp))
fclose(fp);
fread(buf, 9, 1, fp);
if (buf[8] & GIF_COLORMAP)
ncolors = 2 << (buf[8] & 0x07);
if (gif_read_cmap(fp, ncolors, cmap, &gray))
img->xsize = (buf[5] << 8) | buf[4];
img->ysize = (buf[7] << 8) | buf[6];
if (img->xsize == 0 || img->ysize == 0)
img->xsize, img->ysize);
fprintf(stderr, "DEBUG: Bad GIF image dimensions: %dx%d\n",
fclose(fp);
i = gif_read_image(fp, img, cmap, buf[8] & GIF_INTERLACE);
int interlace);
i = gif_read_image(fp, img, cmap, buf[8] & GIF_INTERLACE);
static int	gif_read_cmap(FILE *fp, int ncolors, gif_cmap_t cmap,
fclose(fp);
for (i = ncolors - 1; i >= 0; i --)
cupsImageWhiteToCMYK(cmap[i], cmap[i], 1);
for (i = ncolors - 1; i >= 0; i --)
cupsImageWhiteToCMY(cmap[i], cmap[i], 1);
for (i = ncolors - 1; i >= 0; i --)
cupsImageWhiteToBlack(cmap[i], cmap[i], 1);
for (i = ncolors - 1; i >= 0; i --)
cupsImageWhiteToRGB(cmap[i], cmap[i], 1);
for (i = ncolors - 1; i >= 0; i --)
cupsImageRGBAdjust(cmap[i], 1, saturation, hue);
for (i = ncolors - 1; i >= 0; i --)
cupsImageRGBToCMYK(cmap[i], cmap[i], 1);
for (i = ncolors - 1; i >= 0; i --)
cupsImageRGBToCMY(cmap[i], cmap[i], 1);
for (i = ncolors - 1; i >= 0; i --)
cupsImageRGBToBlack(cmap[i], cmap[i], 1);
for (i = ncolors - 1; i >= 0; i --)
cupsImageRGBToWhite(cmap[i], cmap[i], 1);
for (i = ncolors - 1; i >= 0; i --)
cupsImageRGBToRGB(cmap[i], cmap[i], 1);
for (i = ncolors - 1; i >= 0; i --)
cupsImageLut(cmap[i], bpp, lut);
static int	gif_read_image(FILE *fp, cups_image_t *img, gif_cmap_t cmap,
fclose(fp);
