get_ieee_float(guint32 w)
exponent = w & IEEE_SP_EXPONENT_MASK;
exponent = ((exponent >> IEEE_SP_MANTISSA_WIDTH) - IEEE_SP_BIAS) -
IEEE_SP_MANTISSA_WIDTH;
exponent = ((exponent >> IEEE_SP_MANTISSA_WIDTH) - IEEE_SP_BIAS) -
return -mantissa * pow(2, exponent);
tvb_get_letohieee_float(tvbuff_t *tvb, int offset)
return get_ieee_float(tvb_get_letohl(tvb, offset));
tvb_get_letohl(tvbuff_t *tvb, gint offset)
ptr = fast_ensure_contiguous(tvb, offset, sizeof(guint32));
fast_ensure_contiguous(tvbuff_t *tvb, gint offset, guint length)
DISSECTOR_ASSERT(tvb && tvb->initialized);
return ensure_contiguous(tvb, offset, length);
u_offset = offset;
return tvb->real_data + u_offset;
return 0;
ptr = fast_ensure_contiguous(tvb, offset, sizeof(guint32));
return pntohl(ptr);
return get_ieee_float(tvb_get_ntohl(tvb, offset));
ptr = fast_ensure_contiguous(tvb, offset, sizeof(guint32));
return pletohl(ptr);
return get_ieee_float(tvb_get_letohl(tvb, offset));
tvb_get_ntohieee_float(tvbuff_t *tvb, int offset)
return get_ieee_float(tvb_get_ntohl(tvb, offset));
tvb_get_ntohl(tvbuff_t *tvb, gint offset)
ptr = fast_ensure_contiguous(tvb, offset, sizeof(guint32));
