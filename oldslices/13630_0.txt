file_size = (uint32_t)avio_rl32(pb);
size = avio_rl32(pb);
nsv->duration = duration = avio_rl32(pb);
strings_size = avio_rl32(pb);
char *strings;
char *p, *endp;
p = strings = av_mallocz((size_t)strings_size + 1);
if (!p)
return AVERROR(ENOMEM);
endp = strings + strings_size;
avio_read(pb, strings, strings_size);
while (p < endp)
p = strchr(p, '=');
p = strchr(p, quote);
*p++ = '\0';
av_dict_set(&s->metadata, token, value, 0);
av_dlog(s, "NSV %d INDEX ENTRIES:\n", table_entries);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_file_offset[i] = avio_rl32(pb) + size;
if (!nsv->nsvs_file_offset)
return AVERROR(ENOMEM);
if(table_entries > table_entries_used && avio_rl32(pb) == MKTAG('T','O','C','2'))
nsv->nsvs_timestamps = av_malloc((unsigned)table_entries_used*sizeof(uint32_t));
if (!nsv->nsvs_timestamps)
return AVERROR(ENOMEM);
for(i=0;i<table_entries_used;i++)
nsv->nsvs_timestamps[i] = avio_rl32(pb);
