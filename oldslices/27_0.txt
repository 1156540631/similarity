nsIFrame* aOldFrame)
nsFrame::ListTag(stdout, aOldFrame);
bool hasFloats = BlockHasAnyFloats(aOldFrame);
rv = DoRemoveFrame(aOldFrame, REMOVE_FIXED_CONTINUATIONS);
return DoRemoveFrame(aOldFrame, REMOVE_FIXED_CONTINUATIONS);
if (line->Contains(aDeletedFrame)) {
NS_ASSERTION(this == aDeletedFrame->GetParent(), "messed up delete code");
NS_ASSERTION(line->Contains(aDeletedFrame), "frame not in line");
line->mFirstChild = aDeletedFrame->GetNextSibling();
overflowLines->mFrames.RemoveFrame(aDeletedFrame);
mFrames.RemoveFrame(aDeletedFrame);
line->NoteFrameRemoved(aDeletedFrame);
aDeletedFrame->GetNextContinuation() : aDeletedFrame->GetNextInFlow();
nsIFrame* deletedNextContinuation = (aFlags & REMOVE_FIXED_CONTINUATIONS) ?
nsFrame::ListTag(stdout, aDeletedFrame);
aDeletedFrame->GetPrevSibling(), deletedNextContinuation);
deletedNextContinuation->GetStateBits() & NS_FRAME_IS_OVERFLOW_CONTAINER) {
deletedNextContinuation = nullptr;
aDeletedFrame = deletedNextContinuation;
NS_ASSERTION(this == aDeletedFrame->GetParent(), "messed up delete code");
NS_ASSERTION(line->Contains(aDeletedFrame), "frame not in line");
mFrames.RemoveFrame(aDeletedFrame);
line->NoteFrameRemoved(aDeletedFrame);
aDeletedFrame->GetNextContinuation() : aDeletedFrame->GetNextInFlow();
nsIFrame* deletedNextContinuation = (aFlags & REMOVE_FIXED_CONTINUATIONS) ?
nsFrame::ListTag(stdout, aDeletedFrame);
aDeletedFrame->GetPrevSibling(), deletedNextContinuation);
nsIFrame*      aNextInFlow,
NS_PRECONDITION(aNextInFlow->GetPrevInFlow(), "bad next-in-flow");
if (aNextInFlow->GetStateBits() &
nsLayoutUtils::AssertTreeOnlyEmptyNextInFlows(aNextInFlow);
DoRemoveFrame(aNextInFlow,
static nsresult RemoveBlockChild(nsIFrame* aFrame,
nsBlockFrame* nextBlock = nsLayoutUtils::GetAsBlock(aFrame->GetParent());
return nextBlock->DoRemoveFrame(aFrame,
nsBlockFrame::DoRemoveFrame(nsIFrame* aDeletedFrame, uint32_t aFlags)
if (aDeletedFrame->GetStateBits() &
NS_ASSERTION(this == aDeletedFrame->GetParent(), "messed up delete code");
NS_ASSERTION(line->Contains(aDeletedFrame), "frame not in line");
mFrames.RemoveFrame(aDeletedFrame);
line->NoteFrameRemoved(aDeletedFrame);
aDeletedFrame->GetNextContinuation() : aDeletedFrame->GetNextInFlow();
nsIFrame* deletedNextContinuation = (aFlags & REMOVE_FIXED_CONTINUATIONS) ?
nsFrame::ListTag(stdout, aDeletedFrame);
aDeletedFrame->GetPrevSibling(), deletedNextContinuation);
