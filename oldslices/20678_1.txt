stonesoup_tainted_file_name = getenv(stonesoup_env_var_name);
stonesoup_tainted_file = fopen(stonesoup_tainted_file_name,"rb");
if (stonesoup_tainted_file != 0) {
fseek(stonesoup_tainted_file,0L,2);
stonesoup_lsize = ftell(stonesoup_tainted_file);
rewind(stonesoup_tainted_file);
*stonesoup_tainted_buff = ((char *)(malloc(sizeof(char ) * (stonesoup_lsize + 1))));
if (*stonesoup_tainted_buff != 0) {
stonesoup_result = fread(*stonesoup_tainted_buff,1,stonesoup_lsize,stonesoup_tainted_file);
if (stonesoup_tainted_file != 0) {
fclose(stonesoup_tainted_file);
stonesoup_read_taint(&commutating_persicaria,"REVOCATION_CONSUMPTIBLE");
if (commutating_persicaria != 0) {;
danyelle_dulcetly = ((char *)commutating_persicaria);
stonesoup_taint_len = ((int )(strlen(danyelle_dulcetly)));
for (; stonesoup_taint_len >= 0; (--stonesoup_buff_size , --stonesoup_taint_len)) {
stonesoup_heap_buff_64[stonesoup_buff_size] = danyelle_dulcetly[stonesoup_taint_len];
tracepoint(stonesoup_trace, variable_buffer, "stonesoup_heap_buff_64", stonesoup_heap_buff_64, "CROSSOVER-STATE");
stonesoup_heap_buff_64[stonesoup_i] = stonesoup_toupper(stonesoup_heap_buff_64[stonesoup_i]);
stonesoup_printf("%s\n",&(stonesoup_heap_buff_64[stonesoup_buff_size+1]));
free(stonesoup_heap_buff_64);
tracepoint(stonesoup_trace, variable_buffer, "stonesoup_heap_buff_64", stonesoup_heap_buff_64, "FINAL-STATE");
if (commutating_persicaria != 0)
free(((char *)commutating_persicaria));
int stonesoup_toupper(int c)
if (c >= 97 && c <= 122) {
return c - 32;
return c;
stonesoup_heap_buff_64[stonesoup_i] = stonesoup_toupper(stonesoup_heap_buff_64[stonesoup_i]);
stonesoup_printf("%s\n",&(stonesoup_heap_buff_64[stonesoup_buff_size+1]));
void stonesoup_printf(char * format, ...) {
stonesoup_printf("%s\n",&(stonesoup_heap_buff_64[stonesoup_buff_size+1]));
