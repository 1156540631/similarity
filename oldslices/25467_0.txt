return input_streams[ost -> source_index];
int n = 1;
int64_t *pts;
size = n;
pts = (av_malloc(sizeof(( *pts)) * size));
char *next = strchr(p,',');
*(next++) = 0;
if (avf -> nb_chapters > (2147483647 - size) || !(pts = (av_realloc_f(pts,(size += avf -> nb_chapters - 1),sizeof(( *pts)))))) {
AVChapter *c = avf -> chapters[j];
pts[index++] = av_rescale_q(c -> start,c -> time_base,avctx -> time_base) + t;
p = next;
char *next = strchr(p,',');
if (!memcmp(p,"chapters",8)) {
t = (p[8]?parse_time_or_die("force_key_frames",(p + 8),1) : 0);
pts[index++] = av_rescale_q(c -> start,c -> time_base,avctx -> time_base) + t;
qsort(pts,size,sizeof(( *pts)),compare_int64);
ost -> forced_kf_pts = pts;
input_streams[j + ifile -> ist_index] -> start = av_gettime();
ost = output_streams[i];
ist = get_input_stream(ost);
return ((void *)0);
for (i = 0; i < nb_output_streams; i++) {
ist = get_input_stream(ost);
ost -> st -> disposition = ist -> st -> disposition;
if (copy_tb < 0 && av_q2d(ist -> st -> r_frame_rate) >= av_q2d(ist -> st -> avg_frame_rate) && 0.5 / av_q2d(ist -> st -> r_frame_rate) > av_q2d(ist -> st -> time_base) && 0.5 / av_q2d(ist -> st -> r_frame_rate) > av_q2d(icodec -> time_base) && av_q2d(ist -> st -> time_base) < 1.0 / 500 && av_q2d(icodec -> time_base) < 1.0 / 500 || copy_tb == 2) {
ost -> st -> avg_frame_rate = ist -> st -> avg_frame_rate;
ost -> enc = avcodec_find_encoder(codec -> codec_id);
snprintf(error,sizeof(error),"Encoder (codec %s) not found for output stream #%d:%d",avcodec_get_name(ost -> st -> codec -> codec_id),ost -> file_index,ost -> index);
ost -> encoding_needed = 1;
ost -> frame_rate = av_buffersink_get_frame_rate(ost -> filter -> filter);
ost -> frame_rate = ist -> framerate;
int idx = av_find_nearest_q_idx(ost -> frame_rate,ost -> enc -> supported_framerates);
ost -> frame_rate = ost -> enc -> supported_framerates[idx];
codec -> channels = avfilter_link_get_channels(ost -> filter -> filter -> inputs[0]);
codec -> time_base = av_inv_q(ost -> frame_rate);
codec -> width = ost -> filter -> filter -> inputs[0] -> w;
codec -> height = ost -> filter -> filter -> inputs[0] -> h;
codec -> sample_aspect_ratio = ost -> st -> sample_aspect_ratio = (ost -> frame_aspect_ratio?av_d2q((ost -> frame_aspect_ratio * (codec -> height) / (codec -> width)),255) : ost -> filter -> filter -> inputs[0] -> sample_aspect_ratio);
if (!strncmp((ost -> forced_keyframes),"expr:",5)) {
parse_forced_key_frames(ost -> forced_keyframes,ost,ost -> st -> codec);
char logfilename[1024];
snprintf(logfilename,sizeof(logfilename),"%s-%d.log",(ost -> logfile_prefix?ost -> logfile_prefix : "ffmpeg2pass"),i);
static void parse_forced_key_frames(char *kf,OutputStream *ost,AVCodecContext *avctx)
p = kf;
char *next = strchr(p,',');
if (!memcmp(p,"chapters",8)) {
t = (p[8]?parse_time_or_die("force_key_frames",(p + 8),1) : 0);
pts[index++] = av_rescale_q(c -> start,c -> time_base,avctx -> time_base) + t;
if (avf -> nb_chapters > (2147483647 - size) || !(pts = (av_realloc_f(pts,(size += avf -> nb_chapters - 1),sizeof(( *pts)))))) {
qsort(pts,size,sizeof(( *pts)),compare_int64);
ost -> forced_kf_pts = pts;
parse_forced_key_frames(ost -> forced_keyframes,ost,ost -> st -> codec);
fg = init_simple_filtergraph(ist,ost);
parse_forced_key_frames(ost -> forced_keyframes,ost,ost -> st -> codec);
snprintf(logfilename,sizeof(logfilename),"%s-%d.log",(ost -> logfile_prefix?ost -> logfile_prefix : "ffmpeg2pass"),i);
static void parse_forced_key_frames(char *kf,OutputStream *ost,AVCodecContext *avctx)
parse_forced_key_frames(ost -> forced_keyframes,ost,ost -> st -> codec);
snprintf(logfilename,sizeof(logfilename),"%s-%d.log",(ost -> logfile_prefix?ost -> logfile_prefix : "ffmpeg2pass"),i);
static InputStream *get_input_stream(OutputStream *ost)
ist = get_input_stream(ost);
snprintf(logfilename,sizeof(logfilename),"%s-%d.log",(ost -> logfile_prefix?ost -> logfile_prefix : "ffmpeg2pass"),i);
