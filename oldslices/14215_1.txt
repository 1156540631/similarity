static void vmsvga_fifo_run(struct vmsvga_state_s *s)
struct vmsvga_cursor_definition_s cursor;
int x, y, dx, dy, width, height;
x = vmsvga_fifo_read(s);
y = vmsvga_fifo_read(s);
cursor.id = vmsvga_fifo_read(s);
cursor.hot_x = vmsvga_fifo_read(s);
cursor.hot_y = vmsvga_fifo_read(s);
cursor.width = x = vmsvga_fifo_read(s);
cursor.height = y = vmsvga_fifo_read(s);
vmsvga_fifo_read(s);
cursor.bpp = vmsvga_fifo_read(s);
if (cursor.width > 256 ||
cursor.height > 256 ||
cursor.bpp > 32 ||
SVGA_BITMAP_SIZE(x, y) > sizeof cursor.mask ||
SVGA_PIXMAP_SIZE(x, y, cursor.bpp) > sizeof cursor.image) {
goto badcmd;}
vmsvga_cursor_define(s, &cursor);
static inline void vmsvga_cursor_define(struct vmsvga_state_s *s,struct vmsvga_cursor_definition_s *c)
struct vmsvga_cursor_definition_s *dataCopy = c;
c = dataCopy;
fprintf(stderr, "%s: unhandled bpp %d, using fallback cursor\n",__func__, c->bpp);
