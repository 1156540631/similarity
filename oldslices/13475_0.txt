void NetworkUtils::setInterfaceDns(CommandChain* aChain, ommandCallback aCallback,NetworkResultOptions& aResult)
char command[MAX_COMMAND_SIZE];
int written;
if (SDK_VERSION >= 20) {
written = PR_snprintf(command, sizeof command, "resolver setnetdns %d %s",
GET_FIELD(mNetId), GET_CHAR(mDomain));
nsTArray<nsString>& dnses = GET_FIELD(mDnses);
uint32_t length = dnses.Length();
for (uint32_t i = 0; i < length; i++) {
structType myStruct;
myStruct.structFirst = dnses;
NS_ConvertUTF16toUTF8 autoDns = func(myStruct, i);
nsTArray func(structType myStruct, uint32_t i)
nsTArray<nsString>& dnses = myStruct.structFirst;
return dnses[i];
NS_ConvertUTF16toUTF8 autoDns = func(myStruct, i);
int ret = PR_snprintf(command + written, sizeof(command) - written, " %s", autoDns.get());
