int  _AVI_ChunkRead( stream_t *s, avi_chunk_t *p_chk, avi_chunk_t *p_father )
if( AVI_ChunkReadCommon( s, p_chk ) )
static int AVI_ChunkReadCommon( stream_t *s, avi_chunk_t *p_chk )
if( ( i_peek = stream_Peek( s, &p_peek, 8 ) ) < 8 )
p_chk->common.i_chunk_pos    = stream_Tell( s );
AVI_READCHUNK_ENTER;
AVI_READ2BYTES( p_indx->i_longsperentry );
AVI_READ1BYTE ( p_indx->i_indexsubtype );
AVI_READ4BYTES( p_indx->i_id );
AVI_READ8BYTES( p_indx->i_baseoffset );
AVI_READ4BYTES( i_dummy );
i_count = __MIN( p_indx->i_entriesinuse, i_read / 12 );
p_indx->idx.field = calloc( sizeof( indx_field_entry_t ), i_count );
if( AVI_ChunkReadCommon( s, p_chk ) )
return AVI_ChunkRead_indx( s, p_chk );
static int AVI_ChunkRead_indx( stream_t *s, avi_chunk_t *p_chk )
AVI_READCHUNK_ENTER;
i_count = __MIN( p_indx->i_entriesinuse, i_read / 12 );
p_indx->idx.field = calloc( sizeof( indx_field_entry_t ), i_count );
static inline uint8_t GetB( uint8_t *ptr )
AVI_READ1BYTE ( p_indx->i_indextype );
static inline uint8_t GetB( uint8_t *ptr )
AVI_READ4BYTES( p_indx->i_entriesinuse );
i_count = __MIN( p_indx->i_entriesinuse, i_read / 12 );
p_indx->idx.field = calloc( sizeof( indx_field_entry_t ), i_count );
