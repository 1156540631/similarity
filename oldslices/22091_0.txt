bit_rate = ctx -> bit_rate;
char tag_buf[32];
av_get_codec_tag_string(tag_buf,sizeof(tag_buf),enc -> codec_tag);
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %dx%d",enc -> width,enc -> height);
av_reduce(&display_aspect_ratio . num,&display_aspect_ratio . den,(enc -> width * enc -> sample_aspect_ratio . num),(enc -> height * enc -> sample_aspect_ratio . den),(1024 * 1024));
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %s",av_get_sample_fmt_name(enc -> sample_fmt));
bitrate = get_bit_rate(enc);
return 4;
return 8;
return 16;
return 24;
return 32;
return 0;
return 2;
return 3;
return 4;
return av_get_exact_bits_per_sample(codec_id);
bits_per_sample = av_get_bits_per_sample(ctx -> codec_id);
return 64;
return av_get_exact_bits_per_sample(codec_id);
bit_rate = (bits_per_sample?ctx -> sample_rate * ctx -> channels * bits_per_sample : ctx -> bit_rate);
bit_rate = 0;
return bit_rate;
len = snprintf(buf,buf_size,(((codec_tag & 0xff) >= 48 && (codec_tag & 0xff) <= '9' || (codec_tag & 0xff) >= 'a' && (codec_tag & 0xff) <= 'z' || (codec_tag & 0xff) >= 'A' && (codec_tag & 0xff) <= 'Z' || ((codec_tag & 0xff) == '.' || (codec_tag & 0xff) == 32 || (codec_tag & 0xff) == '-' || (codec_tag & 0xff) == '_')?"%c" : "[%d]")),codec_tag & 0xff);
buf += len;
codec_tag >>= 8;
const char *profile = ((void *)0);
return ((void *)0);
return ((void *)0);
profile = av_get_profile_name(p,enc -> profile);
buf[0] ^= 'a' ^ 'A';
snprintf(buf + strlen(buf),buf_size - strlen(buf)," (%s)",profile);
snprintf(buf + strlen(buf),buf_size - strlen(buf)," (%s / 0x%04X)",tag_buf,enc -> codec_tag);
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %s",av_get_pix_fmt_name(enc -> pix_fmt));
snprintf(buf + strlen(buf),buf_size - strlen(buf)," (%d bpc)",enc -> bits_per_raw_sample);
snprintf(buf + strlen(buf),buf_size - strlen(buf)," [SAR %d:%d DAR %d:%d]",enc -> sample_aspect_ratio . num,enc -> sample_aspect_ratio . den,display_aspect_ratio . num,display_aspect_ratio . den);
int g = (av_gcd(enc -> time_base . num,enc -> time_base . den));
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %d/%d",enc -> time_base . num / g,enc -> time_base . den / g);
snprintf(buf + strlen(buf),buf_size - strlen(buf),", q=%d-%d",enc -> qmin,enc -> qmax);
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %d Hz",enc -> sample_rate);
av_strlcat(buf,", ",buf_size);
av_get_channel_layout_string(buf + strlen(buf),(buf_size - strlen(buf)),enc -> channels,enc -> channel_layout);
int g = (av_gcd(enc -> time_base . num,enc -> time_base . den));
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %d/%d",enc -> time_base . num / g,enc -> time_base . den / g);
snprintf(buf + strlen(buf),buf_size - strlen(buf),", pass 1");
snprintf(buf + strlen(buf),buf_size - strlen(buf),", pass 2");
bitrate = get_bit_rate(enc);
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %d kb/s",bitrate / 1000);
static int get_bit_rate(AVCodecContext *ctx)
bit_rate = (bits_per_sample?ctx -> sample_rate * ctx -> channels * bits_per_sample : ctx -> bit_rate);
return bit_rate;
bitrate = get_bit_rate(enc);
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %d kb/s",bitrate / 1000);
size_t av_get_codec_tag_string(char *buf,size_t buf_size,unsigned int codec_tag)
snprintf(buf + strlen(buf),buf_size - strlen(buf)," (%s / 0x%04X)",tag_buf,enc -> codec_tag);
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %s",av_get_pix_fmt_name(enc -> pix_fmt));
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %d kb/s",bitrate / 1000);
void avcodec_string(char *buf,int buf_size,AVCodecContext *enc,int encode)
snprintf(buf,buf_size,"%s: %s%s",(codec_type?codec_type : "unknown"),codec_name,(enc -> mb_decision?" (hq)" : ""));
snprintf(buf + strlen(buf),buf_size - strlen(buf),", %d kb/s",bitrate / 1000);
