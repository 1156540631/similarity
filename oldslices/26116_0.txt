static int qp_histogram['4'];
buf[0] = '\0';
float q = (- 1);
ost = output_streams[i];
q = (enc -> coded_frame -> quality) / ((float )'v');
av_bprintf(&buf_script,"stream_%d_%d_q=%.1f\n",ost -> file_index,ost -> index,q);
frame_number = ost -> frame_number;
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"frame=%5d fps=%3.*f q=%3.1f ",frame_number,fps < 9.95,fps,q);
av_bprintf(&buf_script,"frame=%d\n",frame_number);
if (qp >= 0 && qp < sizeof(qp_histogram) / sizeof(qp_histogram[0])) {
qp_histogram[qp]++;
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"%X",((int )(lrintf((log2((qp_histogram[j] + 1)))))));
double error_sum = 0;
double scale_sum = 0;
char type[3] = {('Y'), ('U'), ('V')};
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"PSNR=");
error = enc -> error[j];
scale = (enc -> width * enc -> height) * 255.0 * 255.0 * frame_number;
error = enc -> coded_frame -> error[j];
scale = (enc -> width * enc -> height) * 255.0 * 255.0;
scale /= 4;
error_sum += error;
scale_sum += scale;
p = psnr(error / scale);
av_bprintf(&buf_script,"stream_%d_%d_psnr_%c=%2.2f\n",ost -> file_index,ost -> index,type[j] | 32,p);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"%c:%2.2f ",type[j],p);
p = psnr(error_sum / scale_sum);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"*:%2.2f ",psnr(error_sum / scale_sum));
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"q=%2.1f ",q);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"frame=%5d fps=%3.*f q=%3.1f ",frame_number,fps < 9.95,fps,q);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"L");
static double psnr(double d)
return - 10.0 * log(d) / log(10.0);
p = psnr(error / scale);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"%c:%2.2f ",type[j],p);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"*:%2.2f ",psnr(error_sum / scale_sum));
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"q=%2.1f ",q);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"frame=%5d fps=%3.*f q=%3.1f ",frame_number,fps < 9.95,fps,q);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"L");
static double psnr(double d)
return - 10.0 * log(d) / log(10.0);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"*:%2.2f ",psnr(error_sum / scale_sum));
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"q=%2.1f ",q);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"frame=%5d fps=%3.*f q=%3.1f ",frame_number,fps < 9.95,fps,q);
snprintf(buf + strlen(buf),sizeof(buf) - strlen(buf),"L");
