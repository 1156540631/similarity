path->data = NULL;
path->size = 0;
err = v9fs_co_open(pdu, f, f->open_flags);
err = v9fs_co_opendir(pdu, f);
for (f = s->fid_list; f; f = f->next) {
BUG_ON(f->clunked);
f->ref++;
err = v9fs_reopen_fid(pdu, f);
return NULL;
f->flags |= FID_REFERENCED;
return f;
return NULL;
fidp = get_fid(pdu, fid);
err = v9fs_mark_fids_unreclaim(pdu, &fidp->path);
V9fsPath path;
v9fs_path_init(&path);
err = v9fs_co_name_to_path(pdu, &dfidp->path, name.data, &path);
err = v9fs_mark_fids_unreclaim(pdu, &path);
static int v9fs_mark_fids_unreclaim(V9fsPDU *pdu, V9fsPath *path)
if (!memcmp(fidp->path.data, path->data, path->size)) {
void v9fs_path_init(V9fsPath *path)
v9fs_path_init(&path);
err = v9fs_mark_fids_unreclaim(pdu, &path);
static int v9fs_reopen_fid(V9fsPDU *pdu, V9fsFidState *f)
err = v9fs_reopen_fid(pdu, f);
return f;
fidp = get_fid(pdu, fid);
err = v9fs_mark_fids_unreclaim(pdu, &fidp->path);
